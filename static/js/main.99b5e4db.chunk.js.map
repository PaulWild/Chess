{"version":3,"sources":["App.module.css","components/promotion/Promotion.module.css","components/draggable.module.css","components/draggable.tsx","components/classic_pieces/bishop_black.tsx","components/classic_pieces/bishop_white.tsx","components/classic_pieces/king_black.tsx","components/classic_pieces/king_white.tsx","components/classic_pieces/knight_black.tsx","components/classic_pieces/knight_white.tsx","components/classic_pieces/pawn_black.tsx","components/classic_pieces/pawn_white.tsx","components/classic_pieces/queen_black.tsx","components/classic_pieces/queen_white.tsx","components/classic_pieces/rook_black.tsx","components/classic_pieces/rook_white.tsx","engine/types.ts","components/classic_pieces/index.tsx","engine/square.ts","engine/board.ts","engine/validators/baseValidator.ts","engine/validators/bishopValidator.ts","engine/validators/kingValidator.ts","engine/validators/knightValidator.ts","engine/validators/pawnValidator.ts","engine/validators/rookValidator.ts","engine/validators/queenValidator.ts","engine/validators/index.ts","engine/pieces.ts","engine/initial-board.ts","engine/fen/index.ts","components/game-context.tsx","engine/game.ts","components/promotion/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Draggable","children","boundingBox","onMouseDown","onMouseMove","onMouseUp","useState","x","y","pressed","initial","setInitial","position","setPosition","ref","useRef","useEffect","current","style","transform","onMouseUpCallback","React","useCallback","onMouseMoveCallback","eventAction","ev","type","touches","Math","max","min","pageX","right","left","pageY","bottom","top","dx","dy","activeCallback","document","addEventListener","removeEventListener","onMouseDownCallback","box","getBoundingClientRect","initX","initY","width","height","className","Styles","active","onTouchStart","BishopBlack","props","xmlns","viewBox","fill","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","BishopWhite","KingBlack","KingWhite","KnightBlack","KnightWhite","PawnBlack","PawnWhite","QueenBlack","cx","cy","r","QueenWhite","RookBlack","RookWhite","CastlingRights","Black","King","Queen","Knight","Bishop","Pawn","Rook","White","Square","rank","file","piece","_piece","this","RankArray","FileArray","RankMap","squareIndex","Board","initialPositions","map","undefined","_board","_boardMap","buildBoardMap","squares","filter","forEach","clone","move","from","to","squareFromPiece","getPieceAt","Error","remove","placeAt","square","getPieces","colour","Object","values","invalidMove","BaseValidator","game","enPassantTarget","castlingRights","getMoveAtPosition","rankDelta","fileDelta","newFile","indexOf","newRank","checkPosition","canTakeAt","canMoveTo","isStandardMove","item","board","allMoves","potentialMoves","i","BishopValidator","getMovesOnLine","KingValidator","castlingDeltas","moveDeltas","rd","fd","canCastle","kingRank","side","None","k","q","K","Q","every","KnightValidator","PawnValidator","increment","pieceMoved","captureDeltas","validRank","canMoveOne","captures","push","capture","RookValidator","QueenValidator","getMoveValidator","enPessantTarget","pieceType","BasePiece","buildBoard","flatMap","sqaure","find","place","boardAsFenPlacement","ranks","count","rankString","str","toUpperCase","join","state","fullMoves","halfMoves","castlingAbility","enPassantSquare","_intState","seenBoardPositions","Game","pieces","king","rest","validators","CastlingAbility","potential","p","pawn","changeState","madeMove","move2","kingInCheck","kingPosition","moves","promotionRank","some","canMove","rookFrom","rookTo","boardFen","colourMove","includes","hasPieceToPromote","checkMate","staleMate","initialState","GameContext","createContext","reducer","action","activePiece","payload","threatenedSquare","promote","GameContextProvider","useReducer","dispatch","Provider","value","Promotion","promoteCallback","set","styles","promotionSection","chessRow","chessSquare","onClick","GridPosition","bound","useContext","DraggableContext","inBound","setInBound","isLight","isLightSquare","Piece","currentBoard","pieceHover","pieceActivated","light","highlighted","gameStateAsString","chessGrid","setBound","onWindowResize","useOnWindowResize","container","f","infoPane","App","handleResize","window","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99b5e4db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Hag2\",\"chessGrid\":\"App_chessGrid__3cPOC\",\"chessSquare\":\"App_chessSquare__SDQaO\",\"light\":\"App_light__3AKuB\",\"highlighted\":\"App_highlighted__19TOk\",\"rank\":\"App_rank__3KL7s\",\"file\":\"App_file__3wQ0V\",\"infoPane\":\"App_infoPane__11ld2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"promotionSection\":\"Promotion_promotionSection__2kVma\",\"chessSquare\":\"Promotion_chessSquare__35EZO\",\"chessRow\":\"Promotion_chessRow__22-_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"draggable_active__3TbHp\"};","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Styles from \"./draggable.module.css\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  boundingBox?: DOMRect;\r\n  onMouseDown?: (x: number, y: number) => void;\r\n  onMouseMove?: (x: number, y: number) => void;\r\n  onMouseUp?: (x: number, y: number) => void;\r\n};\r\n\r\nexport const Draggable = ({\r\n  children,\r\n  boundingBox,\r\n  onMouseDown,\r\n  onMouseMove,\r\n  onMouseUp,\r\n}: Props) => {\r\n  const [initial, setInitial] = useState({ x: 0, y: 0, pressed: false });\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current && initial.pressed) {\r\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`;\r\n    } else if (ref.current) {\r\n      ref.current.style.transform = \"\";\r\n    }\r\n  }, [position, initial.pressed]);\r\n\r\n  const onMouseUpCallback = React.useCallback((): void => {\r\n    setInitial({ x: 0, y: 0, pressed: false });\r\n    setPosition({ x: 0, y: 0 });\r\n    onMouseUp?.(-1, -1);\r\n  }, [onMouseUp]);\r\n\r\n  const onMouseMoveCallback = React.useCallback(\r\n    (eventAction: MouseEvent | TouchEvent): void => {\r\n      let ev;\r\n      if (eventAction.type === \"mousemove\") {\r\n        ev = eventAction as MouseEvent;\r\n      } else {\r\n        ev = (eventAction as TouchEvent).touches[0];\r\n      }\r\n\r\n      const x = boundingBox\r\n        ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n        : ev.pageX;\r\n      const y = boundingBox\r\n        ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n        : ev.pageY;\r\n\r\n      const dx = x - initial.x;\r\n      const dy = y - initial.y;\r\n\r\n      onMouseMove?.(x, y);\r\n      setPosition({\r\n        x: dx,\r\n        y: dy,\r\n      });\r\n    },\r\n    [initial, boundingBox, onMouseMove]\r\n  );\r\n  const activeCallback = useRef(onMouseMoveCallback);\r\n\r\n  useEffect(() => {\r\n    if (initial.pressed) {\r\n      activeCallback.current = onMouseMoveCallback;\r\n      document.addEventListener(\"mousemove\", onMouseMoveCallback);\r\n      document.addEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.addEventListener(\"touchmove\", onMouseMoveCallback);\r\n      document.addEventListener(\"touchend\", onMouseUpCallback);\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", activeCallback.current);\r\n      document.removeEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.removeEventListener(\"touchmove\", activeCallback.current);\r\n      document.removeEventListener(\"touchend\", onMouseUpCallback);\r\n    }\r\n  }, [initial.pressed, onMouseMoveCallback, onMouseUpCallback]);\r\n\r\n  const onMouseDownCallback = (\r\n    eventAction: React.MouseEvent | React.TouchEvent\r\n  ) => {\r\n    let ev;\r\n    if (eventAction.type === \"mousedown\") {\r\n      ev = eventAction as React.MouseEvent;\r\n    } else {\r\n      ev = (eventAction as React.TouchEvent).touches[0];\r\n    }\r\n    const box = ref.current?.getBoundingClientRect();\r\n\r\n    let initX = ev.pageX;\r\n    let initY = ev.pageY;\r\n\r\n    if (box) {\r\n      initX = box?.x + box?.width / 2;\r\n      initY = box?.y + box?.height / 2;\r\n    }\r\n\r\n    const x = boundingBox\r\n      ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n      : ev.pageX;\r\n    const y = boundingBox\r\n      ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n      : ev.pageY;\r\n\r\n    const dx = x - initX;\r\n    const dy = y - initY;\r\n\r\n    setPosition({ x: dx, y: dy });\r\n    onMouseDown?.(x, y);\r\n    setInitial({ x: initX, y: initY, pressed: true });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={initial.pressed ? Styles.active : \"\"}\r\n      ref={ref}\r\n      onMouseDown={onMouseDownCallback}\r\n      onTouchStart={onMouseDownCallback}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nfunction BishopBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#000\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          stroke=\"#fff\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction BishopWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#fff\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KingBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#000\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#000\"\r\n        />\r\n        <path d=\"M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M32 29.5s8.5-4 6.03-9.65C34.15 14 25 18 22.5 24.5v2.1-2.1C20 18 10.85 14 6.97 19.85 4.5 25.5 13 29.5 13 29.5\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M12.5 30c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0\"\r\n          stroke=\"#fff\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KingWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#fff\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M12.5 30c5.5-3 14.5-3 20 0M12.5 33.5c5.5-3 14.5-3 20 0M12.5 37c5.5-3 14.5-3 20 0\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#000\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#000\"\r\n        />\r\n        <path\r\n          d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1.49997}\r\n        />\r\n        <path\r\n          d=\"M24.55 10.4l-.45 1.45.5.15c3.15 1 5.65 2.49 7.9 6.75S35.75 29.06 35.25 39l-.05.5h2.25l.05-.5c.5-10.06-.88-16.85-3.25-21.34-2.37-4.49-5.79-6.64-9.19-7.16l-.51-.1z\"\r\n          fill=\"#fff\"\r\n          stroke=\"none\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#fff\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\" fill=\"#000\" />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#000\"\r\n          strokeWidth={1.49997}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightWhite);\r\n","import * as React from \"react\";\r\n\r\nconst PawnBlack = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(PawnBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction PawnWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        fill=\"#fff\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(PawnWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0zM11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\" />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n        <path d=\"M11 38.5a35 35 1 0023 0\" fill=\"none\" strokeLinecap=\"butt\" />\r\n        <g fill=\"none\" stroke=\"#fff\">\r\n          <path d=\"M11 29a35 35 1 0123 0M12.5 31.5h20M11.5 34.5a35 35 1 0022 0M10.5 37.5a35 35 1 0024 0\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#fff\" stroke=\"#000\" strokeWidth={1.5} strokeLinejoin=\"round\">\r\n        <path d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\" />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0z\" />\r\n        <path\r\n          d=\"M11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\"\r\n          fill=\"none\"\r\n        />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction RookBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12.5 32l1.5-2.5h17l1.5 2.5h-20zM12 36v-4h21v4H12z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M14 29.5v-13h17v13H14z\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M14 16.5L11 14h23l-3 2.5H14zM11 14V9h4v2h5V9h5v2h5V9h4v5H11z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M12 35.5h21M13 31.5h19M14 29.5h17M14 16.5h17M11 14h23\"\r\n          fill=\"none\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1}\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction RookWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"#fff\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12 36v-4h21v4H12zM11 14V9h4v2h5V9h5v2h5V9h4v5\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M34 14l-3 3H14l-3-3\" />\r\n        <path\r\n          d=\"M31 17v12.5H14V17\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path d=\"M31 29.5l1.5 2.5h-20l1.5-2.5\" />\r\n        <path d=\"M11 14h23\" fill=\"none\" strokeLinejoin=\"miter\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookWhite);\r\n","import { IPiece } from \"./pieces\";\r\n\r\nexport type PiecePosition = {\r\n  position: Position;\r\n  piece: IPiece;\r\n};\r\n\r\nexport type PieceType =\r\n  | \"ROOK\"\r\n  | \"KNIGHT\"\r\n  | \"BISHOP\"\r\n  | \"KING\"\r\n  | \"QUEEN\"\r\n  | \"PAWN\";\r\n\r\nexport type PieceColour = \"WHITE\" | \"BLACK\";\r\n\r\nexport type Rank = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n\r\nexport type File = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\";\r\n\r\nexport type Position = {\r\n  rank: Rank;\r\n  file: File;\r\n};\r\n\r\nexport type StandardMove = {\r\n  move: \"Move\";\r\n} & Position;\r\n\r\nexport type PawnPush = {\r\n  move: \"PawnPush\";\r\n} & Position;\r\n\r\nexport type Capture = {\r\n  move: \"Capture\";\r\n} & Position;\r\n\r\nexport type CaptureEnPassant = {\r\n  move: \"CaptureEnPassant\";\r\n} & Position;\r\n\r\nexport type Castle = {\r\n  move: \"Castle\";\r\n  type: \"SHORT\" | \"LONG\";\r\n  colour: \"WHITE\" | \"BLACK\";\r\n} & Position;\r\n\r\nexport type InvalidMove = {\r\n  move: \"INVALID\";\r\n};\r\n\r\nexport type ValidMove =\r\n  | StandardMove\r\n  | Capture\r\n  | Castle\r\n  | PawnPush\r\n  | CaptureEnPassant;\r\n\r\nexport type ValidMoves = ValidMove[];\r\n\r\nexport type Empty = null;\r\n\r\nexport type GameState =\r\n  | \"WhiteMove\"\r\n  | \"BlackMove\"\r\n  | \"WhiteWin\"\r\n  | \"WhitePromote\"\r\n  | \"BlackPromote\"\r\n  | \"BlackWin\"\r\n  | \"StaleMate\"\r\n  | \"DrawRepetition3\"\r\n  | \"DrawRepetition5\";\r\n\r\nexport enum CastlingRights {\r\n  None = 0,\r\n  K = 1 << 0,\r\n  Q = 1 << 1,\r\n  k = 1 << 2,\r\n  q = 1 << 3,\r\n}\r\n","import BishopBlack from \"./bishop_black\";\r\nimport BishopWhite from \"./bishop_white\";\r\nimport KingBlack from \"./king_black\";\r\nimport KingWhite from \"./king_white\";\r\nimport KnightBlack from \"./knight_black\";\r\nimport KnightWhite from \"./knight_white\";\r\nimport PawnBlack from \"./pawn_black\";\r\nimport PawnWhite from \"./pawn_white\";\r\nimport QueenBlack from \"./queen_black\";\r\nimport QueenWhite from \"./queen_white\";\r\nimport RookBlack from \"./rook_black\";\r\nimport RookWhite from \"./rook_white\";\r\n\r\nconst Black = {\r\n  King: KingBlack,\r\n  Queen: QueenBlack,\r\n  Knight: KnightBlack,\r\n  Bishop: BishopBlack,\r\n  Pawn: PawnBlack,\r\n  Rook: RookBlack,\r\n};\r\n\r\nconst White = {\r\n  King: KingWhite,\r\n  Queen: QueenWhite,\r\n  Knight: KnightWhite,\r\n  Bishop: BishopWhite,\r\n  Pawn: PawnWhite,\r\n  Rook: RookWhite,\r\n};\r\n\r\nexport { Black, White };\r\n","import { FileArray } from \"./board\";\r\nimport { IPiece } from \"./pieces\";\r\nimport { Empty, Rank, File } from \"./types\";\r\n\r\nexport class Square {\r\n  private _piece: IPiece | Empty;\r\n\r\n  public get piece(): IPiece | Empty {\r\n    return this._piece;\r\n  }\r\n\r\n  rank: Rank;\r\n  file: File;\r\n\r\n  constructor(rank: Rank, file: File, piece: IPiece | Empty = null) {\r\n    this.rank = rank;\r\n    this.file = file;\r\n    this._piece = piece;\r\n  }\r\n\r\n  place(piece: IPiece) {\r\n    this._piece = piece;\r\n  }\r\n\r\n  remove() {\r\n    this._piece = null;\r\n  }\r\n\r\n  clone() {\r\n    return new Square(this.rank, this.file, this.piece);\r\n  }\r\n}\r\n\r\nexport const isLightSquare = (rank: Rank, file: File) => {\r\n  if (rank % 2 === 0 && FileArray.indexOf(file) % 2 === 0) {\r\n    return true;\r\n  } else if (rank % 2 === 1 && FileArray.indexOf(file) % 2 === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n","import { IPiece } from \"./pieces\";\r\nimport { Square } from \"./square\";\r\nimport { File, PieceColour, Position, Rank } from \"./types\";\r\n\r\nexport const RankArray: Rank[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\nexport const FileArray: File[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\n\r\nconst RankMap: Record<File, number> = {\r\n  \"a\": 1,\r\n  \"b\": 2,\r\n  \"c\": 3,\r\n  \"d\": 4,\r\n  \"e\": 5,\r\n  \"f\": 6,\r\n  \"g\": 7,\r\n  \"h\": 8\r\n}\r\n\r\n\r\ntype Rec = {\r\n  piece: IPiece,\r\n  rank: Rank,\r\n  file: File\r\n}\r\nconst squareIndex = (rank: Rank, file: File): number => {\r\n  return RankMap[file] + ((rank-1) * 8);\r\n} \r\n\r\nexport class Board {\r\n  private _board: Square[];\r\n  private _boardMap: Record<number, Rec>\r\n\r\n  public get board() {\r\n    return this._board;\r\n  }\r\n\r\n  buildBoardMap = (squares: Square[]) => {\r\n    squares.filter(x => x.piece).forEach(x => \r\n      {\r\n        this._boardMap[squareIndex(x.rank, x.file)] =  {piece: x.piece!, rank: x.rank, file: x.file}\r\n      })\r\n\r\n  }\r\n\r\n  constructor(initialPositions: Square[], map: Record<number, Rec> | undefined = undefined) {\r\n    this._board = initialPositions;\r\n    this._boardMap = {}\r\n    if (!map) {\r\n    this.buildBoardMap(initialPositions)\r\n    }\r\n    else {\r\n      this._boardMap = map;\r\n    }\r\n  }\r\n\r\n\r\n  clone = () => {\r\n    return new Board(this._board, {...this._boardMap});\r\n  };\r\n\r\n  move = (from: Position, to: Position) => {\r\n    const squareFrom = this.getPieceAt(from);\r\n    const squareFromPiece = squareFrom;\r\n\r\n    if (!squareFromPiece) throw new Error(\"no piece to move\");\r\n\r\n    this.remove(from)\r\n    this.placeAt(to, squareFromPiece);\r\n \r\n  };\r\n\r\n  remove = (position: Position) => {\r\n    const piece = this.getPieceAt(position);\r\n    if (!piece) throw new Error(\"no piece to remove\");\r\n    delete this._boardMap[squareIndex(position.rank, position.file)]\r\n  };\r\n\r\n  placeAt = (position: Position, piece: IPiece) => {\r\n    this._boardMap[squareIndex(position.rank, position.file)] = {piece, file: position.file, rank: position.rank}\r\n  };\r\n\r\n  getPieceAt = (position: Position): IPiece | null => {\r\n    \r\n    const square = this._boardMap[squareIndex(position.rank, position.file)]\r\n\r\n    return square ? square.piece : null;\r\n  };\r\n\r\n  getPieces = (colour: PieceColour): Square[] => {\r\n    return Object.values(this._boardMap).filter(x => x.piece.colour === colour).map(x =>new Square(x.rank, x.file, x.piece));\r\n  };\r\n}\r\n","import { IValidMoves } from \".\";\r\nimport { FileArray } from \"../board\";\r\nimport { Game } from \"../game\";\r\nimport { IPiece } from \"../pieces\";\r\nimport {\r\n  Position,\r\n  CastlingRights,\r\n  ValidMove,\r\n  InvalidMove,\r\n  Rank,\r\n  File,\r\n} from \"../types\";\r\n\r\nconst invalidMove: InvalidMove = { move: \"INVALID\" };\r\n\r\nexport abstract class BaseValidator implements IValidMoves {\r\n  piece: IPiece;\r\n  game: Game;\r\n  enPassantTarget: Position | undefined;\r\n  castlingRights: CastlingRights;\r\n\r\n  constructor(\r\n    piece: IPiece,\r\n    game: Game,\r\n    enPassantTarget: Position | undefined,\r\n    castlingRights: CastlingRights\r\n  ) {\r\n    this.piece = piece;\r\n    this.game = game;\r\n    this.enPassantTarget = enPassantTarget;\r\n    this.castlingRights = castlingRights;\r\n  }\r\n\r\n  canMove(from: Position, to: Position): ValidMove | InvalidMove {\r\n    const allMoves = this.potentialMoves(from);\r\n\r\n    for (const move of allMoves) {\r\n      if (move.file === to.file && move.rank === to.rank) {\r\n        return move;\r\n      }\r\n    }\r\n\r\n    return { move: \"INVALID\" };\r\n  }\r\n\r\n  getMoveAtPosition = (\r\n    position: Position,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMove | InvalidMove => {\r\n    const newFile = FileArray.indexOf(position.file) + fileDelta;\r\n    const newRank = position.rank + rankDelta;\r\n\r\n    if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n      return invalidMove;\r\n    }\r\n    return this.checkPosition(newRank as Rank, FileArray[newFile]);\r\n  };\r\n\r\n  *getMovesOnLine(\r\n    position: Position,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): IterableIterator<ValidMove> {\r\n    for (let i = 1; i < 8; i++) {\r\n      const newFile = FileArray.indexOf(position.file) + fileDelta * i;\r\n      const newRank = position.rank + rankDelta * i;\r\n\r\n      if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n        break;\r\n      }\r\n\r\n      const move = this.checkPosition(newRank as Rank, FileArray[newFile]);\r\n\r\n      if (move.move === \"INVALID\") {\r\n        break;\r\n      }\r\n\r\n      yield move;\r\n\r\n      if (move.move === \"Capture\") {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPosition = (rank: Rank, file: File): ValidMove | InvalidMove => {\r\n    if (this.canTakeAt(rank, file)) {\r\n      return {\r\n        move: \"Capture\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    if (this.canMoveTo(rank, file)) {\r\n      return {\r\n        move: \"Move\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    return invalidMove;\r\n  };\r\n\r\n  isStandardMove = (item: ValidMove | InvalidMove): item is ValidMove => {\r\n    return item.move !== \"INVALID\";\r\n  };\r\n\r\n  canTakeAt = (rank: Rank, file: File): boolean => {\r\n    const square = this.game.board.getPieceAt({ rank: rank as Rank, file });\r\n\r\n    return square !== null && square.colour !== this.piece.colour;\r\n  };\r\n\r\n  canMoveTo = (rank: Rank, file: File): boolean => {\r\n    const pieceAt = this.game.board.getPieceAt({ rank: rank, file });\r\n\r\n    return pieceAt === null;\r\n  };\r\n\r\n  abstract potentialMoves(from: Position): IterableIterator<ValidMove>;\r\n}\r\n","import { Position, ValidMove } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class BishopValidator extends BaseValidator {\r\n  *potentialMoves(from: Position): IterableIterator<ValidMove> {\r\n    yield* this.getMovesOnLine(from, -1, -1);\r\n    yield* this.getMovesOnLine(from, 1, 1);\r\n    yield* this.getMovesOnLine(from, 1, -1);\r\n    yield* this.getMovesOnLine(from, -1, 1);\r\n  }\r\n}\r\n","import { FileArray } from \"../board\";\r\nimport { Position, ValidMove, CastlingRights } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class KingValidator extends BaseValidator {\r\n  *potentialMoves(from: Position): IterableIterator<ValidMove> {\r\n    const moveDeltas = [\r\n      [1, 1],\r\n      [0, 1],\r\n      [1, 0],\r\n      [-1, 0],\r\n      [-1, -1],\r\n      [0, -1],\r\n      [-1, 1],\r\n      [1, -1],\r\n    ];\r\n\r\n    const file = FileArray.indexOf(from.file);\r\n    const rank = from.rank;\r\n\r\n    for (const [rd, fd] of moveDeltas) {\r\n      const move = this.getMoveAtPosition(from, rd, fd);\r\n      if (this.isStandardMove(move)) {\r\n        yield move;\r\n      }\r\n    }\r\n\r\n    if (this.canCastle(\"SHORT\"))\r\n      yield {\r\n        move: \"Castle\",\r\n        type: \"SHORT\",\r\n        colour: this.piece.colour,\r\n        rank: rank,\r\n        file: FileArray[file + 2],\r\n      };\r\n\r\n    if (this.canCastle(\"LONG\"))\r\n      yield {\r\n        move: \"Castle\",\r\n        type: \"LONG\",\r\n        colour: this.piece.colour,\r\n        rank: rank,\r\n        file: FileArray[file - 2],\r\n      };\r\n  }\r\n\r\n  private castlingDeltas = (type: \"SHORT\" | \"LONG\") =>\r\n    type === \"SHORT\" ? [0, 1, 2] : [0, -1, -2];\r\n\r\n  private canCastle(type: \"SHORT\" | \"LONG\") {\r\n    const moveDeltas = this.castlingDeltas(type);\r\n\r\n    const kingRank = this.piece.colour === \"WHITE\" ? 1 : 8;\r\n\r\n    let side = CastlingRights.None;\r\n    if (this.piece.colour === \"WHITE\") {\r\n      side = type === \"SHORT\" ? CastlingRights.k : CastlingRights.q;\r\n    } else {\r\n      side = type === \"SHORT\" ? CastlingRights.K : CastlingRights.Q;\r\n    }\r\n\r\n    if (!(this.castlingRights & side)) return false;\r\n\r\n    return moveDeltas.every((fileDelta) => {\r\n      const newFile = 4 + fileDelta;\r\n\r\n      const pieceAt = this.game.board.getPieceAt({\r\n        file: FileArray[newFile],\r\n        rank: kingRank,\r\n      });\r\n\r\n      if (pieceAt === null || fileDelta === 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n","import { Position, ValidMove } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class KnightValidator extends BaseValidator {\r\n  *potentialMoves(from: Position): IterableIterator<ValidMove> {\r\n    const moveDeltas = [\r\n      [1, 2],\r\n      [2, 1],\r\n      [-1, 2],\r\n      [-2, 1],\r\n      [-1, -2],\r\n      [-2, -1],\r\n      [1, -2],\r\n      [2, -1],\r\n    ];\r\n\r\n    const piece = this.game.board.getPieceAt(from);\r\n    if (piece === null) {\r\n      throw new Error(\"nope\");\r\n    }\r\n\r\n    for (const [rd, fd] of moveDeltas) {\r\n      const move = this.getMoveAtPosition(from, rd, fd);\r\n      if (this.isStandardMove(move)) {\r\n        yield move;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { FileArray } from \"../board\";\r\nimport { Position, Rank, ValidMove, ValidMoves } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class PawnValidator extends BaseValidator {\r\n  *potentialMoves(from: Position): IterableIterator<ValidMove> {\r\n    const increment = this.piece.colour === \"WHITE\" ? 1 : -1;\r\n    const pieceMoved = this.pieceMoved(from);\r\n\r\n    const captureDeltas = [\r\n      [increment, 1],\r\n      [increment, -1],\r\n    ];\r\n\r\n    const newRank = from.rank + increment;\r\n    let validRank = true;\r\n    if (newRank === 0 || newRank === 9) {\r\n      validRank = false;\r\n    }\r\n\r\n    const canMoveOne = validRank\r\n      ? this.canMoveTo(newRank as Rank, from.file)\r\n      : false;\r\n\r\n    if (canMoveOne) {\r\n      yield {\r\n        move: \"Move\",\r\n        rank: newRank as Rank,\r\n        file: from.file,\r\n      };\r\n    }\r\n\r\n    if (canMoveOne && !pieceMoved) {\r\n      const newRank = (from.rank + increment * 2) as Rank;\r\n      const canMoveTwo = this.canMoveTo(newRank, from.file);\r\n      if (canMoveTwo) {\r\n        yield {\r\n          move: \"PawnPush\",\r\n          rank: newRank,\r\n          file: from.file,\r\n        };\r\n      }\r\n    }\r\n\r\n    const captures: ValidMoves = captureDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove)\r\n      .filter((x) => x.move === \"Capture\");\r\n\r\n    captureDeltas.forEach(([rd, fd]) => {\r\n      const newRank = (from.rank + rd) as Rank;\r\n      const newFile = FileArray[FileArray.indexOf(from.file) + fd];\r\n\r\n      if (\r\n        this.enPassantTarget?.file === newFile &&\r\n        this.enPassantTarget?.rank === newRank\r\n      ) {\r\n        captures.push({\r\n          move: \"CaptureEnPassant\",\r\n          rank: newRank,\r\n          file: newFile,\r\n        });\r\n      }\r\n    });\r\n\r\n    for (var capture of captures) {\r\n      yield capture;\r\n    }\r\n  }\r\n\r\n  private pieceMoved(from: Position) {\r\n    const startRank = this.piece.colour === \"WHITE\" ? 2 : 7;\r\n    return startRank !== from.rank;\r\n  }\r\n}\r\n","import { Position, ValidMove } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class RookValidator extends BaseValidator {\r\n  *potentialMoves(from: Position): IterableIterator<ValidMove> {\r\n    yield* this.getMovesOnLine(from, 1, 0);\r\n    yield* this.getMovesOnLine(from, 0, 1);\r\n    yield* this.getMovesOnLine(from, 0, -1);\r\n    yield* this.getMovesOnLine(from, -1, 0);\r\n  }\r\n}\r\n","import { BishopValidator } from \"./bishopValidator\";\r\nimport { RookValidator } from \"./rookValidator\";\r\nimport { Position, ValidMove } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class QueenValidator extends BaseValidator {\r\n  *potentialMoves(from: Position): IterableIterator<ValidMove> {\r\n    yield* new RookValidator(\r\n      this.piece,\r\n      this.game,\r\n      this.enPassantTarget,\r\n      this.castlingRights\r\n    ).potentialMoves(from);\r\n\r\n    yield* new BishopValidator(\r\n      this.piece,\r\n      this.game,\r\n      this.enPassantTarget,\r\n      this.castlingRights\r\n    ).potentialMoves(from);\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { IPiece } from \"../pieces\";\r\nimport { Position, ValidMove, InvalidMove, CastlingRights } from \"../types\";\r\nimport { BishopValidator } from \"./bishopValidator\";\r\nimport { KingValidator } from \"./kingValidator\";\r\nimport { KnightValidator } from \"./knightValidator\";\r\nimport { PawnValidator } from \"./pawnValidator\";\r\nimport { QueenValidator } from \"./queenValidator\";\r\nimport { RookValidator } from \"./rookValidator\";\r\n\r\nexport interface IValidMoves {\r\n  potentialMoves(position: Position): IterableIterator<ValidMove>;\r\n\r\n  canMove(from: Position, to: Position): ValidMove | InvalidMove;\r\n}\r\n\r\nexport const getMoveValidator = (\r\n  piece: IPiece,\r\n  game: Game,\r\n  enPessantTarget: Position | undefined = undefined,\r\n  castlingRights: CastlingRights = CastlingRights.None\r\n): IValidMoves => {\r\n  switch (piece.pieceType) {\r\n    case \"BISHOP\":\r\n      return new BishopValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"KING\":\r\n      return new KingValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"KNIGHT\":\r\n      return new KnightValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"PAWN\":\r\n      return new PawnValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"QUEEN\":\r\n      return new QueenValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"ROOK\":\r\n      return new RookValidator(piece, game, enPessantTarget, castlingRights);\r\n  }\r\n};\r\n","import { PieceColour, PieceType } from \"./types\";\r\n\r\nexport interface IPiece {\r\n  pieceType: PieceType;\r\n  colour: PieceColour;\r\n}\r\n\r\nabstract class BasePiece implements IPiece {\r\n  abstract pieceType: PieceType;\r\n  colour: PieceColour;\r\n\r\n  constructor(colour: PieceColour) {\r\n    this.colour = colour;\r\n  }\r\n}\r\n\r\nexport class Bishop extends BasePiece {\r\n  pieceType = \"BISHOP\" as PieceType;\r\n}\r\n\r\nexport class King extends BasePiece {\r\n  pieceType = \"KING\" as PieceType;\r\n}\r\n\r\nexport class Knight extends BasePiece {\r\n  pieceType = \"KNIGHT\" as PieceType;\r\n}\r\n\r\nexport class Queen extends BasePiece {\r\n  pieceType = \"QUEEN\" as PieceType;\r\n}\r\n\r\nexport class Rook extends BasePiece {\r\n  pieceType = \"ROOK\" as PieceType;\r\n}\r\n\r\nexport class Pawn extends BasePiece {\r\n  pieceType = \"PAWN\" as PieceType;\r\n}\r\n","import { FileArray, RankArray } from \"./board\";\r\nimport { Bishop, IPiece, King, Knight, Pawn, Queen, Rook } from \"./pieces\";\r\n\r\nimport { Square } from \"./square\";\r\nimport { PiecePosition, Rank, File } from \"./types\";\r\n\r\nexport const buildBoard = (): Square[] => {\r\n  const board = RankArray.flatMap((rank) =>\r\n    FileArray.map((file) => new Square(rank, file))\r\n  );\r\n\r\n  const placeAt = (rank: Rank, file: File, piece: IPiece) => {\r\n    const sqaure = board.find((x) => x.file === file && x.rank === rank);\r\n    sqaure?.place(piece);\r\n  };\r\n\r\n  placeAt(1, \"a\", new Rook(\"WHITE\"));\r\n  placeAt(1, \"b\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"c\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"d\", new Queen(\"WHITE\"));\r\n  placeAt(1, \"e\", new King(\"WHITE\"));\r\n  placeAt(1, \"f\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"g\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"h\", new Rook(\"WHITE\"));\r\n\r\n  placeAt(2, \"a\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"b\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"c\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"d\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"e\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"f\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"g\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"h\", new Pawn(\"WHITE\"));\r\n\r\n  placeAt(7, \"a\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"b\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"c\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"d\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"e\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"f\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"g\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"h\", new Pawn(\"BLACK\"));\r\n\r\n  placeAt(8, \"a\", new Rook(\"BLACK\"));\r\n  placeAt(8, \"b\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"c\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"d\", new Queen(\"BLACK\"));\r\n  placeAt(8, \"e\", new King(\"BLACK\"));\r\n  placeAt(8, \"f\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"g\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"h\", new Rook(\"BLACK\"));\r\n\r\n  return board;\r\n};\r\n\r\nconst InitialBoard: PiecePosition[] = [\r\n  {\r\n    position: { rank: 1, file: \"a\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"b\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"c\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"d\" },\r\n    piece: new Queen(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"e\" },\r\n    piece: new King(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"f\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"g\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"h\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"a\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"b\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"c\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"d\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"e\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"f\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"g\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"h\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"a\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"b\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"c\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"d\" },\r\n    piece: new Queen(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"e\" },\r\n    piece: new King(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"f\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"g\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"h\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"a\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"b\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"c\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"d\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"e\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"f\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"g\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"h\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n];\r\n\r\nexport default InitialBoard;\r\n","import { Board, FileArray, RankArray } from \"../board\";\r\nimport { Game } from \"../game\";\r\nimport { CastlingRights } from \"../types\";\r\n\r\nexport const toFenString = (game: Game): string => {\r\n  if (game.state === \"BlackMove\" || game.state === \"WhiteMove\") {\r\n    return `${boardAsFenPlacement(game.board)} ${\r\n      game.state === \"WhiteMove\" ? \"w\" : \"b\"\r\n    } ${castlingAbilityString(game)} ${enPassantFen(game)} ${game.HalfMoves} ${\r\n      game.FullMoves\r\n    }`;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst enPassantFen = (game: Game): string => {\r\n  return game.enPassantSquare\r\n    ? `${game.enPassantSquare.file}${game.enPassantSquare.rank}`\r\n    : \"-\";\r\n};\r\n\r\nconst castlingAbilityString = (game: Game): string => {\r\n  let str = \"\";\r\n  if (game.CastlingAbility & CastlingRights.K) str += \"K\";\r\n  if (game.CastlingAbility & CastlingRights.Q) str += \"Q\";\r\n  if (game.CastlingAbility & CastlingRights.k) str += \"k\";\r\n  if (game.CastlingAbility & CastlingRights.q) str += \"q\";\r\n\r\n  return str === \"\" ? \"-\" : str;\r\n};\r\n\r\nexport const boardAsFenPlacement = (board: Board): string => {\r\n  let ranks: string[] = [];\r\n  RankArray.forEach((rank) => {\r\n    let count = 0;\r\n    let rankString = \"\";\r\n    FileArray.forEach((file) => {\r\n      let piece = board.getPieceAt({ rank, file });\r\n      if (piece) {\r\n        if (count > 0) {\r\n          rankString += count;\r\n          count = 0;\r\n        }\r\n        let str = \"\";\r\n        switch (piece!.pieceType) {\r\n          case \"BISHOP\":\r\n            str = \"b\";\r\n            break;\r\n          case \"KING\":\r\n            str = \"k\";\r\n            break;\r\n          case \"KNIGHT\":\r\n            str = \"n\";\r\n            break;\r\n          case \"PAWN\":\r\n            str = \"p\";\r\n            break;\r\n          case \"QUEEN\":\r\n            str = \"q\";\r\n            break;\r\n          case \"ROOK\":\r\n            str = \"r\";\r\n            break;\r\n        }\r\n        if (piece.colour === \"WHITE\") {\r\n          str = str.toUpperCase();\r\n        }\r\n\r\n        rankString += str;\r\n      } else if (file === \"h\") {\r\n        rankString += ++count;\r\n      }\r\n      if (!piece) {\r\n        count += 1;\r\n      }\r\n    });\r\n    ranks.push(rankString);\r\n  });\r\n\r\n  return ranks.join(\"/\");\r\n};\r\n","import React, { useReducer, createContext, Dispatch } from \"react\";\r\nimport { Board } from \"../engine/board\";\r\nimport { Game } from \"../engine/game\";\r\nimport { File, GameState, Rank } from \"../engine/types\";\r\n\r\nconst game = new Game();\r\nconst initialState: State = {\r\n  board: game.board,\r\n  state: game.state,\r\n};\r\n\r\nconst GameContext = createContext<[State, Dispatch<Action>]>([\r\n  initialState,\r\n  () => null,\r\n]);\r\n\r\ntype State = {\r\n  activePiece?: ActivePiece;\r\n  threatenedSquare?: { rank: Rank; file: File };\r\n  board: Board;\r\n  state: GameState;\r\n};\r\n\r\ntype ActivePiece = {\r\n  rank: Rank;\r\n  file: File;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype Action =\r\n  | { type: \"PIECE_HOVER\"; payload: { x: number; y: number } }\r\n  | {\r\n      type: \"PIECE_ACTIVATED\";\r\n      payload: { rank: Rank; file: File; x: number; y: number };\r\n    }\r\n  | {\r\n      type: \"SQUARE_ATTACKED\";\r\n      payload: { rank: Rank; file: File };\r\n    }\r\n  | { type: \"MOVE\" }\r\n  | {\r\n      type: \"PROMOTE\";\r\n      payload: { piece: \"QUEEN\" | \"ROOK\" | \"BISHOP\" | \"KNIGHT\" };\r\n    };\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"PIECE_HOVER\": {\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...state.activePiece,\r\n          x: action.payload.x,\r\n          y: action.payload.y,\r\n        },\r\n      };\r\n    }\r\n    case \"PIECE_ACTIVATED\":\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"SQUARE_ATTACKED\":\r\n      return {\r\n        ...state,\r\n        threatenedSquare: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"PROMOTE\":\r\n      game.promote(action.payload.piece);\r\n      return {\r\n        board: game.board,\r\n        state: game.state,\r\n      };\r\n    case \"MOVE\": {\r\n      if (!state.threatenedSquare) throw new Error(\"state is corrupted\");\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      const from = {\r\n        file: state.activePiece.file,\r\n        rank: state.activePiece.rank,\r\n      };\r\n\r\n      const to = {\r\n        file: state.threatenedSquare.file,\r\n        rank: state.threatenedSquare.rank,\r\n      };\r\n\r\n      game.move(from, to);\r\n\r\n      return {\r\n        board: game.board,\r\n        state: game.state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\ntype props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst GameContextProvider = ({ children }: props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GameContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport {\r\n  GameContextProvider as DraggableContextProvider,\r\n  GameContext as DraggableContext,\r\n};\r\n","import { getMoveValidator } from \"./validators\";\r\nimport { Board } from \"./board\";\r\nimport { buildBoard } from \"./initial-board\";\r\nimport { Square } from \"./square\";\r\nimport { Bishop, IPiece, Knight, Queen, Rook } from \"./pieces\";\r\nimport {\r\n  CastlingRights,\r\n  File,\r\n  GameState,\r\n  PieceColour,\r\n  PieceType,\r\n  Position,\r\n  Rank,\r\n} from \"./types\";\r\nimport { boardAsFenPlacement } from \"./fen\";\r\n\r\ntype GameIntState = {\r\n  board: Board;\r\n  halfMoves: number;\r\n  fullMoves: number;\r\n  state: GameState;\r\n  castlingAbility: CastlingRights;\r\n  enPassantSquare: Position | undefined;\r\n};\r\nexport class Game {\r\n  public get board(): Board {\r\n    return this._intState.board;\r\n  }\r\n\r\n  private _intState: GameIntState;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(\r\n    board: Board = new Board(buildBoard()),\r\n    state: GameState = \"WhiteMove\",\r\n    fullMoves: number = 0,\r\n    halfMoves: number = 0,\r\n    castlingAbility: CastlingRights = CastlingRights.K |\r\n      CastlingRights.Q |\r\n      CastlingRights.k |\r\n      CastlingRights.q,\r\n    enPassantSquare: undefined | Position = undefined\r\n  ) {\r\n    this._intState = {\r\n      board,\r\n      halfMoves,\r\n      fullMoves,\r\n      castlingAbility,\r\n      state,\r\n      enPassantSquare,\r\n    };\r\n  }\r\n\r\n  clone() {\r\n    return new Game(\r\n      this._intState.board.clone(),\r\n      this._intState.state,\r\n      this._intState.fullMoves,\r\n      this._intState.halfMoves,\r\n      this._intState.castlingAbility,\r\n      this._intState.enPassantSquare\r\n    );\r\n  }\r\n\r\n  private seenBoardPositions: Record<string, number> = {};\r\n\r\n  public get FullMoves() {\r\n    return this._intState.fullMoves;\r\n  }\r\n\r\n  public get HalfMoves() {\r\n    return this._intState.halfMoves;\r\n  }\r\n\r\n  public get enPassantSquare() {\r\n    return this._intState.enPassantSquare;\r\n  }\r\n\r\n  public get CastlingAbility() {\r\n    return this._intState.castlingAbility;\r\n  }\r\n\r\n  public get state(): GameState {\r\n    return this._intState.state;\r\n  }\r\n\r\n  *moves(colour: PieceColour) {\r\n    const pieces = this.board.getPieces(colour);\r\n    const king = pieces.find((x) => x.piece?.pieceType === \"KING\") as Square;\r\n    const rest = pieces.filter(\r\n      (x) => x.piece?.pieceType !== \"KING\"\r\n    ) as Square[];\r\n\r\n    for (const piece of [king, ...rest]) {\r\n      const validators = getMoveValidator(\r\n        piece.piece as IPiece,\r\n        this,\r\n        this.enPassantSquare,\r\n        this.CastlingAbility\r\n      );\r\n      const potential = validators.potentialMoves({\r\n        rank: piece.rank,\r\n        file: piece.file,\r\n      });\r\n\r\n      for (const p of potential) {\r\n        const clone = this.clone();\r\n        if (\r\n          clone.move(\r\n            { file: piece.file, rank: piece.rank },\r\n            { file: p.file, rank: p.rank }\r\n          )\r\n        ) {\r\n          yield p;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  promote(pieceType: PieceType) {\r\n    if (this.state === \"BlackPromote\" || this.state === \"WhitePromote\") {\r\n      const colour: PieceColour =\r\n        this.state === \"BlackPromote\" ? \"BLACK\" : \"WHITE\";\r\n      const rank: Rank = this.state === \"BlackPromote\" ? 1 : 8;\r\n\r\n      const pawn = this.board\r\n        .getPieces(colour)\r\n        .find((x) => x.piece?.pieceType === \"PAWN\" && x.rank === rank);\r\n\r\n      this.board.remove(pawn!);\r\n\r\n      let piece;\r\n      switch (pieceType) {\r\n        case \"BISHOP\":\r\n          piece = new Bishop(colour);\r\n          break;\r\n        case \"KNIGHT\":\r\n          piece = new Knight(colour);\r\n          break;\r\n        case \"QUEEN\":\r\n          piece = new Queen(colour);\r\n          break;\r\n        case \"ROOK\":\r\n          piece = new Rook(colour);\r\n          break;\r\n        default:\r\n          throw new Error(\"Not a promotable piece\");\r\n      }\r\n      this.board.placeAt(pawn!, piece);\r\n      this.changeState(colour);\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  *movesPerf(colour: PieceColour) {\r\n    const pieces = this.board.getPieces(colour);\r\n\r\n    for (const piece of pieces) {\r\n      const potentialMoves = getMoveValidator(\r\n        piece.piece as IPiece,\r\n        this,\r\n        this.enPassantSquare,\r\n        this.CastlingAbility\r\n      ).potentialMoves({\r\n        rank: piece.rank,\r\n        file: piece.file,\r\n      });\r\n\r\n      for (const potential of potentialMoves) {\r\n        const clone = this.clone();\r\n        if (\r\n          clone.move(\r\n            { file: piece.file, rank: piece.rank },\r\n            { file: potential.file, rank: potential.rank }\r\n          )\r\n        ) {\r\n          yield { move: potential, from: piece };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  move(from: Position, to: Position): Boolean {\r\n    const square = this.board.getPieceAt(from);\r\n    if (!square) {\r\n      throw new Error(\"No Piece to move\");\r\n    }\r\n\r\n    const piece = square;\r\n\r\n    const state = {\r\n      ...this._intState,\r\n      board: this.board.clone(),\r\n    };\r\n\r\n    const madeMove = this.move2(from, to);\r\n    if (madeMove && this.kingInCheck(piece.colour)) {\r\n      this._intState = state;\r\n      return false;\r\n    }\r\n    if (madeMove) {\r\n      this.changeState(piece.colour);\r\n    }\r\n\r\n    return madeMove;\r\n  }\r\n\r\n  kingInCheck(colour: PieceColour) {\r\n    const kingPosition = this.board\r\n      .getPieces(colour)\r\n      .find((x) => x.piece?.pieceType === \"KING\");\r\n\r\n    const pieces = this.board.getPieces(colour === \"WHITE\" ? \"BLACK\" : \"WHITE\");\r\n\r\n    for (const piece of pieces) {\r\n      const moves = getMoveValidator(\r\n        piece.piece as IPiece,\r\n        this\r\n      ).potentialMoves({\r\n        file: piece.file,\r\n        rank: piece.rank,\r\n      });\r\n\r\n      for (const move of moves) {\r\n        if (\r\n          move.file === kingPosition?.file &&\r\n          move.rank === kingPosition?.rank\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  hasPieceToPromote(colour: PieceColour) {\r\n    const promotionRank = colour === \"BLACK\" ? 1 : 8;\r\n    const pawns = this.board\r\n      .getPieces(colour)\r\n      .filter((x) => x.piece?.pieceType === \"PAWN\");\r\n    return pawns.some((x) => x.rank === promotionRank);\r\n  }\r\n\r\n  move2(from: Position, to: Position): Boolean {\r\n    const square = this.board.getPieceAt(from);\r\n\r\n    if (!square) throw new Error(\"No Piece to move\");\r\n\r\n    if (this.state === \"BlackMove\" && square?.colour === \"WHITE\") {\r\n      return false;\r\n    }\r\n\r\n    if (this.state === \"WhiteMove\" && square?.colour === \"BLACK\") {\r\n      return false;\r\n    }\r\n\r\n    if (this.state !== \"WhiteMove\" && this.state !== \"BlackMove\") {\r\n      return false;\r\n    }\r\n\r\n    const piece = square;\r\n    const move = getMoveValidator(\r\n      square!,\r\n      this,\r\n      this.enPassantSquare,\r\n      this.CastlingAbility\r\n    ).canMove(from, to);\r\n\r\n    switch (move.move) {\r\n      case \"INVALID\":\r\n        return false;\r\n      case \"Move\":\r\n      case \"PawnPush\":\r\n      case \"CaptureEnPassant\":\r\n      case \"Capture\": {\r\n        if (move.move === \"CaptureEnPassant\") {\r\n          if (!this.enPassantSquare) throw new Error(\"no enPassant\");\r\n          this.board.remove({\r\n            rank: from.rank,\r\n            file: this.enPassantSquare.file,\r\n          });\r\n        }\r\n        this.board.move(from, to);\r\n\r\n        if (move.move === \"PawnPush\") {\r\n          let r = to.rank;\r\n          if (piece!.colour === \"WHITE\") {\r\n            r -= 1;\r\n          } else {\r\n            r += 1;\r\n          }\r\n          this._intState.enPassantSquare = { rank: r as Rank, file: move.file };\r\n        } else {\r\n          this._intState.enPassantSquare = undefined;\r\n        }\r\n\r\n        if (piece!.pieceType === \"KING\") {\r\n          if (piece!.colour === \"WHITE\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.K;\r\n            this._intState.castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n          if (piece!.colour === \"BLACK\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.k;\r\n            this._intState.castlingAbility &= ~CastlingRights.q;\r\n          }\r\n        }\r\n\r\n        if (piece!.pieceType === \"ROOK\") {\r\n          if (from.rank === 1 && from.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n\r\n          if (from.rank === 1 && from.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.K;\r\n          }\r\n\r\n          if (from.rank === 8 && from.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.q;\r\n          }\r\n\r\n          if (from.rank === 8 && from.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.k;\r\n          }\r\n        }\r\n\r\n        if (move.move === \"Capture\") {\r\n          if (to.rank === 1 && to.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n\r\n          if (to.rank === 1 && to.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.K;\r\n          }\r\n\r\n          if (to.rank === 8 && to.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.q;\r\n          }\r\n\r\n          if (to.rank === 8 && to.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.k;\r\n          }\r\n        }\r\n\r\n        //FEN stuff\r\n        if (\r\n          move.move === \"Capture\" ||\r\n          move.move === \"CaptureEnPassant\" ||\r\n          move.move === \"PawnPush\" ||\r\n          (move.move === \"Move\" && piece!.pieceType === \"PAWN\")\r\n        ) {\r\n          this._intState.halfMoves = 0;\r\n        } else {\r\n          this._intState.halfMoves += 1;\r\n        }\r\n\r\n        break;\r\n      }\r\n      case \"Castle\": {\r\n        this.board.move(from, to);\r\n\r\n        const rookFrom = {\r\n          rank: from.rank,\r\n          file: move.type === \"SHORT\" ? \"h\" : (\"a\" as File),\r\n        };\r\n\r\n        const rookTo = {\r\n          rank: from.rank,\r\n          file: move.type === \"SHORT\" ? \"f\" : (\"d\" as File),\r\n        };\r\n\r\n        this.board.move(rookFrom, rookTo);\r\n        if (piece!.colour === \"WHITE\") {\r\n          this._intState.castlingAbility &= ~CastlingRights.K;\r\n          this._intState.castlingAbility &= ~CastlingRights.Q;\r\n        }\r\n        if (piece!.colour === \"BLACK\") {\r\n          this._intState.castlingAbility &= ~CastlingRights.k;\r\n          this._intState.castlingAbility &= ~CastlingRights.q;\r\n        }\r\n      }\r\n    }\r\n\r\n    const boardFen = boardAsFenPlacement(this.board);\r\n    if (this.seenBoardPositions[boardFen]) {\r\n      this.seenBoardPositions[boardFen] += 1;\r\n    } else {\r\n      this.seenBoardPositions[boardFen] = 1;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private checkMate(colour: PieceColour) {\r\n    const kingInCheck = this.kingInCheck(colour);\r\n\r\n    if (kingInCheck) {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      for (const _ of this.moves(colour)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  staleMate(colour: PieceColour) {\r\n    const pieces = this.board.getPieces(colour);\r\n\r\n    for (const piece of pieces) {\r\n      const validators = getMoveValidator(\r\n        piece.piece as IPiece,\r\n        this,\r\n        this.enPassantSquare,\r\n        this.CastlingAbility\r\n      );\r\n      const potential = validators.potentialMoves({\r\n        rank: piece.rank,\r\n        file: piece.file,\r\n      });\r\n\r\n      // eslint-disable-next-line no-empty-pattern\r\n      for (const {} of potential) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private changeState(colourMove: PieceColour) {\r\n    if (Object.values(this.seenBoardPositions).includes(3)) {\r\n      this._intState.state = \"DrawRepetition3\";\r\n      return;\r\n    }\r\n\r\n    switch (this.state) {\r\n      case \"BlackWin\":\r\n      case \"StaleMate\":\r\n      case \"WhiteWin\":\r\n      case \"DrawRepetition3\":\r\n      case \"DrawRepetition5\":\r\n        break;\r\n      case \"WhitePromote\":\r\n      case \"WhiteMove\": {\r\n        if (colourMove === \"BLACK\") break;\r\n        this._intState.state = \"BlackMove\";\r\n        if (this.hasPieceToPromote(colourMove)) {\r\n          this._intState.state = \"WhitePromote\";\r\n        } else if (this.checkMate(\"BLACK\")) {\r\n          this._intState.state = \"WhiteWin\";\r\n        } else if (this.staleMate(\"BLACK\")) {\r\n          this._intState.state = \"StaleMate\";\r\n        }\r\n        break;\r\n      }\r\n      case \"BlackPromote\":\r\n      case \"BlackMove\": {\r\n        if (colourMove === \"WHITE\") break;\r\n        this._intState.state = \"WhiteMove\";\r\n        if (this.hasPieceToPromote(colourMove)) {\r\n          this._intState.state = \"BlackPromote\";\r\n        } else if (this.checkMate(\"WHITE\")) {\r\n          this._intState.state = \"BlackWin\";\r\n        } else if (this.staleMate(\"WHITE\")) {\r\n          this._intState.state = \"StaleMate\";\r\n        }\r\n        this._intState.fullMoves += 1;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Black, White } from \"../classic_pieces\";\r\nimport styles from \"./Promotion.module.css\";\r\ntype Props = {\r\n  colour: \"WHITE\" | \"BLACK\";\r\n  promoteCallback: (piece: \"QUEEN\" | \"ROOK\" | \"BISHOP\" | \"KNIGHT\") => void;\r\n};\r\n\r\nexport const Promotion = ({ colour, promoteCallback }: Props) => {\r\n  const set = colour === \"WHITE\" ? White : Black;\r\n\r\n  const Queen = set.Queen;\r\n  const Bishop = set.Bishop;\r\n  const Rook = set.Rook;\r\n  const Knight = set.Knight;\r\n\r\n  return (\r\n    <section className={styles.promotionSection}>\r\n      <span>Select piece to promote to</span>\r\n      <div className={styles.chessRow}>\r\n        <div\r\n          className={`${styles.chessSquare}`}\r\n          onClick={() => promoteCallback(\"QUEEN\")}\r\n        >\r\n          <Queen />\r\n        </div>\r\n        <div\r\n          className={`${styles.chessSquare}`}\r\n          onClick={() => promoteCallback(\"BISHOP\")}\r\n        >\r\n          <Bishop />\r\n        </div>\r\n        <div\r\n          className={`${styles.chessSquare}`}\r\n          onClick={() => promoteCallback(\"ROOK\")}\r\n        >\r\n          <Rook />\r\n        </div>\r\n        <div\r\n          className={`${styles.chessSquare} `}\r\n          onClick={() => promoteCallback(\"KNIGHT\")}\r\n        >\r\n          <Knight />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { Draggable } from \"./components/draggable\";\r\nimport { Black, White } from \"./components/classic_pieces\";\r\nimport styles from \"./App.module.css\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport {\r\n  DraggableContext,\r\n  DraggableContextProvider,\r\n} from \"./components/game-context\";\r\nimport { useContext } from \"react\";\r\nimport { File, GameState, Rank } from \"./engine/types\";\r\nimport { FileArray, RankArray, Board as GameBoard } from \"./engine/board\";\r\nimport { isLightSquare } from \"./engine/square\";\r\nimport { Promotion } from \"./components/promotion\";\r\n\r\nconst getPieceAt = (rank: Rank, file: File, currentBoard: GameBoard) => {\r\n  const piece = currentBoard.getPieceAt({ rank, file });\r\n\r\n  if (piece) {\r\n    const set = piece.colour === \"WHITE\" ? White : Black;\r\n    switch (piece.pieceType) {\r\n      case \"BISHOP\":\r\n        return set.Bishop;\r\n      case \"KING\":\r\n        return set.King;\r\n      case \"KNIGHT\":\r\n        return set.Knight;\r\n      case \"PAWN\":\r\n        return set.Pawn;\r\n      case \"QUEEN\":\r\n        return set.Queen;\r\n      case \"ROOK\":\r\n        return set.Rook;\r\n    }\r\n  }\r\n};\r\n\r\ntype gridProps = {\r\n  rank: Rank;\r\n  file: File;\r\n  bound: DOMRect | undefined;\r\n};\r\n\r\nconst GridPosition = ({ rank, file, bound }: gridProps) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [state, dispatch] = useContext(DraggableContext);\r\n  const [inBound, setInBound] = useState(false);\r\n  const isLight = isLightSquare(rank, file);\r\n  const Piece = getPieceAt(rank, file, state.board);\r\n\r\n  useEffect(() => {\r\n    const bound = ref.current?.getBoundingClientRect();\r\n\r\n    if (bound) {\r\n      if (\r\n        state.activePiece &&\r\n        state.activePiece.x >= bound?.left &&\r\n        state.activePiece.x < bound?.right &&\r\n        state.activePiece.y >= bound.top &&\r\n        state.activePiece.y < bound.bottom\r\n      ) {\r\n        setInBound(true);\r\n      } else {\r\n        setInBound(false);\r\n      }\r\n    }\r\n  }, [state, rank, file]);\r\n\r\n  useEffect(() => {\r\n    if (inBound) {\r\n      dispatch({ type: \"SQUARE_ATTACKED\", payload: { rank, file } });\r\n    }\r\n  }, [inBound, dispatch, file, rank]);\r\n\r\n  const pieceHover = useCallback(\r\n    (x, y) => dispatch({ type: \"PIECE_HOVER\", payload: { x, y } }),\r\n    [dispatch]\r\n  );\r\n\r\n  const pieceActivated = useCallback(\r\n    (x, y) =>\r\n      dispatch({ type: \"PIECE_ACTIVATED\", payload: { rank, file, x, y } }),\r\n    [dispatch, rank, file]\r\n  );\r\n\r\n  const move = useCallback(() => dispatch({ type: \"MOVE\" }), [dispatch]);\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.chessSquare} ${isLight ? styles.light : \"\"} ${\r\n        inBound ? styles.highlighted : \"\"\r\n      } ${styles[`rank_${rank}`]} ${styles[`file_${file}`]}`}\r\n      //@ts-ignore\r\n      rank={rank}\r\n      file={file}\r\n      key={rank + file}\r\n      ref={ref}\r\n    >\r\n      {Piece && (\r\n        <Draggable\r\n          boundingBox={bound}\r\n          onMouseUp={move}\r\n          onMouseMove={pieceHover}\r\n          onMouseDown={pieceActivated}\r\n        >\r\n          <Piece />\r\n        </Draggable>\r\n      )}\r\n      {rank === 1 && <div className={styles.rank}>{file}</div>}\r\n      {file === \"a\" && <div className={styles.file}>{rank}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst gameStateAsString = (state: GameState) => {\r\n  switch (state) {\r\n    case \"BlackMove\":\r\n      return \"Black to move\";\r\n    case \"BlackWin\":\r\n      return \"Black Won!\";\r\n    case \"StaleMate\":\r\n      return \"Stalemate\";\r\n    case \"WhiteMove\":\r\n      return \"White to move\";\r\n    case \"WhiteWin\":\r\n      return \"White Won!\";\r\n    case \"DrawRepetition3\":\r\n      return \"Draw by repetition\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Board = () => {\r\n  const chessGrid = useRef<HTMLDivElement>(null);\r\n  const [bound, setBound] = useState<DOMRect>();\r\n  const [state, dispatch] = useContext(DraggableContext);\r\n\r\n  const onWindowResize = useCallback(() => {\r\n    setBound(chessGrid.current?.getBoundingClientRect());\r\n  }, []);\r\n\r\n  useOnWindowResize(onWindowResize);\r\n\r\n  useEffect(() => {\r\n    setBound(chessGrid.current?.getBoundingClientRect());\r\n  }, [chessGrid]);\r\n\r\n  const promote = (piece: \"QUEEN\" | \"ROOK\" | \"BISHOP\" | \"KNIGHT\") => {\r\n    dispatch({ type: \"PROMOTE\", payload: { piece } });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div ref={chessGrid} className={styles.chessGrid}>\r\n        {RankArray.map((r) =>\r\n          FileArray.map((f) => (\r\n            <GridPosition rank={r} file={f} bound={bound} key={r + f} />\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className={styles.infoPane}>{gameStateAsString(state.state)}</div>\r\n      {state.state === \"WhitePromote\" && (\r\n        <Promotion colour={\"WHITE\"} promoteCallback={promote} />\r\n      )}\r\n      {state.state === \"BlackPromote\" && (\r\n        <Promotion colour={\"BLACK\"} promoteCallback={promote} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <DraggableContextProvider>\r\n      <Board />\r\n    </DraggableContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst useOnWindowResize = (action: Function) => {\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      action();\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [action]);\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}