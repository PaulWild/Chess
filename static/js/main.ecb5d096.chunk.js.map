{"version":3,"sources":["components/draggable.module.css","components/draggable.tsx","components/classic_pieces/bishop_black.tsx","components/classic_pieces/bishop_white.tsx","components/classic_pieces/king_black.tsx","components/classic_pieces/king_white.tsx","components/classic_pieces/knight_black.tsx","components/classic_pieces/knight_white.tsx","components/classic_pieces/pawn_black.tsx","components/classic_pieces/pawn_white.tsx","components/classic_pieces/queen_black.tsx","components/classic_pieces/queen_white.tsx","components/classic_pieces/rook_black.tsx","components/classic_pieces/rook_white.tsx","engine/types.ts","components/classic_pieces/index.tsx","engine/board.ts","engine/validators/baseValidator.ts","engine/validators/bishopValidator.ts","engine/validators/kingValidator.ts","engine/validators/knightValidator.ts","engine/validators/pawnValidator.ts","engine/validators/rookValidator.ts","engine/validators/queenValidator.ts","engine/validators/index.ts","engine/pieces.ts","engine/square.ts","engine/initial-board.ts","engine/fen/index.ts","components/game-context.tsx","engine/game.ts","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["module","exports","Draggable","children","boundingBox","onMouseDown","onMouseMove","onMouseUp","useState","x","y","pressed","initial","setInitial","position","setPosition","ref","useRef","useEffect","current","style","transform","onMouseUpCallback","React","useCallback","onMouseMoveCallback","eventAction","ev","type","touches","Math","max","min","pageX","right","left","pageY","bottom","top","dx","dy","activeCallback","document","addEventListener","removeEventListener","onMouseDownCallback","box","getBoundingClientRect","initX","initY","width","height","className","Styles","active","onTouchStart","BishopBlack","props","xmlns","viewBox","fill","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","BishopWhite","KingBlack","KingWhite","KnightBlack","KnightWhite","PawnBlack","PawnWhite","QueenBlack","cx","cy","r","QueenWhite","RookBlack","RookWhite","CastlingRights","Black","King","Queen","Knight","Bishop","Pawn","Rook","White","RankArray","FileArray","Board","initialPositions","_board","clone","map","move","from","to","squareFrom","getPieceAt","squareFromPiece","piece","squareTo","Error","remove","place","square","placeAt","find","rank","file","undefined","console","log","getPieces","colour","board","filter","this","invalidMove","BaseValidator","game","enPassantTarget","castlingRights","getMoveAtPosition","rankDelta","fileDelta","newFile","indexOf","newRank","checkPosition","getMovesOnLine","validMoves","i","push","canTakeAt","canMoveTo","isStandardMove","item","potentialMove","potentialMoves","BishopValidator","KingValidator","castlingDeltas","rd","fd","canCastle","moveDeltas","kingRank","side","None","k","q","K","Q","every","KnightValidator","PawnValidator","moves","increment","pieceMoved","captureDeltas","validRank","canMoveOne","captures","forEach","RookValidator","QueenValidator","getMoveValidator","enPessantTarget","pieceType","BasePiece","Square","_piece","buildBoard","flatMap","sqaure","boardAsFenPlacement","ranks","count","rankString","str","toUpperCase","join","state","fullMoves","halfMoves","castlingAbility","enPassantSquare","_intState","seenBoardPositions","Game","cloned","CastlingAbility","z","madeMove","move2","kingInCheck","changeState","kingPosition","some","canMove","rookFrom","rookTo","boardFen","length","colourMove","Object","values","includes","checkMate","staleMate","initialState","GameContext","createContext","reducer","action","activePiece","payload","threatenedSquare","GameContextProvider","useReducer","dispatch","Provider","value","GridPosition","bound","useContext","DraggableContext","inBound","setInBound","isLight","isLightSquare","Piece","currentBoard","set","pieceHover","pieceActivated","styles","chessSquare","light","highlighted","gameStateAsString","chessGrid","setBound","onWindowResize","useOnWindowResize","container","f","infoPane","App","handleResize","window","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ecb5d096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"draggable_active__3TbHp\"};","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Styles from \"./draggable.module.css\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  boundingBox?: DOMRect;\r\n  onMouseDown?: (x: number, y: number) => void;\r\n  onMouseMove?: (x: number, y: number) => void;\r\n  onMouseUp?: (x: number, y: number) => void;\r\n};\r\n\r\nexport const Draggable = ({\r\n  children,\r\n  boundingBox,\r\n  onMouseDown,\r\n  onMouseMove,\r\n  onMouseUp,\r\n}: Props) => {\r\n  const [initial, setInitial] = useState({ x: 0, y: 0, pressed: false });\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current && initial.pressed) {\r\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`;\r\n    } else if (ref.current) {\r\n      ref.current.style.transform = \"\";\r\n    }\r\n  }, [position, initial.pressed]);\r\n\r\n  const onMouseUpCallback = React.useCallback((): void => {\r\n    setInitial({ x: 0, y: 0, pressed: false });\r\n    setPosition({ x: 0, y: 0 });\r\n    onMouseUp?.(-1, -1);\r\n  }, [onMouseUp]);\r\n\r\n  const onMouseMoveCallback = React.useCallback(\r\n    (eventAction: MouseEvent | TouchEvent): void => {\r\n      let ev;\r\n      if (eventAction.type === \"mousemove\") {\r\n        ev = eventAction as MouseEvent;\r\n      } else {\r\n        ev = (eventAction as TouchEvent).touches[0];\r\n      }\r\n\r\n      const x = boundingBox\r\n        ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n        : ev.pageX;\r\n      const y = boundingBox\r\n        ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n        : ev.pageY;\r\n\r\n      const dx = x - initial.x;\r\n      const dy = y - initial.y;\r\n\r\n      onMouseMove?.(x, y);\r\n      setPosition({\r\n        x: dx,\r\n        y: dy,\r\n      });\r\n    },\r\n    [initial, boundingBox, onMouseMove]\r\n  );\r\n  const activeCallback = useRef(onMouseMoveCallback);\r\n\r\n  useEffect(() => {\r\n    if (initial.pressed) {\r\n      activeCallback.current = onMouseMoveCallback;\r\n      document.addEventListener(\"mousemove\", onMouseMoveCallback);\r\n      document.addEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.addEventListener(\"touchmove\", onMouseMoveCallback);\r\n      document.addEventListener(\"touchend\", onMouseUpCallback);\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", activeCallback.current);\r\n      document.removeEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.removeEventListener(\"touchmove\", activeCallback.current);\r\n      document.removeEventListener(\"touchend\", onMouseUpCallback);\r\n    }\r\n  }, [initial.pressed, onMouseMoveCallback, onMouseUpCallback]);\r\n\r\n  const onMouseDownCallback = (\r\n    eventAction: React.MouseEvent | React.TouchEvent\r\n  ) => {\r\n    let ev;\r\n    if (eventAction.type === \"mousedown\") {\r\n      ev = eventAction as React.MouseEvent;\r\n    } else {\r\n      ev = (eventAction as React.TouchEvent).touches[0];\r\n    }\r\n    const box = ref.current?.getBoundingClientRect();\r\n\r\n    let initX = ev.pageX;\r\n    let initY = ev.pageY;\r\n\r\n    if (box) {\r\n      initX = box?.x + box?.width / 2;\r\n      initY = box?.y + box?.height / 2;\r\n    }\r\n\r\n    const x = boundingBox\r\n      ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n      : ev.pageX;\r\n    const y = boundingBox\r\n      ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n      : ev.pageY;\r\n\r\n    const dx = x - initX;\r\n    const dy = y - initY;\r\n\r\n    setPosition({ x: dx, y: dy });\r\n    onMouseDown?.(x, y);\r\n    setInitial({ x: initX, y: initY, pressed: true });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={initial.pressed ? Styles.active : \"\"}\r\n      ref={ref}\r\n      onMouseDown={onMouseDownCallback}\r\n      onTouchStart={onMouseDownCallback}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nfunction BishopBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#000\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          stroke=\"#fff\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction BishopWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#fff\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KingBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#000\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#000\"\r\n        />\r\n        <path d=\"M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M32 29.5s8.5-4 6.03-9.65C34.15 14 25 18 22.5 24.5v2.1-2.1C20 18 10.85 14 6.97 19.85 4.5 25.5 13 29.5 13 29.5\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M12.5 30c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0\"\r\n          stroke=\"#fff\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KingWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#fff\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M12.5 30c5.5-3 14.5-3 20 0M12.5 33.5c5.5-3 14.5-3 20 0M12.5 37c5.5-3 14.5-3 20 0\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#000\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#000\"\r\n        />\r\n        <path\r\n          d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1.49997}\r\n        />\r\n        <path\r\n          d=\"M24.55 10.4l-.45 1.45.5.15c3.15 1 5.65 2.49 7.9 6.75S35.75 29.06 35.25 39l-.05.5h2.25l.05-.5c.5-10.06-.88-16.85-3.25-21.34-2.37-4.49-5.79-6.64-9.19-7.16l-.51-.1z\"\r\n          fill=\"#fff\"\r\n          stroke=\"none\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#fff\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\" fill=\"#000\" />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#000\"\r\n          strokeWidth={1.49997}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightWhite);\r\n","import * as React from \"react\";\r\n\r\nconst PawnBlack = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(PawnBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction PawnWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        fill=\"#fff\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(PawnWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0zM11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\" />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n        <path d=\"M11 38.5a35 35 1 0023 0\" fill=\"none\" strokeLinecap=\"butt\" />\r\n        <g fill=\"none\" stroke=\"#fff\">\r\n          <path d=\"M11 29a35 35 1 0123 0M12.5 31.5h20M11.5 34.5a35 35 1 0022 0M10.5 37.5a35 35 1 0024 0\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#fff\" stroke=\"#000\" strokeWidth={1.5} strokeLinejoin=\"round\">\r\n        <path d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\" />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0z\" />\r\n        <path\r\n          d=\"M11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\"\r\n          fill=\"none\"\r\n        />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction RookBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12.5 32l1.5-2.5h17l1.5 2.5h-20zM12 36v-4h21v4H12z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M14 29.5v-13h17v13H14z\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M14 16.5L11 14h23l-3 2.5H14zM11 14V9h4v2h5V9h5v2h5V9h4v5H11z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M12 35.5h21M13 31.5h19M14 29.5h17M14 16.5h17M11 14h23\"\r\n          fill=\"none\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1}\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction RookWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"#fff\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12 36v-4h21v4H12zM11 14V9h4v2h5V9h5v2h5V9h4v5\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M34 14l-3 3H14l-3-3\" />\r\n        <path\r\n          d=\"M31 17v12.5H14V17\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path d=\"M31 29.5l1.5 2.5h-20l1.5-2.5\" />\r\n        <path d=\"M11 14h23\" fill=\"none\" strokeLinejoin=\"miter\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookWhite);\r\n","import { IPiece } from \"./pieces\";\r\n\r\nexport type PiecePosition = {\r\n  position: Position;\r\n  piece: IPiece;\r\n};\r\n\r\nexport type PieceType =\r\n  | \"ROOK\"\r\n  | \"KNIGHT\"\r\n  | \"BISHOP\"\r\n  | \"KING\"\r\n  | \"QUEEN\"\r\n  | \"PAWN\";\r\n\r\nexport type PieceColour = \"WHITE\" | \"BLACK\";\r\n\r\nexport type Rank = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n\r\nexport type File = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\";\r\n\r\nexport type Position = {\r\n  rank: Rank;\r\n  file: File;\r\n};\r\n\r\nexport type StandardMove = {\r\n  move: \"Move\";\r\n} & Position;\r\n\r\nexport type PawnPush = {\r\n  move: \"PawnPush\";\r\n} & Position;\r\n\r\nexport type Capture = {\r\n  move: \"Capture\";\r\n} & Position;\r\n\r\nexport type CaptureEnPassant = {\r\n  move: \"CaptureEnPassant\";\r\n} & Position;\r\n\r\nexport type Castle = {\r\n  move: \"Castle\";\r\n  type: \"SHORT\" | \"LONG\";\r\n  colour: \"WHITE\" | \"BLACK\";\r\n} & Position;\r\n\r\nexport type InvalidMove = {\r\n  move: \"INVALID\";\r\n};\r\n\r\nexport type ValidMove =\r\n  | StandardMove\r\n  | Capture\r\n  | Castle\r\n  | PawnPush\r\n  | CaptureEnPassant;\r\n\r\nexport type ValidMoves = ValidMove[];\r\n\r\nexport type Empty = null;\r\n\r\nexport type GameState =\r\n  | \"WhiteMove\"\r\n  | \"BlackMove\"\r\n  | \"WhiteWin\"\r\n  | \"BlackWin\"\r\n  | \"StaleMate\"\r\n  | \"DrawRepetition3\"\r\n  | \"DrawRepetition5\";\r\n\r\nexport enum CastlingRights {\r\n  None = 0,\r\n  K = 1 << 0,\r\n  Q = 1 << 1,\r\n  k = 1 << 2,\r\n  q = 1 << 3,\r\n}\r\n","import BishopBlack from \"./bishop_black\";\r\nimport BishopWhite from \"./bishop_white\";\r\nimport KingBlack from \"./king_black\";\r\nimport KingWhite from \"./king_white\";\r\nimport KnightBlack from \"./knight_black\";\r\nimport KnightWhite from \"./knight_white\";\r\nimport PawnBlack from \"./pawn_black\";\r\nimport PawnWhite from \"./pawn_white\";\r\nimport QueenBlack from \"./queen_black\";\r\nimport QueenWhite from \"./queen_white\";\r\nimport RookBlack from \"./rook_black\";\r\nimport RookWhite from \"./rook_white\";\r\n\r\nconst Black = {\r\n  King: KingBlack,\r\n  Queen: QueenBlack,\r\n  Knight: KnightBlack,\r\n  Bishop: BishopBlack,\r\n  Pawn: PawnBlack,\r\n  Rook: RookBlack,\r\n};\r\n\r\nconst White = {\r\n  King: KingWhite,\r\n  Queen: QueenWhite,\r\n  Knight: KnightWhite,\r\n  Bishop: BishopWhite,\r\n  Pawn: PawnWhite,\r\n  Rook: RookWhite,\r\n};\r\n\r\nexport { Black, White };\r\n","import { IPiece } from \"./pieces\";\r\nimport { Square } from \"./square\";\r\nimport { File, PieceColour, Position, Rank } from \"./types\";\r\n\r\nexport const RankArray: Rank[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\nexport const FileArray: File[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\n\r\nexport class Board {\r\n  private _board: Square[];\r\n\r\n  public get board() {\r\n    return this._board;\r\n  }\r\n\r\n  constructor(initialPositions: Square[]) {\r\n    this._board = initialPositions;\r\n  }\r\n\r\n  clone = () => {\r\n    const board = this._board.map((x) => x.clone());\r\n    return new Board(board);\r\n  };\r\n\r\n  move = (from: Position, to: Position) => {\r\n    const squareFrom = this.getPieceAt(from);\r\n    const squareFromPiece = squareFrom.piece;\r\n    const squareTo = this.getPieceAt(to);\r\n\r\n    if (!squareFromPiece) throw new Error(\"no piece to move\");\r\n\r\n    squareFrom.remove();\r\n    squareTo.place(squareFromPiece);\r\n  };\r\n\r\n  remove = (position: Position) => {\r\n    const square = this.getPieceAt(position);\r\n    if (!square.piece) throw new Error(\"no piece to remove\");\r\n    square.remove();\r\n  };\r\n\r\n  placeAt = (position: Position, piece: IPiece) => {\r\n    const square = this.getPieceAt(position);\r\n    square.place(piece);\r\n  };\r\n\r\n  getPieceAt = (position: Position): Square => {\r\n    const square = this._board.find(\r\n      (x) => x.rank === position.rank && x.file === position.file\r\n    );\r\n\r\n    if (square === undefined) {\r\n      console.log(position);\r\n      throw new Error(\"Out of bounds\");\r\n    }\r\n\r\n    return square;\r\n  };\r\n\r\n  getPieces = (colour: PieceColour): Square[] => {\r\n    return this.board.filter(\r\n      (x) => x.piece !== null && x.piece.colour === colour\r\n    );\r\n  };\r\n}\r\n","import { IValidMoves } from \".\";\r\nimport { FileArray } from \"../board\";\r\nimport { Game } from \"../game\";\r\nimport { IPiece } from \"../pieces\";\r\nimport {\r\n  Position,\r\n  CastlingRights,\r\n  ValidMoves,\r\n  ValidMove,\r\n  InvalidMove,\r\n  Rank,\r\n  File,\r\n} from \"../types\";\r\n\r\nconst invalidMove: InvalidMove = { move: \"INVALID\" };\r\n\r\nexport abstract class BaseValidator implements IValidMoves {\r\n  piece: IPiece;\r\n  game: Game;\r\n  enPassantTarget: Position | undefined;\r\n  castlingRights: CastlingRights;\r\n\r\n  constructor(\r\n    piece: IPiece,\r\n    game: Game,\r\n    enPassantTarget: Position | undefined,\r\n    castlingRights: CastlingRights\r\n  ) {\r\n    this.piece = piece;\r\n    this.game = game;\r\n    this.enPassantTarget = enPassantTarget;\r\n    this.castlingRights = castlingRights;\r\n  }\r\n\r\n  canMove(from: Position, to: Position): ValidMove | InvalidMove {\r\n    const allMoves = this.potentialMoves(from);\r\n\r\n    const potentialMove = allMoves.find(\r\n      (position) => position.file === to.file && position.rank === to.rank\r\n    );\r\n\r\n    return potentialMove ?? { move: \"INVALID\" };\r\n  }\r\n\r\n  getMoveAtPosition = (\r\n    position: Position,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMove | InvalidMove => {\r\n    const newFile = FileArray.indexOf(position.file) + fileDelta;\r\n    const newRank = position.rank + rankDelta;\r\n\r\n    if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n      return invalidMove;\r\n    }\r\n    return this.checkPosition(newRank as Rank, FileArray[newFile]);\r\n  };\r\n\r\n  getMovesOnLine = (\r\n    position: Position,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMoves => {\r\n    const validMoves = [];\r\n    for (let i = 1; i < 8; i++) {\r\n      const newFile = FileArray.indexOf(position.file) + fileDelta * i;\r\n      const newRank = position.rank + rankDelta * i;\r\n\r\n      if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n        break;\r\n      }\r\n\r\n      const move = this.checkPosition(newRank as Rank, FileArray[newFile]);\r\n\r\n      if (move.move === \"INVALID\") {\r\n        break;\r\n      }\r\n\r\n      validMoves.push(move);\r\n\r\n      if (move.move === \"Capture\") {\r\n        break;\r\n      }\r\n    }\r\n    return validMoves;\r\n  };\r\n\r\n  checkPosition = (rank: Rank, file: File): ValidMove | InvalidMove => {\r\n    if (this.canTakeAt(rank, file)) {\r\n      return {\r\n        move: \"Capture\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    if (this.canMoveTo(rank, file)) {\r\n      return {\r\n        move: \"Move\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    return invalidMove;\r\n  };\r\n\r\n  isStandardMove = (item: ValidMove | InvalidMove): item is ValidMove => {\r\n    return item.move !== \"INVALID\";\r\n  };\r\n\r\n  canTakeAt = (rank: Rank, file: File): boolean => {\r\n    const square = this.game.board.getPieceAt({ rank: rank as Rank, file });\r\n\r\n    return square.piece !== null && square.piece.colour !== this.piece.colour;\r\n  };\r\n\r\n  canMoveTo = (rank: Rank, file: File): boolean => {\r\n    const pieceAt = this.game.board.getPieceAt({ rank: rank, file });\r\n\r\n    return pieceAt.piece === null;\r\n  };\r\n\r\n  abstract potentialMoves(from: Position): ValidMoves;\r\n}\r\n","import { Position, ValidMoves } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class BishopValidator extends BaseValidator {\r\n  potentialMoves(from: Position): ValidMoves {\r\n    return [\r\n      ...this.getMovesOnLine(from, -1, -1),\r\n      ...this.getMovesOnLine(from, 1, 1),\r\n      ...this.getMovesOnLine(from, 1, -1),\r\n      ...this.getMovesOnLine(from, -1, 1),\r\n    ];\r\n  }\r\n}\r\n","import { FileArray } from \"../board\";\r\nimport { Position, ValidMoves, CastlingRights } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class KingValidator extends BaseValidator {\r\n  potentialMoves(from: Position): ValidMoves {\r\n    let validMoves: ValidMoves = [];\r\n    const moveDeltas = [\r\n      [1, 1],\r\n      [0, 1],\r\n      [1, 0],\r\n      [-1, 0],\r\n      [-1, -1],\r\n      [0, -1],\r\n      [-1, 1],\r\n      [1, -1],\r\n    ];\r\n\r\n    const file = FileArray.indexOf(from.file);\r\n    const rank = from.rank;\r\n\r\n    validMoves = moveDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove);\r\n\r\n    if (this.canCastle(\"SHORT\"))\r\n      validMoves.push({\r\n        move: \"Castle\",\r\n        type: \"SHORT\",\r\n        colour: this.piece.colour,\r\n        rank: rank,\r\n        file: FileArray[file + 2],\r\n      });\r\n\r\n    if (this.canCastle(\"LONG\"))\r\n      validMoves.push({\r\n        move: \"Castle\",\r\n        type: \"LONG\",\r\n        colour: this.piece.colour,\r\n        rank: rank,\r\n        file: FileArray[file - 2],\r\n      });\r\n\r\n    return validMoves;\r\n  }\r\n\r\n  private castlingDeltas = (type: \"SHORT\" | \"LONG\") =>\r\n    type === \"SHORT\" ? [0, 1, 2] : [0, -1, -2];\r\n\r\n  private canCastle(type: \"SHORT\" | \"LONG\") {\r\n    const moveDeltas = this.castlingDeltas(type);\r\n\r\n    const kingRank = this.piece.colour === \"WHITE\" ? 1 : 8;\r\n\r\n    let side = CastlingRights.None;\r\n    if (this.piece.colour === \"WHITE\") {\r\n      side = type === \"SHORT\" ? CastlingRights.k : CastlingRights.q;\r\n    } else {\r\n      side = type === \"SHORT\" ? CastlingRights.K : CastlingRights.Q;\r\n    }\r\n\r\n    if (!(this.castlingRights & side)) return false;\r\n\r\n    return moveDeltas.every((fileDelta) => {\r\n      const newFile = 4 + fileDelta;\r\n\r\n      const pieceAt = this.game.board.getPieceAt({\r\n        file: FileArray[newFile],\r\n        rank: kingRank,\r\n      });\r\n\r\n      if (pieceAt.piece === null || fileDelta === 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n","import { Position, ValidMoves } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class KnightValidator extends BaseValidator {\r\n  potentialMoves(from: Position): ValidMoves {\r\n    const moveDeltas = [\r\n      [1, 2],\r\n      [2, 1],\r\n      [-1, 2],\r\n      [-2, 1],\r\n      [-1, -2],\r\n      [-2, -1],\r\n      [1, -2],\r\n      [2, -1],\r\n    ];\r\n\r\n    const piece = this.game.board.getPieceAt(from);\r\n    if (piece.piece === null) {\r\n      throw new Error(\"nope\");\r\n    }\r\n\r\n    return moveDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove);\r\n  }\r\n}\r\n","import { FileArray } from \"../board\";\r\nimport { Position, Rank, ValidMoves } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class PawnValidator extends BaseValidator {\r\n  potentialMoves(from: Position): ValidMoves {\r\n    const moves: ValidMoves = [];\r\n    const increment = this.piece.colour === \"WHITE\" ? 1 : -1;\r\n    const pieceMoved = this.pieceMoved(from);\r\n\r\n    const captureDeltas = [\r\n      [increment, 1],\r\n      [increment, -1],\r\n    ];\r\n\r\n    const newRank = from.rank + increment;\r\n    let validRank = true;\r\n    if (newRank === 0 || newRank === 9) {\r\n      validRank = false;\r\n    }\r\n\r\n    const canMoveOne = validRank\r\n      ? this.canMoveTo(newRank as Rank, from.file)\r\n      : false;\r\n\r\n    if (canMoveOne) {\r\n      moves.push({\r\n        move: \"Move\",\r\n        rank: newRank as Rank,\r\n        file: from.file,\r\n      });\r\n    }\r\n\r\n    if (canMoveOne && !pieceMoved) {\r\n      const newRank = (from.rank + increment * 2) as Rank;\r\n      const canMoveTwo = this.canMoveTo(newRank, from.file);\r\n      if (canMoveTwo) {\r\n        moves.push({\r\n          move: \"PawnPush\",\r\n          rank: newRank,\r\n          file: from.file,\r\n        });\r\n      }\r\n    }\r\n\r\n    const captures: ValidMoves = captureDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove)\r\n      .filter((x) => x.move === \"Capture\");\r\n\r\n    captureDeltas.forEach(([rd, fd]) => {\r\n      const newRank = (from.rank + rd) as Rank;\r\n      const newFile = FileArray[FileArray.indexOf(from.file) + fd];\r\n\r\n      if (\r\n        this.enPassantTarget?.file === newFile &&\r\n        this.enPassantTarget?.rank === newRank\r\n      ) {\r\n        captures.push({\r\n          move: \"CaptureEnPassant\",\r\n          rank: newRank,\r\n          file: newFile,\r\n        });\r\n      }\r\n    });\r\n\r\n    return [...moves, ...captures];\r\n  }\r\n\r\n  private pieceMoved(from: Position) {\r\n    const startRank = this.piece.colour === \"WHITE\" ? 2 : 7;\r\n    return startRank !== from.rank;\r\n  }\r\n}\r\n","import { Position, ValidMoves } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class RookValidator extends BaseValidator {\r\n  potentialMoves(from: Position): ValidMoves {\r\n    return [\r\n      ...this.getMovesOnLine(from, 1, 0),\r\n      ...this.getMovesOnLine(from, 0, 1),\r\n      ...this.getMovesOnLine(from, 0, -1),\r\n      ...this.getMovesOnLine(from, -1, 0),\r\n    ];\r\n  }\r\n}\r\n","import { BishopValidator } from \"./bishopValidator\";\r\nimport { RookValidator } from \"./rookValidator\";\r\nimport { Position, ValidMoves } from \"../types\";\r\nimport { BaseValidator } from \"./baseValidator\";\r\n\r\nexport class QueenValidator extends BaseValidator {\r\n  potentialMoves(from: Position): ValidMoves {\r\n    return [\r\n      ...new RookValidator(\r\n        this.piece,\r\n        this.game,\r\n        this.enPassantTarget,\r\n        this.castlingRights\r\n      ).potentialMoves(from),\r\n      ...new BishopValidator(\r\n        this.piece,\r\n        this.game,\r\n        this.enPassantTarget,\r\n        this.castlingRights\r\n      ).potentialMoves(from),\r\n    ];\r\n  }\r\n}\r\n","import { Game } from \"../game\";\r\nimport { IPiece } from \"../pieces\";\r\nimport {\r\n  Position,\r\n  ValidMoves,\r\n  ValidMove,\r\n  InvalidMove,\r\n  CastlingRights,\r\n} from \"../types\";\r\nimport { BishopValidator } from \"./bishopValidator\";\r\nimport { KingValidator } from \"./kingValidator\";\r\nimport { KnightValidator } from \"./knightValidator\";\r\nimport { PawnValidator } from \"./pawnValidator\";\r\nimport { QueenValidator } from \"./queenValidator\";\r\nimport { RookValidator } from \"./rookValidator\";\r\n\r\nexport interface IValidMoves {\r\n  potentialMoves(position: Position): ValidMoves;\r\n\r\n  canMove(from: Position, to: Position): ValidMove | InvalidMove;\r\n}\r\n\r\nexport const getMoveValidator = (\r\n  piece: IPiece,\r\n  game: Game,\r\n  enPessantTarget: Position | undefined = undefined,\r\n  castlingRights: CastlingRights = CastlingRights.None\r\n): IValidMoves => {\r\n  switch (piece.pieceType) {\r\n    case \"BISHOP\":\r\n      return new BishopValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"KING\":\r\n      return new KingValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"KNIGHT\":\r\n      return new KnightValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"PAWN\":\r\n      return new PawnValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"QUEEN\":\r\n      return new QueenValidator(piece, game, enPessantTarget, castlingRights);\r\n    case \"ROOK\":\r\n      return new RookValidator(piece, game, enPessantTarget, castlingRights);\r\n  }\r\n};\r\n","import { PieceColour, PieceType } from \"./types\";\r\n\r\nexport interface IPiece {\r\n  pieceType: PieceType;\r\n  colour: PieceColour;\r\n}\r\n\r\nabstract class BasePiece implements IPiece {\r\n  abstract pieceType: PieceType;\r\n  colour: PieceColour;\r\n\r\n  constructor(colour: PieceColour) {\r\n    this.colour = colour;\r\n  }\r\n}\r\n\r\nexport class Bishop extends BasePiece {\r\n  pieceType = \"BISHOP\" as PieceType;\r\n}\r\n\r\nexport class King extends BasePiece {\r\n  pieceType = \"KING\" as PieceType;\r\n}\r\n\r\nexport class Knight extends BasePiece {\r\n  pieceType = \"KNIGHT\" as PieceType;\r\n}\r\n\r\nexport class Queen extends BasePiece {\r\n  pieceType = \"QUEEN\" as PieceType;\r\n}\r\n\r\nexport class Rook extends BasePiece {\r\n  pieceType = \"ROOK\" as PieceType;\r\n}\r\n\r\nexport class Pawn extends BasePiece {\r\n  pieceType = \"PAWN\" as PieceType;\r\n}\r\n","import { FileArray } from \"./board\";\r\nimport { IPiece } from \"./pieces\";\r\nimport { Empty, Rank, File } from \"./types\";\r\n\r\nexport class Square {\r\n  private _piece: IPiece | Empty;\r\n\r\n  public get piece(): IPiece | Empty {\r\n    return this._piece;\r\n  }\r\n\r\n  rank: Rank;\r\n  file: File;\r\n\r\n  constructor(rank: Rank, file: File, piece: IPiece | Empty = null) {\r\n    this.rank = rank;\r\n    this.file = file;\r\n    this._piece = piece;\r\n  }\r\n\r\n  place(piece: IPiece) {\r\n    this._piece = piece;\r\n  }\r\n\r\n  remove() {\r\n    this._piece = null;\r\n  }\r\n\r\n  clone() {\r\n    return new Square(this.rank, this.file, this.piece);\r\n  }\r\n}\r\n\r\nexport const isLightSquare = (rank: Rank, file: File) => {\r\n  if (rank % 2 === 0 && FileArray.indexOf(file) % 2 === 0) {\r\n    return true;\r\n  } else if (rank % 2 === 1 && FileArray.indexOf(file) % 2 === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n","import { FileArray, RankArray } from \"./board\";\r\nimport { Bishop, IPiece, King, Knight, Pawn, Queen, Rook } from \"./pieces\";\r\n\r\nimport { Square } from \"./square\";\r\nimport { PiecePosition, Rank, File } from \"./types\";\r\n\r\nexport const buildBoard = (): Square[] => {\r\n  const board = RankArray.flatMap((rank) =>\r\n    FileArray.map((file) => new Square(rank, file))\r\n  );\r\n\r\n  const placeAt = (rank: Rank, file: File, piece: IPiece) => {\r\n    const sqaure = board.find((x) => x.file === file && x.rank === rank);\r\n    sqaure?.place(piece);\r\n  };\r\n\r\n  placeAt(1, \"a\", new Rook(\"WHITE\"));\r\n  placeAt(1, \"b\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"c\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"d\", new Queen(\"WHITE\"));\r\n  placeAt(1, \"e\", new King(\"WHITE\"));\r\n  placeAt(1, \"f\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"g\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"h\", new Rook(\"WHITE\"));\r\n\r\n  placeAt(2, \"a\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"b\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"c\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"d\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"e\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"f\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"g\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"h\", new Pawn(\"WHITE\"));\r\n\r\n  placeAt(7, \"a\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"b\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"c\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"d\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"e\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"f\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"g\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"h\", new Pawn(\"BLACK\"));\r\n\r\n  placeAt(8, \"a\", new Rook(\"BLACK\"));\r\n  placeAt(8, \"b\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"c\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"d\", new Queen(\"BLACK\"));\r\n  placeAt(8, \"e\", new King(\"BLACK\"));\r\n  placeAt(8, \"f\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"g\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"h\", new Rook(\"BLACK\"));\r\n\r\n  return board;\r\n};\r\n\r\nconst InitialBoard: PiecePosition[] = [\r\n  {\r\n    position: { rank: 1, file: \"a\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"b\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"c\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"d\" },\r\n    piece: new Queen(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"e\" },\r\n    piece: new King(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"f\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"g\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"h\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"a\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"b\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"c\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"d\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"e\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"f\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"g\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"h\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"a\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"b\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"c\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"d\" },\r\n    piece: new Queen(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"e\" },\r\n    piece: new King(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"f\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"g\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"h\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"a\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"b\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"c\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"d\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"e\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"f\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"g\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"h\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n];\r\n\r\nexport default InitialBoard;\r\n","import { Board, FileArray, RankArray } from \"../board\";\r\nimport { Game } from \"../game\";\r\nimport { CastlingRights } from \"../types\";\r\n\r\nexport const toFenString = (game: Game): string => {\r\n  if (game.state === \"BlackMove\" || game.state === \"WhiteMove\") {\r\n    return `${boardAsFenPlacement(game.board)} ${\r\n      game.state === \"WhiteMove\" ? \"w\" : \"b\"\r\n    } ${castlingAbilityString(game)} ${enPassantFen(game)} ${game.HalfMoves} ${\r\n      game.FullMoves\r\n    }`;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst enPassantFen = (game: Game): string => {\r\n  return game.enPassantSquare\r\n    ? `${game.enPassantSquare.file}${game.enPassantSquare.rank}`\r\n    : \"-\";\r\n};\r\n\r\nconst castlingAbilityString = (game: Game): string => {\r\n  let str = \"\";\r\n  if (game.CastlingAbility & CastlingRights.K) str += \"K\";\r\n  if (game.CastlingAbility & CastlingRights.Q) str += \"Q\";\r\n  if (game.CastlingAbility & CastlingRights.k) str += \"k\";\r\n  if (game.CastlingAbility & CastlingRights.q) str += \"q\";\r\n\r\n  return str === \"\" ? \"-\" : str;\r\n};\r\n\r\nexport const boardAsFenPlacement = (board: Board): string => {\r\n  let ranks: string[] = [];\r\n  RankArray.forEach((rank) => {\r\n    let count = 0;\r\n    let rankString = \"\";\r\n    FileArray.forEach((file) => {\r\n      let piece = board.getPieceAt({ rank, file });\r\n      if (piece.piece) {\r\n        if (count > 0) {\r\n          rankString += count;\r\n          count = 0;\r\n        }\r\n        let str = \"\";\r\n        switch (piece.piece!.pieceType) {\r\n          case \"BISHOP\":\r\n            str = \"b\";\r\n            break;\r\n          case \"KING\":\r\n            str = \"k\";\r\n            break;\r\n          case \"KNIGHT\":\r\n            str = \"n\";\r\n            break;\r\n          case \"PAWN\":\r\n            str = \"p\";\r\n            break;\r\n          case \"QUEEN\":\r\n            str = \"q\";\r\n            break;\r\n          case \"ROOK\":\r\n            str = \"r\";\r\n            break;\r\n        }\r\n        if (piece.piece.colour === \"WHITE\") {\r\n          str = str.toUpperCase();\r\n        }\r\n\r\n        rankString += str;\r\n      } else if (file === \"h\") {\r\n        rankString += ++count;\r\n      }\r\n      if (!piece.piece) {\r\n        count += 1;\r\n      }\r\n    });\r\n    ranks.push(rankString);\r\n  });\r\n\r\n  return ranks.join(\"/\");\r\n};\r\n","import React, { useReducer, createContext, Dispatch } from \"react\";\r\nimport { Board } from \"../engine/board\";\r\nimport { Game } from \"../engine/game\";\r\nimport { File, GameState, Rank } from \"../engine/types\";\r\n\r\nconst game = new Game();\r\nconst initialState: State = {\r\n  board: game.board,\r\n  state: game.state,\r\n};\r\n\r\nconst GameContext = createContext<[State, Dispatch<Action>]>([\r\n  initialState,\r\n  () => null,\r\n]);\r\n\r\ntype State = {\r\n  activePiece?: ActivePiece;\r\n  threatenedSquare?: { rank: Rank; file: File };\r\n  board: Board;\r\n  state: GameState;\r\n};\r\n\r\ntype ActivePiece = {\r\n  rank: Rank;\r\n  file: File;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype Action =\r\n  | { type: \"PIECE_HOVER\"; payload: { x: number; y: number } }\r\n  | {\r\n      type: \"PIECE_ACTIVATED\";\r\n      payload: { rank: Rank; file: File; x: number; y: number };\r\n    }\r\n  | {\r\n      type: \"SQUARE_ATTACKED\";\r\n      payload: { rank: Rank; file: File };\r\n    }\r\n  | { type: \"MOVE\" };\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"PIECE_HOVER\": {\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...state.activePiece,\r\n          x: action.payload.x,\r\n          y: action.payload.y,\r\n        },\r\n      };\r\n    }\r\n    case \"PIECE_ACTIVATED\":\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"SQUARE_ATTACKED\":\r\n      return {\r\n        ...state,\r\n        threatenedSquare: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"MOVE\": {\r\n      if (!state.threatenedSquare) throw new Error(\"state is corrupted\");\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      const from = {\r\n        file: state.activePiece.file,\r\n        rank: state.activePiece.rank,\r\n      };\r\n\r\n      const to = {\r\n        file: state.threatenedSquare.file,\r\n        rank: state.threatenedSquare.rank,\r\n      };\r\n\r\n      game.move(from, to);\r\n\r\n      return {\r\n        board: game.board,\r\n        state: game.state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\ntype props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst GameContextProvider = ({ children }: props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GameContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport {\r\n  GameContextProvider as DraggableContextProvider,\r\n  GameContext as DraggableContext,\r\n};\r\n","import { getMoveValidator } from \"./validators\";\r\nimport { Board } from \"./board\";\r\nimport { buildBoard } from \"./initial-board\";\r\nimport { IPiece } from \"./pieces\";\r\nimport {\r\n  CastlingRights,\r\n  File,\r\n  GameState,\r\n  PieceColour,\r\n  Position,\r\n  Rank,\r\n} from \"./types\";\r\nimport { boardAsFenPlacement } from \"./fen\";\r\n\r\ntype GameIntState = {\r\n  board: Board;\r\n  halfMoves: number;\r\n  fullMoves: number;\r\n  state: GameState;\r\n  castlingAbility: CastlingRights;\r\n  enPassantSquare: Position | undefined;\r\n};\r\nexport class Game {\r\n  public get board(): Board {\r\n    return this._intState.board;\r\n  }\r\n\r\n  private _intState: GameIntState;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(\r\n    board: Board = new Board(buildBoard()),\r\n    state: GameState = \"WhiteMove\",\r\n    fullMoves: number = 0,\r\n    halfMoves: number = 0,\r\n    castlingAbility: CastlingRights = CastlingRights.K |\r\n      CastlingRights.Q |\r\n      CastlingRights.k |\r\n      CastlingRights.q,\r\n    enPassantSquare: undefined | Position = undefined\r\n  ) {\r\n    this._intState = {\r\n      board,\r\n      halfMoves,\r\n      fullMoves,\r\n      castlingAbility,\r\n      state,\r\n      enPassantSquare,\r\n    };\r\n  }\r\n\r\n  clone() {\r\n    return new Game(\r\n      this._intState.board.clone(),\r\n      this._intState.state,\r\n      this._intState.fullMoves,\r\n      this._intState.halfMoves,\r\n      this._intState.castlingAbility,\r\n      this._intState.enPassantSquare\r\n    );\r\n  }\r\n\r\n  private seenBoardPositions: Record<string, number> = {};\r\n\r\n  public get FullMoves() {\r\n    return this._intState.fullMoves;\r\n  }\r\n\r\n  public get HalfMoves() {\r\n    return this._intState.halfMoves;\r\n  }\r\n\r\n  public get enPassantSquare() {\r\n    return this._intState.enPassantSquare;\r\n  }\r\n\r\n  public get CastlingAbility() {\r\n    return this._intState.castlingAbility;\r\n  }\r\n\r\n  public get state(): GameState {\r\n    return this._intState.state;\r\n  }\r\n\r\n  moves(colour: PieceColour) {\r\n    const pieces = this.board.getPieces(colour);\r\n\r\n    const moves = pieces.flatMap((x) => {\r\n      const cloned = this.clone();\r\n      const validators = getMoveValidator(\r\n        x.piece as IPiece,\r\n        cloned,\r\n        cloned.enPassantSquare,\r\n        cloned.CastlingAbility\r\n      );\r\n      const potential = validators.potentialMoves({\r\n        rank: x.rank,\r\n        file: x.file,\r\n      });\r\n\r\n      return potential.filter((y) => {\r\n        const clone = this.clone();\r\n        return clone.move(\r\n          { file: x.file, rank: x.rank },\r\n          { file: y.file, rank: y.rank }\r\n        );\r\n      });\r\n    });\r\n    return moves;\r\n  }\r\n\r\n  movesPerf(colour: PieceColour) {\r\n    const pieces = this.board.getPieces(colour);\r\n\r\n    const moves = pieces.flatMap((x) => {\r\n      const validators = getMoveValidator(\r\n        x.piece as IPiece,\r\n        this,\r\n        this.enPassantSquare,\r\n        this.CastlingAbility\r\n      );\r\n      const potential = validators.potentialMoves({\r\n        rank: x.rank,\r\n        file: x.file,\r\n      });\r\n\r\n      return potential\r\n        .filter((y) => {\r\n          const clone = this.clone();\r\n          return clone.move(\r\n            { file: x.file, rank: x.rank },\r\n            { file: y.file, rank: y.rank }\r\n          );\r\n        })\r\n        .map((z) => ({ move: z, from: { file: x.file, rank: x.rank } }));\r\n    });\r\n    return moves;\r\n  }\r\n\r\n  move(from: Position, to: Position): Boolean {\r\n    const square = this.board.getPieceAt(from);\r\n\r\n    if (!square.piece) {\r\n      throw new Error(\"No Piece to move\");\r\n    }\r\n\r\n    const piece = square.piece;\r\n\r\n    const state = {\r\n      ...this._intState,\r\n      board: this.board.clone(),\r\n    };\r\n\r\n    const madeMove = this.move2(from, to);\r\n    if (madeMove && this.kingInCheck(piece.colour)) {\r\n      this._intState = state;\r\n      return false;\r\n    }\r\n    if (madeMove) {\r\n      this.changeState(piece.colour);\r\n    }\r\n\r\n    return madeMove;\r\n  }\r\n\r\n  kingInCheck(colour: PieceColour) {\r\n    const kingPosition = this.board\r\n      .getPieces(colour)\r\n      .find((x) => x.piece?.pieceType === \"KING\");\r\n\r\n    return this.board\r\n      .getPieces(colour === \"WHITE\" ? \"BLACK\" : \"WHITE\")\r\n      .flatMap((x) =>\r\n        getMoveValidator(x.piece as IPiece, this).potentialMoves({\r\n          file: x.file,\r\n          rank: x.rank,\r\n        })\r\n      )\r\n      .some(\r\n        (x) =>\r\n          (x as Position).file === kingPosition?.file &&\r\n          (x as Position).rank === kingPosition?.rank\r\n      );\r\n  }\r\n\r\n  move2(from: Position, to: Position): Boolean {\r\n    const square = this.board.getPieceAt(from);\r\n\r\n    if (!square.piece) throw new Error(\"No Piece to move\");\r\n\r\n    if (this.state === \"BlackMove\" && square.piece?.colour === \"WHITE\") {\r\n      return false;\r\n    }\r\n\r\n    if (this.state === \"WhiteMove\" && square.piece?.colour === \"BLACK\") {\r\n      return false;\r\n    }\r\n\r\n    if (this.state !== \"WhiteMove\" && this.state !== \"BlackMove\") {\r\n      return false;\r\n    }\r\n\r\n    const piece = square.piece;\r\n    const move = getMoveValidator(\r\n      square.piece,\r\n      this,\r\n      this.enPassantSquare,\r\n      this.CastlingAbility\r\n    ).canMove(from, to);\r\n\r\n    switch (move.move) {\r\n      case \"INVALID\":\r\n        return false;\r\n      case \"Move\":\r\n      case \"PawnPush\":\r\n      case \"CaptureEnPassant\":\r\n      case \"Capture\": {\r\n        if (move.move === \"CaptureEnPassant\") {\r\n          if (!this.enPassantSquare) throw new Error(\"no enPassant\");\r\n          this.board.remove({\r\n            rank: from.rank,\r\n            file: this.enPassantSquare.file,\r\n          });\r\n        }\r\n        this.board.move(from, to);\r\n\r\n        if (move.move === \"PawnPush\") {\r\n          let r = to.rank;\r\n          if (piece.colour === \"WHITE\") {\r\n            r -= 1;\r\n          } else {\r\n            r += 1;\r\n          }\r\n          this._intState.enPassantSquare = { rank: r as Rank, file: move.file };\r\n        } else {\r\n          this._intState.enPassantSquare = undefined;\r\n        }\r\n\r\n        if (piece.pieceType === \"KING\") {\r\n          if (piece.colour === \"WHITE\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.K;\r\n            this._intState.castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n          if (piece.colour === \"BLACK\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.k;\r\n            this._intState.castlingAbility &= ~CastlingRights.q;\r\n          }\r\n        }\r\n\r\n        if (piece.pieceType === \"ROOK\") {\r\n          if (from.rank === 1 && from.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n\r\n          if (from.rank === 1 && from.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.K;\r\n          }\r\n\r\n          if (from.rank === 8 && from.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.q;\r\n          }\r\n\r\n          if (from.rank === 8 && from.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.k;\r\n          }\r\n        }\r\n\r\n        if (move.move === \"Capture\") {\r\n          if (to.rank === 1 && to.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n\r\n          if (to.rank === 1 && to.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.K;\r\n          }\r\n\r\n          if (to.rank === 8 && to.file === \"a\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.q;\r\n          }\r\n\r\n          if (to.rank === 8 && to.file === \"h\") {\r\n            this._intState.castlingAbility &= ~CastlingRights.k;\r\n          }\r\n        }\r\n\r\n        //FEN stuff\r\n        if (\r\n          move.move === \"Capture\" ||\r\n          move.move === \"CaptureEnPassant\" ||\r\n          move.move === \"PawnPush\" ||\r\n          (move.move === \"Move\" && piece.pieceType === \"PAWN\")\r\n        ) {\r\n          this._intState.halfMoves = 0;\r\n        } else {\r\n          this._intState.halfMoves += 1;\r\n        }\r\n\r\n        break;\r\n      }\r\n      case \"Castle\": {\r\n        this.board.move(from, to);\r\n\r\n        const rookFrom = {\r\n          rank: square.rank,\r\n          file: move.type === \"SHORT\" ? \"h\" : (\"a\" as File),\r\n        };\r\n\r\n        const rookTo = {\r\n          rank: square.rank,\r\n          file: move.type === \"SHORT\" ? \"f\" : (\"d\" as File),\r\n        };\r\n\r\n        this.board.move(rookFrom, rookTo);\r\n        if (piece.colour === \"WHITE\") {\r\n          this._intState.castlingAbility &= ~CastlingRights.K;\r\n          this._intState.castlingAbility &= ~CastlingRights.Q;\r\n        }\r\n        if (piece.colour === \"BLACK\") {\r\n          this._intState.castlingAbility &= ~CastlingRights.k;\r\n          this._intState.castlingAbility &= ~CastlingRights.q;\r\n        }\r\n      }\r\n    }\r\n\r\n    const boardFen = boardAsFenPlacement(this.board);\r\n    if (this.seenBoardPositions[boardFen]) {\r\n      this.seenBoardPositions[boardFen] += 1;\r\n    } else {\r\n      this.seenBoardPositions[boardFen] = 1;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private checkMate(colour: PieceColour) {\r\n    const kingInCheck = this.kingInCheck(colour);\r\n\r\n    if (kingInCheck) {\r\n      const pieces = this.moves(colour);\r\n      return pieces.length === 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  staleMate(colour: PieceColour) {\r\n    const pieces = this.board.getPieces(colour);\r\n\r\n    const moves = pieces.flatMap((x) => {\r\n      const validators = getMoveValidator(\r\n        x.piece as IPiece,\r\n        this,\r\n        this.enPassantSquare,\r\n        this.CastlingAbility\r\n      );\r\n      const potential = validators.potentialMoves({\r\n        rank: x.rank,\r\n        file: x.file,\r\n      });\r\n      return potential;\r\n    });\r\n\r\n    return moves.length === 0;\r\n  }\r\n\r\n  private changeState(colourMove: PieceColour) {\r\n    if (Object.values(this.seenBoardPositions).includes(3)) {\r\n      this._intState.state = \"DrawRepetition3\";\r\n      return;\r\n    }\r\n\r\n    switch (this.state) {\r\n      case \"BlackWin\":\r\n      case \"StaleMate\":\r\n      case \"WhiteWin\":\r\n      case \"DrawRepetition3\":\r\n      case \"DrawRepetition5\":\r\n        break;\r\n      case \"WhiteMove\": {\r\n        if (colourMove === \"BLACK\") break;\r\n        this._intState.state = \"BlackMove\";\r\n        if (this.checkMate(\"BLACK\")) {\r\n          this._intState.state = \"WhiteWin\";\r\n        } else if (this.staleMate(\"BLACK\")) {\r\n          this._intState.state = \"StaleMate\";\r\n        }\r\n        break;\r\n      }\r\n      case \"BlackMove\": {\r\n        if (colourMove === \"WHITE\") break;\r\n        this._intState.state = \"WhiteMove\";\r\n\r\n        if (this.checkMate(\"WHITE\")) {\r\n          this._intState.state = \"BlackWin\";\r\n        } else if (this.staleMate(\"WHITE\")) {\r\n          this._intState.state = \"StaleMate\";\r\n        }\r\n        this._intState.fullMoves += 1;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { Draggable } from \"./components/draggable\";\r\nimport { Black, White } from \"./components/classic_pieces\";\r\nimport styles from \"./App.module.css\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport {\r\n  DraggableContext,\r\n  DraggableContextProvider,\r\n} from \"./components/game-context\";\r\nimport { useContext } from \"react\";\r\nimport { File, GameState, Rank } from \"./engine/types\";\r\nimport { FileArray, RankArray, Board as GameBoard } from \"./engine/board\";\r\nimport { isLightSquare } from \"./engine/square\";\r\n\r\nconst getPieceAt = (rank: Rank, file: File, currentBoard: GameBoard) => {\r\n  const square = currentBoard.getPieceAt({ rank, file });\r\n\r\n  if (square.piece) {\r\n    const set = square.piece.colour === \"WHITE\" ? White : Black;\r\n    switch (square.piece.pieceType) {\r\n      case \"BISHOP\":\r\n        return set.Bishop;\r\n      case \"KING\":\r\n        return set.King;\r\n      case \"KNIGHT\":\r\n        return set.Knight;\r\n      case \"PAWN\":\r\n        return set.Pawn;\r\n      case \"QUEEN\":\r\n        return set.Queen;\r\n      case \"ROOK\":\r\n        return set.Rook;\r\n    }\r\n  }\r\n};\r\n\r\ntype gridProps = {\r\n  rank: Rank;\r\n  file: File;\r\n  bound: DOMRect | undefined;\r\n};\r\n\r\nconst GridPosition = ({ rank, file, bound }: gridProps) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [state, dispatch] = useContext(DraggableContext);\r\n  const [inBound, setInBound] = useState(false);\r\n  const isLight = isLightSquare(rank, file);\r\n  const Piece = getPieceAt(rank, file, state.board);\r\n\r\n  useEffect(() => {\r\n    const bound = ref.current?.getBoundingClientRect();\r\n\r\n    if (bound) {\r\n      if (\r\n        state.activePiece &&\r\n        state.activePiece.x >= bound?.left &&\r\n        state.activePiece.x < bound?.right &&\r\n        state.activePiece.y >= bound.top &&\r\n        state.activePiece.y < bound.bottom\r\n      ) {\r\n        setInBound(true);\r\n      } else {\r\n        setInBound(false);\r\n      }\r\n    }\r\n  }, [state, rank, file]);\r\n\r\n  useEffect(() => {\r\n    if (inBound) {\r\n      dispatch({ type: \"SQUARE_ATTACKED\", payload: { rank, file } });\r\n    }\r\n  }, [inBound, dispatch, file, rank]);\r\n\r\n  const pieceHover = useCallback(\r\n    (x, y) => dispatch({ type: \"PIECE_HOVER\", payload: { x, y } }),\r\n    [dispatch]\r\n  );\r\n\r\n  const pieceActivated = useCallback(\r\n    (x, y) =>\r\n      dispatch({ type: \"PIECE_ACTIVATED\", payload: { rank, file, x, y } }),\r\n    [dispatch, rank, file]\r\n  );\r\n\r\n  const move = useCallback(() => dispatch({ type: \"MOVE\" }), [dispatch]);\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.chessSquare} ${isLight ? styles.light : \"\"} ${\r\n        inBound ? styles.highlighted : \"\"\r\n      } ${styles[`rank_${rank}`]} ${styles[`file_${file}`]}`}\r\n      //@ts-ignore\r\n      rank={rank}\r\n      file={file}\r\n      key={rank + file}\r\n      ref={ref}\r\n    >\r\n      {Piece && (\r\n        <Draggable\r\n          boundingBox={bound}\r\n          onMouseUp={move}\r\n          onMouseMove={pieceHover}\r\n          onMouseDown={pieceActivated}\r\n        >\r\n          <Piece />\r\n        </Draggable>\r\n      )}\r\n      {rank === 1 && <div className={styles.rank}>{file}</div>}\r\n      {file === \"a\" && <div className={styles.file}>{rank}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst gameStateAsString = (state: GameState) => {\r\n  switch (state) {\r\n    case \"BlackMove\":\r\n      return \"Black to move\";\r\n    case \"BlackWin\":\r\n      return \"Black Won!\";\r\n    case \"StaleMate\":\r\n      return \"Stalemate\";\r\n    case \"WhiteMove\":\r\n      return \"White to move\";\r\n    case \"WhiteWin\":\r\n      return \"White Won!\";\r\n    case \"DrawRepetition3\":\r\n      return \"Draw by repetition\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Board = () => {\r\n  const chessGrid = useRef<HTMLDivElement>(null);\r\n  const [bound, setBound] = useState<DOMRect>();\r\n  const [state] = useContext(DraggableContext);\r\n\r\n  const onWindowResize = useCallback(() => {\r\n    setBound(chessGrid.current?.getBoundingClientRect());\r\n  }, []);\r\n\r\n  useOnWindowResize(onWindowResize);\r\n\r\n  useEffect(() => {\r\n    setBound(chessGrid.current?.getBoundingClientRect());\r\n  }, [chessGrid]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div ref={chessGrid} className={styles.chessGrid}>\r\n        {RankArray.map((r) =>\r\n          FileArray.map((f) => (\r\n            <GridPosition rank={r} file={f} bound={bound} key={r + f} />\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className={styles.infoPane}>{gameStateAsString(state.state)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <DraggableContextProvider>\r\n      <Board />\r\n    </DraggableContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst useOnWindowResize = (action: Function) => {\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      action();\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [action]);\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Hag2\",\"chessGrid\":\"App_chessGrid__3cPOC\",\"chessSquare\":\"App_chessSquare__SDQaO\",\"light\":\"App_light__3AKuB\",\"highlighted\":\"App_highlighted__19TOk\",\"rank\":\"App_rank__3KL7s\",\"file\":\"App_file__3wQ0V\",\"infoPane\":\"App_infoPane__11ld2\"};"],"sourceRoot":""}