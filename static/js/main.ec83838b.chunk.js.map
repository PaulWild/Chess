{"version":3,"sources":["App.module.css","components/draggable.tsx","components/classic_pieces/bishop_black.tsx","components/classic_pieces/bishop_white.tsx","components/classic_pieces/king_black.tsx","components/classic_pieces/king_white.tsx","components/classic_pieces/knight_black.tsx","components/classic_pieces/knight_white.tsx","components/classic_pieces/pawn_black.tsx","components/classic_pieces/pawn_white.tsx","components/classic_pieces/queen_black.tsx","components/classic_pieces/queen_white.tsx","components/classic_pieces/rook_black.tsx","components/classic_pieces/rook_white.tsx","components/classic_pieces/index.tsx","engine/board.ts","engine/basePiece.ts","engine/bishop.ts","engine/king.ts","engine/knight.ts","engine/pawn.ts","engine/rook.ts","engine/queen.ts","engine/square.ts","components/game-context.tsx","engine/initial-board.ts","engine/game.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Draggable","children","boundingBox","onMouseDown","onMouseMove","onMouseUp","useState","x","y","pressed","initial","setInitial","position","setPosition","ref","useRef","useEffect","current","style","transform","onMouseUpCallback","React","useCallback","onMouseMoveCallback","eventAction","ev","type","touches","Math","max","min","pageX","right","left","pageY","bottom","top","dx","dy","activeCallback","document","addEventListener","removeEventListener","onMouseDownCallback","box","getBoundingClientRect","initX","initY","width","height","onTouchStart","BishopBlack","props","xmlns","viewBox","fill","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","BishopWhite","KingBlack","KingWhite","KnightBlack","KnightWhite","PawnBlack","PawnWhite","QueenBlack","cx","cy","r","QueenWhite","RookBlack","RookWhite","Black","King","Queen","Knight","Bishop","Pawn","Rook","White","RankArray","FileArray","Board","initialPositions","enPassant","undefined","_board","_enPassant","clone","map","move","from","to","console","log","squareFrom","getPieceAt","squareTo","piece","Error","setMoved","place","remove","square","placeAt","getMoveAtPosition","rankDelta","fileDelta","newFile","indexOf","file","newRank","rank","checkPosition","getMovesOnLine","validMoves","i","push","canTakeAt","colour","canTakeEnPassant","canMoveTo","pieceType","moved","isStandardMove","item","find","isKingInCheck","kingPosition","board","filter","flatMap","getPotentialMoves","some","this","value","BasePiece","allMoves","potentialMove","rd","fd","canCastle","castlingDeltas","moveDeltas","rookFile","kingRank","rook","every","king","increment","captureDeltas","moves","captures","Square","_piece","game","sqaure","buildBoard","canMove","rookFrom","rookTo","initialState","GameContext","createContext","reducer","state","action","activePiece","payload","threatenedSquare","GameContextProvider","useReducer","dispatch","Provider","GridPosition","bound","useContext","DraggableContext","inBound","setInBound","isLight","isLightSquare","Piece","currentBoard","set","pieceHover","pieceActivated","className","styles","chessSquare","light","highlighted","chessGrid","setBound","onWindowResize","useOnWindowResize","container","f","App","handleResize","window","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec83838b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Hag2\",\"chessGrid\":\"App_chessGrid__3cPOC\",\"chessSquare\":\"App_chessSquare__SDQaO\",\"light\":\"App_light__3AKuB\",\"highlighted\":\"App_highlighted__19TOk\"};","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  boundingBox?: DOMRect;\r\n  onMouseDown?: (x: number, y: number) => void;\r\n  onMouseMove?: (x: number, y: number) => void;\r\n  onMouseUp?: (x: number, y: number) => void;\r\n};\r\n\r\nexport const Draggable = ({\r\n  children,\r\n  boundingBox,\r\n  onMouseDown,\r\n  onMouseMove,\r\n  onMouseUp,\r\n}: Props) => {\r\n  const [initial, setInitial] = useState({ x: 0, y: 0, pressed: false });\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current && initial.pressed) {\r\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`;\r\n    } else if (ref.current) {\r\n      ref.current.style.transform = \"\";\r\n    }\r\n  }, [position, initial.pressed]);\r\n\r\n  const onMouseUpCallback = React.useCallback((): void => {\r\n    setInitial({ x: 0, y: 0, pressed: false });\r\n    setPosition({ x: 0, y: 0 });\r\n    onMouseUp?.(-1, -1);\r\n  }, [onMouseUp]);\r\n\r\n  const onMouseMoveCallback = React.useCallback(\r\n    (eventAction: MouseEvent | TouchEvent): void => {\r\n      let ev;\r\n      if (eventAction.type === \"mousemove\") {\r\n        ev = eventAction as MouseEvent;\r\n      } else {\r\n        ev = (eventAction as TouchEvent).touches[0];\r\n      }\r\n\r\n      const x = boundingBox\r\n        ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n        : ev.pageX;\r\n      const y = boundingBox\r\n        ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n        : ev.pageY;\r\n\r\n      const dx = x - initial.x;\r\n      const dy = y - initial.y;\r\n\r\n      onMouseMove?.(x, y);\r\n      setPosition({\r\n        x: dx,\r\n        y: dy,\r\n      });\r\n    },\r\n    [initial, boundingBox, onMouseMove]\r\n  );\r\n  const activeCallback = useRef(onMouseMoveCallback);\r\n\r\n  useEffect(() => {\r\n    if (initial.pressed) {\r\n      activeCallback.current = onMouseMoveCallback;\r\n      document.addEventListener(\"mousemove\", onMouseMoveCallback);\r\n      document.addEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.addEventListener(\"touchmove\", onMouseMoveCallback);\r\n      document.addEventListener(\"touchend\", onMouseUpCallback);\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", activeCallback.current);\r\n      document.removeEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.removeEventListener(\"touchmove\", activeCallback.current);\r\n      document.removeEventListener(\"touchend\", onMouseUpCallback);\r\n    }\r\n  }, [initial.pressed, onMouseMoveCallback, onMouseUpCallback]);\r\n\r\n  const onMouseDownCallback = (\r\n    eventAction: React.MouseEvent | React.TouchEvent\r\n  ) => {\r\n    let ev;\r\n    if (eventAction.type === \"mousedown\") {\r\n      ev = eventAction as React.MouseEvent;\r\n    } else {\r\n      ev = (eventAction as React.TouchEvent).touches[0];\r\n    }\r\n    const box = ref.current?.getBoundingClientRect();\r\n\r\n    let initX = ev.pageX;\r\n    let initY = ev.pageY;\r\n\r\n    if (box) {\r\n      initX = box?.x + box?.width / 2;\r\n      initY = box?.y + box?.height / 2;\r\n    }\r\n\r\n    const x = boundingBox\r\n      ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n      : ev.pageX;\r\n    const y = boundingBox\r\n      ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n      : ev.pageY;\r\n\r\n    const dx = x - initX;\r\n    const dy = y - initY;\r\n\r\n    setPosition({ x: dx, y: dy });\r\n    onMouseDown?.(x, y);\r\n    setInitial({ x: initX, y: initY, pressed: true });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      onMouseDown={onMouseDownCallback}\r\n      onTouchStart={onMouseDownCallback}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nfunction BishopBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#000\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          stroke=\"#fff\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction BishopWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#fff\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KingBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#000\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#000\"\r\n        />\r\n        <path d=\"M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M32 29.5s8.5-4 6.03-9.65C34.15 14 25 18 22.5 24.5v2.1-2.1C20 18 10.85 14 6.97 19.85 4.5 25.5 13 29.5 13 29.5\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M12.5 30c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0\"\r\n          stroke=\"#fff\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KingWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#fff\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M12.5 30c5.5-3 14.5-3 20 0M12.5 33.5c5.5-3 14.5-3 20 0M12.5 37c5.5-3 14.5-3 20 0\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#000\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#000\"\r\n        />\r\n        <path\r\n          d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1.49997}\r\n        />\r\n        <path\r\n          d=\"M24.55 10.4l-.45 1.45.5.15c3.15 1 5.65 2.49 7.9 6.75S35.75 29.06 35.25 39l-.05.5h2.25l.05-.5c.5-10.06-.88-16.85-3.25-21.34-2.37-4.49-5.79-6.64-9.19-7.16l-.51-.1z\"\r\n          fill=\"#fff\"\r\n          stroke=\"none\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#fff\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\" fill=\"#000\" />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#000\"\r\n          strokeWidth={1.49997}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightWhite);\r\n","import * as React from \"react\";\r\n\r\nconst PawnBlack = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(PawnBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction PawnWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        fill=\"#fff\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(PawnWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0zM11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\" />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n        <path d=\"M11 38.5a35 35 1 0023 0\" fill=\"none\" strokeLinecap=\"butt\" />\r\n        <g fill=\"none\" stroke=\"#fff\">\r\n          <path d=\"M11 29a35 35 1 0123 0M12.5 31.5h20M11.5 34.5a35 35 1 0022 0M10.5 37.5a35 35 1 0024 0\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#fff\" stroke=\"#000\" strokeWidth={1.5} strokeLinejoin=\"round\">\r\n        <path d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\" />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0z\" />\r\n        <path\r\n          d=\"M11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\"\r\n          fill=\"none\"\r\n        />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction RookBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12.5 32l1.5-2.5h17l1.5 2.5h-20zM12 36v-4h21v4H12z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M14 29.5v-13h17v13H14z\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M14 16.5L11 14h23l-3 2.5H14zM11 14V9h4v2h5V9h5v2h5V9h4v5H11z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M12 35.5h21M13 31.5h19M14 29.5h17M14 16.5h17M11 14h23\"\r\n          fill=\"none\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1}\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction RookWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"#fff\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12 36v-4h21v4H12zM11 14V9h4v2h5V9h5v2h5V9h4v5\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M34 14l-3 3H14l-3-3\" />\r\n        <path\r\n          d=\"M31 17v12.5H14V17\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path d=\"M31 29.5l1.5 2.5h-20l1.5-2.5\" />\r\n        <path d=\"M11 14h23\" fill=\"none\" strokeLinejoin=\"miter\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookWhite);\r\n","import BishopBlack from \"./bishop_black\";\r\nimport BishopWhite from \"./bishop_white\";\r\nimport KingBlack from \"./king_black\";\r\nimport KingWhite from \"./king_white\";\r\nimport KnightBlack from \"./knight_black\";\r\nimport KnightWhite from \"./knight_white\";\r\nimport PawnBlack from \"./pawn_black\";\r\nimport PawnWhite from \"./pawn_white\";\r\nimport QueenBlack from \"./queen_black\";\r\nimport QueenWhite from \"./queen_white\";\r\nimport RookBlack from \"./rook_black\";\r\nimport RookWhite from \"./rook_white\";\r\n\r\nconst Black = {\r\n  King: KingBlack,\r\n  Queen: QueenBlack,\r\n  Knight: KnightBlack,\r\n  Bishop: BishopBlack,\r\n  Pawn: PawnBlack,\r\n  Rook: RookBlack,\r\n};\r\n\r\nconst White = {\r\n  King: KingWhite,\r\n  Queen: QueenWhite,\r\n  Knight: KnightWhite,\r\n  Bishop: BishopWhite,\r\n  Pawn: PawnWhite,\r\n  Rook: RookWhite,\r\n};\r\n\r\nexport { Black, White };\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Square } from \"./square\";\r\nimport {\r\n  File,\r\n  PiecePosition,\r\n  Position,\r\n  Rank,\r\n  ValidMove,\r\n  ValidMoves,\r\n} from \"./types\";\r\n\r\nexport const RankArray: Rank[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\nexport const FileArray: File[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\n\r\nexport const isLightSquare = (rank: Rank, file: File) => {\r\n  if (rank % 2 === 0 && FileArray.indexOf(file) % 2 === 0) {\r\n    return true;\r\n  } else if (rank % 2 === 1 && FileArray.indexOf(file) % 2 === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport class Board {\r\n  private _board: Square[];\r\n\r\n  public get board() {\r\n    return this._board;\r\n  }\r\n\r\n  private _enPassant: Position | undefined;\r\n  public get enPassant(): Position | undefined {\r\n    return this._enPassant;\r\n  }\r\n  public set enPassant(value: Position | undefined) {\r\n    this._enPassant = value;\r\n  }\r\n\r\n  constructor(\r\n    initialPositions: Square[],\r\n    enPassant: Position | undefined = undefined\r\n  ) {\r\n    this._board = initialPositions;\r\n    this.enPassant = enPassant;\r\n  }\r\n\r\n  clone = () => {\r\n    const board = this._board.map((x) => x.clone());\r\n    return new Board(board, this._enPassant);\r\n  };\r\n\r\n  move = (from: Position, to: Position) => {\r\n    console.log(this.enPassant, \"enPassant\");\r\n    const squareFrom = this.getPieceAt(from);\r\n    const squareTo = this.getPieceAt(to);\r\n\r\n    if (!squareFrom.piece) throw new Error(\"no piece to move\");\r\n\r\n    squareFrom.piece.setMoved();\r\n    squareTo.place(squareFrom.piece);\r\n    squareFrom.remove();\r\n  };\r\n\r\n  remove = (position: Position) => {\r\n    const square = this.getPieceAt(position);\r\n    if (!square.piece) throw new Error(\"no piece to remove\");\r\n    square.remove();\r\n  };\r\n\r\n  placeAt = (position: Position, piece: BasePiece) => {\r\n    const square = this.getPieceAt(position);\r\n    square.place(piece);\r\n  };\r\n\r\n  getMoveAtPosition = (\r\n    position: Position,\r\n    piece: BasePiece,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMove | undefined => {\r\n    const newFile = FileArray.indexOf(position.file) + fileDelta;\r\n    const newRank = position.rank + rankDelta;\r\n\r\n    if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n      return;\r\n    }\r\n    return this.checkPosition(piece, newRank as Rank, FileArray[newFile]);\r\n  };\r\n\r\n  getMovesOnLine = (\r\n    position: Position,\r\n    piece: BasePiece,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMoves => {\r\n    const validMoves = [];\r\n    for (let i = 1; i < 8; i++) {\r\n      const newFile = FileArray.indexOf(position.file) + fileDelta * i;\r\n      const newRank = position.rank + rankDelta * i;\r\n\r\n      if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n        break;\r\n      }\r\n\r\n      const move = this.checkPosition(\r\n        piece,\r\n        newRank as Rank,\r\n        FileArray[newFile]\r\n      );\r\n\r\n      if (move === undefined) {\r\n        break;\r\n      }\r\n\r\n      validMoves.push(move);\r\n\r\n      if (move.move === \"Capture\") {\r\n        break;\r\n      }\r\n    }\r\n    return validMoves;\r\n  };\r\n\r\n  checkPosition = (\r\n    piece: BasePiece,\r\n    rank: Rank,\r\n    file: File\r\n  ): ValidMove | undefined => {\r\n    if (this.canTakeAt(rank, file, piece.colour)) {\r\n      return {\r\n        move: \"Capture\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    if (this.canTakeEnPassant(rank, file, piece)) {\r\n      return {\r\n        move: \"CaptureEnPassant\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    if (this.canMoveTo(rank, file)) {\r\n      if (\r\n        piece.pieceType === \"PAWN\" &&\r\n        !piece.moved &&\r\n        (rank === 4 || rank === 5)\r\n      ) {\r\n        return {\r\n          move: \"PawnPush\",\r\n          rank: rank,\r\n          file: file,\r\n        };\r\n      }\r\n      return {\r\n        move: \"Move\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  isStandardMove = (item: ValidMove | undefined): item is ValidMove => {\r\n    return !!item;\r\n  };\r\n\r\n  canTakeAt = (rank: Rank, file: File, colour: \"WHITE\" | \"BLACK\"): boolean => {\r\n    const square = this.getPieceAt({ rank: rank as Rank, file });\r\n\r\n    return square.piece !== null && square.piece.colour !== colour;\r\n  };\r\n\r\n  canTakeEnPassant = (rank: Rank, file: File, piece: BasePiece): boolean => {\r\n    if (piece.pieceType !== \"PAWN\") return false;\r\n    if (!this.enPassant) return false;\r\n\r\n    return (\r\n      this.enPassant.file === file &&\r\n      this.enPassant.rank === rank + (piece.colour === \"WHITE\" ? -1 : 1)\r\n    );\r\n  };\r\n\r\n  canMoveTo = (rank: Rank, file: File): boolean => {\r\n    const pieceAt = this.getPieceAt({ rank: rank as Rank, file });\r\n    return pieceAt.piece === null;\r\n  };\r\n\r\n  getPieceAt = (position: Position): Square => {\r\n    const square = this._board.find(\r\n      (x) => x.rank === position.rank && x.file === position.file\r\n    );\r\n\r\n    if (square === undefined) throw new Error(\"Out of bounds\");\r\n\r\n    return square;\r\n  };\r\n\r\n  isKingInCheck = (colour: \"WHITE\" | \"BLACK\"): Boolean => {\r\n    const kingPosition = this.board.find(\r\n      (x) => x.piece?.pieceType === \"KING\" && x.piece.colour === colour\r\n    );\r\n\r\n    return this.board\r\n      .filter((x) => x.piece !== null && x.piece.colour !== colour)\r\n      .flatMap((x) =>\r\n        x.piece?.getPotentialMoves({ file: x.file, rank: x.rank }, this)\r\n      )\r\n      .some(\r\n        (x) =>\r\n          (x as Position).file === kingPosition?.file &&\r\n          (x as Position).rank === kingPosition?.rank\r\n      );\r\n  };\r\n}\r\n","import { Board } from \"./board\";\r\nimport {\r\n  InvalidMove,\r\n  PieceColour,\r\n  PieceType,\r\n  Position,\r\n  ValidMove,\r\n  ValidMoves,\r\n} from \"./types\";\r\n\r\ninterface IValidMoves {\r\n  getPotentialMoves(position: Position, board: Board): ValidMoves;\r\n\r\n  canMove(from: Position, to: Position, board: Board): ValidMove | InvalidMove;\r\n}\r\n\r\ninterface IPiece {\r\n  pieceType: PieceType;\r\n  colour: PieceColour;\r\n  moved: boolean;\r\n}\r\n\r\nexport abstract class BasePiece implements IValidMoves, IPiece {\r\n  abstract pieceType: PieceType;\r\n  colour: PieceColour;\r\n  moved: boolean;\r\n\r\n  setMoved() {\r\n    this.moved = true;\r\n  }\r\n\r\n  constructor(colour: PieceColour) {\r\n    this.colour = colour;\r\n    this.moved = false;\r\n  }\r\n\r\n  canMove(from: Position, to: Position, board: Board): ValidMove | InvalidMove {\r\n    const allMoves = this.getPotentialMoves(from, board);\r\n\r\n    console.log(allMoves);\r\n    const potentialMove = allMoves.find(\r\n      (position) => position.file === to.file && position.rank === to.rank\r\n    );\r\n\r\n    if (!potentialMove) return { move: \"INVALID\" };\r\n\r\n    const clone = board.clone();\r\n    clone.remove(from);\r\n    clone.placeAt(to, this);\r\n\r\n    const m: ValidMove | InvalidMove = !clone.isKingInCheck(this.colour)\r\n      ? potentialMove\r\n      : { move: \"INVALID\" };\r\n\r\n    return m;\r\n  }\r\n\r\n  abstract getPotentialMoves(from: Position, board: Board): ValidMoves;\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Board } from \"./board\";\r\nimport { PieceType, Position, ValidMoves } from \"./types\";\r\n\r\nexport class Bishop extends BasePiece {\r\n  pieceType = \"BISHOP\" as PieceType;\r\n\r\n  getPotentialMoves = (position: Position, board: Board): ValidMoves => {\r\n    return [\r\n      ...board.getMovesOnLine(position, this, -1, -1),\r\n      ...board.getMovesOnLine(position, this, 1, 1),\r\n      ...board.getMovesOnLine(position, this, 1, -1),\r\n      ...board.getMovesOnLine(position, this, -1, 1),\r\n    ];\r\n  };\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Board, FileArray } from \"./board\";\r\nimport { PieceType, Position, ValidMoves } from \"./types\";\r\n\r\nexport class King extends BasePiece {\r\n  pieceType = \"KING\" as PieceType;\r\n\r\n  getPotentialMoves = (position: Position, board: Board) => {\r\n    let validMoves: ValidMoves = [];\r\n    const moveDeltas = [\r\n      [1, 1],\r\n      [0, 1],\r\n      [1, 0],\r\n      [-1, 0],\r\n      [-1, -1],\r\n      [0, -1],\r\n      [-1, 1],\r\n      [1, -1],\r\n    ];\r\n\r\n    const file = FileArray.indexOf(position.file);\r\n    const rank = position.rank;\r\n\r\n    validMoves = moveDeltas\r\n      .map(([rd, fd]) => board.getMoveAtPosition(position, this, rd, fd))\r\n      .filter(board.isStandardMove);\r\n\r\n    if (this.canCastle(board, \"SHORT\"))\r\n      validMoves.push({\r\n        move: \"Castle\",\r\n        type: \"SHORT\",\r\n        colour: this.colour,\r\n        rank: rank,\r\n        file: FileArray[file + 2],\r\n      });\r\n\r\n    if (this.canCastle(board, \"LONG\"))\r\n      validMoves.push({\r\n        move: \"Castle\",\r\n        type: \"LONG\",\r\n        colour: this.colour,\r\n        rank: rank,\r\n        file: FileArray[file - 2],\r\n      });\r\n\r\n    return validMoves;\r\n  };\r\n\r\n  private castlingDeltas = (type: \"SHORT\" | \"LONG\") =>\r\n    type === \"SHORT\" ? [0, 1, 2] : [0, -1, -2];\r\n\r\n  private canCastle(board: Board, type: \"SHORT\" | \"LONG\") {\r\n    const moveDeltas = this.castlingDeltas(type);\r\n    const rookFile = type === \"SHORT\" ? \"h\" : \"a\";\r\n    const kingRank = this.colour === \"WHITE\" ? 1 : 8;\r\n\r\n    if (this.moved) return false;\r\n\r\n    const rook = board.getPieceAt({ rank: kingRank, file: rookFile });\r\n    if (!(rook.piece && !rook.piece.moved)) return false;\r\n\r\n    return moveDeltas.every((fileDelta) => {\r\n      const newFile = 4 + fileDelta;\r\n\r\n      const pieceAt = board.getPieceAt({\r\n        file: FileArray[newFile],\r\n        rank: kingRank,\r\n      });\r\n\r\n      if (!pieceAt || fileDelta === 0) {\r\n        const clone = board.clone();\r\n        const king = new King(this.colour);\r\n        king.setMoved();\r\n        clone.remove({ rank: kingRank, file: \"e\" });\r\n        clone.placeAt({ rank: kingRank, file: FileArray[newFile] }, king);\r\n\r\n        return !clone.isKingInCheck(this.colour);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Board } from \"./board\";\r\nimport { PieceType, Position, ValidMoves } from \"./types\";\r\n\r\nexport class Knight extends BasePiece {\r\n  pieceType = \"KNIGHT\" as PieceType;\r\n\r\n  getPotentialMoves = (position: Position, board: Board): ValidMoves => {\r\n    const moveDeltas = [\r\n      [1, 2],\r\n      [2, 1],\r\n      [-1, 2],\r\n      [-2, 1],\r\n      [-1, -2],\r\n      [-2, -1],\r\n      [1, -2],\r\n      [2, -1],\r\n    ];\r\n\r\n    return moveDeltas\r\n      .map(([rd, fd]) => board.getMoveAtPosition(position, this, rd, fd))\r\n      .filter(board.isStandardMove);\r\n  };\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Board } from \"./board\";\r\nimport { PieceType, Position, ValidMoves } from \"./types\";\r\n\r\nexport class Pawn extends BasePiece {\r\n  pieceType = \"PAWN\" as PieceType;\r\n\r\n  getPotentialMoves = (position: Position, board: Board) => {\r\n    const increment = this.colour === \"WHITE\" ? 1 : -1;\r\n\r\n    const moveDeltas = this.moved\r\n      ? [1 * increment]\r\n      : [1 * increment, 2 * increment];\r\n\r\n    const captureDeltas = [\r\n      [increment, 1],\r\n      [increment, -1],\r\n    ];\r\n\r\n    const moves: ValidMoves = moveDeltas\r\n      .map((rd) => board.getMoveAtPosition(position, this, rd, 0))\r\n      .filter(board.isStandardMove)\r\n      .filter((x) => x.move === \"Move\" || x.move === \"PawnPush\");\r\n\r\n    const captures: ValidMoves = captureDeltas\r\n      .map(([rd, fd]) => board.getMoveAtPosition(position, this, rd, fd))\r\n      .filter(board.isStandardMove)\r\n      .filter((x) => x.move === \"Capture\" || x.move === \"CaptureEnPassant\");\r\n\r\n    return [...moves, ...captures];\r\n  };\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Board } from \"./board\";\r\nimport { PieceType, Position, ValidMoves } from \"./types\";\r\n\r\nexport class Rook extends BasePiece {\r\n  pieceType = \"ROOK\" as PieceType;\r\n\r\n  getPotentialMoves(from: Position, board: Board): ValidMoves {\r\n    return [\r\n      ...board.getMovesOnLine(from, this, 1, 0),\r\n      ...board.getMovesOnLine(from, this, 0, 1),\r\n      ...board.getMovesOnLine(from, this, 0, -1),\r\n      ...board.getMovesOnLine(from, this, -1, 0),\r\n    ];\r\n  }\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Bishop } from \"./bishop\";\r\nimport { Board } from \"./board\";\r\nimport { Rook } from \"./rook\";\r\nimport { PieceType, Position } from \"./types\";\r\n\r\nexport class Queen extends BasePiece {\r\n  pieceType = \"QUEEN\" as PieceType;\r\n\r\n  getPotentialMoves = (position: Position, board: Board) => {\r\n    return [\r\n      ...new Rook(this.colour).getPotentialMoves(position, board),\r\n      ...new Bishop(this.colour).getPotentialMoves(position, board),\r\n    ];\r\n  };\r\n}\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Empty, Rank, File } from \"./types\";\r\n\r\nexport class Square {\r\n  private _piece: BasePiece | Empty;\r\n\r\n  public get piece(): BasePiece | Empty {\r\n    return this._piece;\r\n  }\r\n\r\n  rank: Rank;\r\n  file: File;\r\n\r\n  constructor(rank: Rank, file: File, piece: BasePiece | Empty = null) {\r\n    this.rank = rank;\r\n    this.file = file;\r\n    this._piece = piece;\r\n  }\r\n\r\n  place(piece: BasePiece) {\r\n    this._piece = piece;\r\n  }\r\n\r\n  remove() {\r\n    this._piece = null;\r\n  }\r\n\r\n  clone() {\r\n    return new Square(this.rank, this.file, this.piece);\r\n  }\r\n}\r\n","import React, { useReducer, createContext, Dispatch } from \"react\";\r\nimport { Board } from \"../engine/board\";\r\nimport { Game } from \"../engine/game\";\r\nimport { File, Rank } from \"../engine/types\";\r\n\r\nconst game = new Game();\r\nconst initialState: State = { board: game.board };\r\n\r\nconst GameContext = createContext<[State, Dispatch<Action>]>([\r\n  initialState,\r\n  () => null,\r\n]);\r\n\r\ntype State = {\r\n  activePiece?: ActivePiece;\r\n  threatenedSquare?: { rank: Rank; file: File };\r\n  board: Board;\r\n};\r\n\r\ntype ActivePiece = {\r\n  rank: Rank;\r\n  file: File;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype Action =\r\n  | { type: \"PIECE_HOVER\"; payload: { x: number; y: number } }\r\n  | {\r\n      type: \"PIECE_ACTIVATED\";\r\n      payload: { rank: Rank; file: File; x: number; y: number };\r\n    }\r\n  | {\r\n      type: \"SQUARE_ATTACKED\";\r\n      payload: { rank: Rank; file: File };\r\n    }\r\n  | { type: \"MOVE\" };\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"PIECE_HOVER\": {\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...state.activePiece,\r\n          x: action.payload.x,\r\n          y: action.payload.y,\r\n        },\r\n      };\r\n    }\r\n    case \"PIECE_ACTIVATED\":\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"SQUARE_ATTACKED\":\r\n      return {\r\n        ...state,\r\n        threatenedSquare: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"MOVE\": {\r\n      if (!state.threatenedSquare) throw new Error(\"state is corrupted\");\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      const from = {\r\n        file: state.activePiece.file,\r\n        rank: state.activePiece.rank,\r\n      };\r\n\r\n      const to = {\r\n        file: state.threatenedSquare.file,\r\n        rank: state.threatenedSquare.rank,\r\n      };\r\n\r\n      game.move(from, to);\r\n\r\n      return {\r\n        board: game.board,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\ntype props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst GameContextProvider = ({ children }: props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GameContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport {\r\n  GameContextProvider as DraggableContextProvider,\r\n  GameContext as DraggableContext,\r\n};\r\n","import { BasePiece } from \"./basePiece\";\r\nimport { Bishop } from \"./bishop\";\r\nimport { FileArray, RankArray } from \"./board\";\r\nimport { King } from \"./king\";\r\nimport { Knight } from \"./knight\";\r\nimport { Pawn } from \"./pawn\";\r\nimport { Queen } from \"./queen\";\r\nimport { Rook } from \"./rook\";\r\nimport { Square } from \"./square\";\r\nimport { PiecePosition, Rank, File } from \"./types\";\r\n\r\nexport const buildBoard = (): Square[] => {\r\n  const board = RankArray.flatMap((rank) =>\r\n    FileArray.map((file) => new Square(rank, file))\r\n  );\r\n\r\n  const placeAt = (rank: Rank, file: File, piece: BasePiece) => {\r\n    const sqaure = board.find((x) => x.file === file && x.rank === rank);\r\n    sqaure?.place(piece);\r\n  };\r\n\r\n  placeAt(1, \"a\", new Rook(\"WHITE\"));\r\n  placeAt(1, \"b\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"c\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"d\", new Queen(\"WHITE\"));\r\n  placeAt(1, \"e\", new King(\"WHITE\"));\r\n  placeAt(1, \"f\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"g\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"h\", new Rook(\"WHITE\"));\r\n\r\n  placeAt(2, \"a\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"b\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"c\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"d\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"e\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"f\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"g\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"h\", new Pawn(\"WHITE\"));\r\n\r\n  placeAt(7, \"a\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"b\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"c\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"d\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"e\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"f\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"g\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"h\", new Pawn(\"BLACK\"));\r\n\r\n  placeAt(8, \"a\", new Rook(\"BLACK\"));\r\n  placeAt(8, \"b\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"c\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"d\", new Queen(\"BLACK\"));\r\n  placeAt(8, \"e\", new King(\"BLACK\"));\r\n  placeAt(8, \"f\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"g\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"h\", new Rook(\"BLACK\"));\r\n\r\n  return board;\r\n};\r\n\r\nconst InitialBoard: PiecePosition[] = [\r\n  {\r\n    position: { rank: 1, file: \"a\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"b\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"c\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"d\" },\r\n    piece: new Queen(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"e\" },\r\n    piece: new King(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"f\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"g\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"h\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"a\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"b\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"c\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"d\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"e\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"f\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"g\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"h\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"a\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"b\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"c\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"d\" },\r\n    piece: new Queen(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"e\" },\r\n    piece: new King(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"f\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"g\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"h\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"a\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"b\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"c\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"d\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"e\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"f\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"g\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"h\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n];\r\n\r\nexport default InitialBoard;\r\n","import { Board } from \"./board\";\r\nimport { buildBoard } from \"./initial-board\";\r\nimport { File, Position } from \"./types\";\r\n\r\nexport class Game {\r\n  private _board: Board;\r\n\r\n  public get board(): Board {\r\n    return this._board;\r\n  }\r\n\r\n  constructor() {\r\n    this._board = new Board(buildBoard());\r\n  }\r\n\r\n  move(from: Position, to: Position) {\r\n    const square = this._board.getPieceAt(from);\r\n    console.log(square);\r\n    if (!square.piece) throw new Error(\"No Piece to move\");\r\n\r\n    const move = square.piece.canMove(from, to, this.board);\r\n    console.log(move);\r\n\r\n    switch (move.move) {\r\n      case \"INVALID\":\r\n        break;\r\n      case \"Move\":\r\n      case \"PawnPush\":\r\n      case \"CaptureEnPassant\":\r\n      case \"Capture\": {\r\n        if (move.move === \"CaptureEnPassant\") {\r\n          if (!this._board.enPassant) throw new Error(\"no enPassant\");\r\n          this._board.remove(this._board.enPassant);\r\n        }\r\n        this._board.move(from, to);\r\n\r\n        if (move.move === \"PawnPush\") {\r\n          this._board.enPassant = to;\r\n        } else {\r\n          this._board.enPassant = undefined;\r\n        }\r\n        break;\r\n      }\r\n      case \"Castle\": {\r\n        this._board.move(from, to);\r\n\r\n        const rookFrom = {\r\n          rank: square.rank,\r\n          file: move.type === \"SHORT\" ? \"h\" : (\"a\" as File),\r\n        };\r\n\r\n        const rookTo = {\r\n          rank: square.rank,\r\n          file: move.type === \"SHORT\" ? \"f\" : (\"d\" as File),\r\n        };\r\n\r\n        this._board.move(rookFrom, rookTo);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { useState } from \"react\";\nimport { Draggable } from \"./components/draggable\";\nimport { Black, White } from \"./components/classic_pieces\";\nimport styles from \"./App.module.css\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport {\n  DraggableContext,\n  DraggableContextProvider,\n} from \"./components/game-context\";\nimport { useContext } from \"react\";\nimport { File, Rank } from \"./engine/types\";\nimport {\n  FileArray,\n  isLightSquare,\n  RankArray,\n  Board as GameBoard,\n} from \"./engine/board\";\n\nconst getPieceAt = (rank: Rank, file: File, currentBoard: GameBoard) => {\n  const square = currentBoard.getPieceAt({ rank, file });\n\n  if (square.piece) {\n    const set = square.piece.colour === \"WHITE\" ? White : Black;\n    switch (square.piece.pieceType) {\n      case \"BISHOP\":\n        return set.Bishop;\n      case \"KING\":\n        return set.King;\n      case \"KNIGHT\":\n        return set.Knight;\n      case \"PAWN\":\n        return set.Pawn;\n      case \"QUEEN\":\n        return set.Queen;\n      case \"ROOK\":\n        return set.Rook;\n    }\n  }\n};\n\ntype gridProps = {\n  rank: Rank;\n  file: File;\n  bound: DOMRect | undefined;\n};\n\nconst GridPosition = ({ rank, file, bound }: gridProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useContext(DraggableContext);\n  const [inBound, setInBound] = useState(false);\n  const isLight = isLightSquare(rank, file);\n  const Piece = getPieceAt(rank, file, state.board);\n\n  useEffect(() => {\n    const bound = ref.current?.getBoundingClientRect();\n\n    if (bound) {\n      if (\n        state.activePiece &&\n        state.activePiece.x >= bound?.left &&\n        state.activePiece.x < bound?.right &&\n        state.activePiece.y >= bound.top &&\n        state.activePiece.y < bound.bottom\n      ) {\n        setInBound(true);\n      } else {\n        setInBound(false);\n      }\n    }\n  }, [state, rank, file]);\n\n  useEffect(() => {\n    if (inBound) {\n      dispatch({ type: \"SQUARE_ATTACKED\", payload: { rank, file } });\n    }\n  }, [inBound, dispatch, file, rank]);\n\n  const pieceHover = useCallback(\n    (x, y) => dispatch({ type: \"PIECE_HOVER\", payload: { x, y } }),\n    [dispatch]\n  );\n\n  const pieceActivated = useCallback(\n    (x, y) =>\n      dispatch({ type: \"PIECE_ACTIVATED\", payload: { rank, file, x, y } }),\n    [dispatch, rank, file]\n  );\n\n  const move = useCallback(() => dispatch({ type: \"MOVE\" }), [dispatch]);\n\n  return (\n    <div\n      className={`${styles.chessSquare} ${isLight ? styles.light : \"\"} ${\n        inBound ? styles.highlighted : \"\"\n      }`}\n      //@ts-ignore\n      rank={rank}\n      file={file}\n      key={rank + file}\n      ref={ref}\n    >\n      {Piece && (\n        <Draggable\n          boundingBox={bound}\n          onMouseUp={move}\n          onMouseMove={pieceHover}\n          onMouseDown={pieceActivated}\n        >\n          <Piece />\n        </Draggable>\n      )}\n    </div>\n  );\n};\n\nconst Board = () => {\n  const chessGrid = useRef<HTMLDivElement>(null);\n  const [bound, setBound] = useState<DOMRect>();\n\n  const onWindowResize = useCallback(() => {\n    setBound(chessGrid.current?.getBoundingClientRect());\n  }, []);\n\n  useOnWindowResize(onWindowResize);\n\n  useEffect(() => {\n    setBound(chessGrid.current?.getBoundingClientRect());\n  }, [chessGrid]);\n\n  return (\n    <div className={styles.container}>\n      <div ref={chessGrid} className={styles.chessGrid}>\n        {RankArray.map((r) =>\n          FileArray.map((f) => (\n            <GridPosition rank={r} file={f} bound={bound} key={r + f} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <DraggableContextProvider>\n      <Board />\n    </DraggableContextProvider>\n  );\n}\n\nexport default App;\n\nconst useOnWindowResize = (action: Function) => {\n  useEffect(() => {\n    const handleResize = () => {\n      action();\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [action]);\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}