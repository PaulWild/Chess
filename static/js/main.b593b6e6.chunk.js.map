{"version":3,"sources":["components/draggable.module.css","components/draggable.tsx","components/classic_pieces/bishop_black.tsx","components/classic_pieces/bishop_white.tsx","components/classic_pieces/king_black.tsx","components/classic_pieces/king_white.tsx","components/classic_pieces/knight_black.tsx","components/classic_pieces/knight_white.tsx","components/classic_pieces/pawn_black.tsx","components/classic_pieces/pawn_white.tsx","components/classic_pieces/queen_black.tsx","components/classic_pieces/queen_white.tsx","components/classic_pieces/rook_black.tsx","components/classic_pieces/rook_white.tsx","engine/types.ts","components/classic_pieces/index.tsx","engine/board.ts","engine/basePiece.ts","engine/pieces.ts","engine/square.ts","components/game-context.tsx","engine/initial-board.ts","engine/game.ts","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["module","exports","Draggable","children","boundingBox","onMouseDown","onMouseMove","onMouseUp","useState","x","y","pressed","initial","setInitial","position","setPosition","ref","useRef","useEffect","current","style","transform","onMouseUpCallback","React","useCallback","onMouseMoveCallback","eventAction","ev","type","touches","Math","max","min","pageX","right","left","pageY","bottom","top","dx","dy","activeCallback","document","addEventListener","removeEventListener","onMouseDownCallback","box","getBoundingClientRect","initX","initY","width","height","className","Styles","active","onTouchStart","BishopBlack","props","xmlns","viewBox","fill","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","BishopWhite","KingBlack","KingWhite","KnightBlack","KnightWhite","PawnBlack","PawnWhite","QueenBlack","cx","cy","r","QueenWhite","RookBlack","RookWhite","CastlingRights","Black","King","Queen","Knight","Bishop","Pawn","Rook","White","RankArray","FileArray","Board","initialPositions","movedPieces","_board","_movedPieces","addToMoved","piece","includes","push","pieceMoved","clone","map","_","move","from","to","squareFrom","getPieceAt","squareFromPiece","squareTo","Error","remove","place","square","placeAt","find","rank","file","undefined","getPieces","colour","board","filter","getKing","king","pieceType","this","ranks","forEach","count","rankString","str","toUpperCase","join","BaseValidator","enPassantTarget","castlingRights","getMoveAtPosition","rankDelta","fileDelta","newFile","indexOf","newRank","checkPosition","getMovesOnLine","validMoves","i","canTakeAt","canTakeEnPassant","canMoveTo","isStandardMove","item","console","log","isKingInCheck","kingPosition","flatMap","getMoveValidator","getPotentialMoves","some","potentialMove","BishopValidator","RookValidator","QueenValidator","KnightValidator","rd","fd","PawnValidator","increment","captureDeltas","moves","captures","KingValidator","castlingDeltas","canCastle","moveDeltas","rookFile","kingRank","side","rook","every","enPessantTarget","None","BasePiece","Square","_piece","game","_fullMoves","_halfMoves","_enPessantSquare","_castlingAbility","_state","sqaure","buildBoard","K","Q","k","q","canMove","rookFrom","rookTo","changeState","getFenString","fenPlacement","castlingAbilityString","_enPessantFen","length","checkMate","staleMate","initialState","state","GameContext","createContext","reducer","action","activePiece","payload","threatenedSquare","GameContextProvider","useReducer","dispatch","Provider","value","GridPosition","bound","useContext","DraggableContext","inBound","setInBound","isLight","isLightSquare","Piece","currentBoard","set","pieceHover","pieceActivated","styles","chessSquare","light","highlighted","gameStateAsString","chessGrid","setBound","onWindowResize","useOnWindowResize","container","f","infoPane","App","handleResize","window","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b593b6e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"draggable_active__3TbHp\"};","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Styles from \"./draggable.module.css\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  boundingBox?: DOMRect;\r\n  onMouseDown?: (x: number, y: number) => void;\r\n  onMouseMove?: (x: number, y: number) => void;\r\n  onMouseUp?: (x: number, y: number) => void;\r\n};\r\n\r\nexport const Draggable = ({\r\n  children,\r\n  boundingBox,\r\n  onMouseDown,\r\n  onMouseMove,\r\n  onMouseUp,\r\n}: Props) => {\r\n  const [initial, setInitial] = useState({ x: 0, y: 0, pressed: false });\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current && initial.pressed) {\r\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`;\r\n    } else if (ref.current) {\r\n      ref.current.style.transform = \"\";\r\n    }\r\n  }, [position, initial.pressed]);\r\n\r\n  const onMouseUpCallback = React.useCallback((): void => {\r\n    setInitial({ x: 0, y: 0, pressed: false });\r\n    setPosition({ x: 0, y: 0 });\r\n    onMouseUp?.(-1, -1);\r\n  }, [onMouseUp]);\r\n\r\n  const onMouseMoveCallback = React.useCallback(\r\n    (eventAction: MouseEvent | TouchEvent): void => {\r\n      let ev;\r\n      if (eventAction.type === \"mousemove\") {\r\n        ev = eventAction as MouseEvent;\r\n      } else {\r\n        ev = (eventAction as TouchEvent).touches[0];\r\n      }\r\n\r\n      const x = boundingBox\r\n        ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n        : ev.pageX;\r\n      const y = boundingBox\r\n        ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n        : ev.pageY;\r\n\r\n      const dx = x - initial.x;\r\n      const dy = y - initial.y;\r\n\r\n      onMouseMove?.(x, y);\r\n      setPosition({\r\n        x: dx,\r\n        y: dy,\r\n      });\r\n    },\r\n    [initial, boundingBox, onMouseMove]\r\n  );\r\n  const activeCallback = useRef(onMouseMoveCallback);\r\n\r\n  useEffect(() => {\r\n    if (initial.pressed) {\r\n      activeCallback.current = onMouseMoveCallback;\r\n      document.addEventListener(\"mousemove\", onMouseMoveCallback);\r\n      document.addEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.addEventListener(\"touchmove\", onMouseMoveCallback);\r\n      document.addEventListener(\"touchend\", onMouseUpCallback);\r\n    } else {\r\n      document.removeEventListener(\"mousemove\", activeCallback.current);\r\n      document.removeEventListener(\"mouseup\", onMouseUpCallback);\r\n      document.removeEventListener(\"touchmove\", activeCallback.current);\r\n      document.removeEventListener(\"touchend\", onMouseUpCallback);\r\n    }\r\n  }, [initial.pressed, onMouseMoveCallback, onMouseUpCallback]);\r\n\r\n  const onMouseDownCallback = (\r\n    eventAction: React.MouseEvent | React.TouchEvent\r\n  ) => {\r\n    let ev;\r\n    if (eventAction.type === \"mousedown\") {\r\n      ev = eventAction as React.MouseEvent;\r\n    } else {\r\n      ev = (eventAction as React.TouchEvent).touches[0];\r\n    }\r\n    const box = ref.current?.getBoundingClientRect();\r\n\r\n    let initX = ev.pageX;\r\n    let initY = ev.pageY;\r\n\r\n    if (box) {\r\n      initX = box?.x + box?.width / 2;\r\n      initY = box?.y + box?.height / 2;\r\n    }\r\n\r\n    const x = boundingBox\r\n      ? Math.max(Math.min(ev.pageX, boundingBox.right), boundingBox.left)\r\n      : ev.pageX;\r\n    const y = boundingBox\r\n      ? Math.max(Math.min(ev.pageY, boundingBox.bottom), boundingBox.top)\r\n      : ev.pageY;\r\n\r\n    const dx = x - initX;\r\n    const dy = y - initY;\r\n\r\n    setPosition({ x: dx, y: dy });\r\n    onMouseDown?.(x, y);\r\n    setInitial({ x: initX, y: initY, pressed: true });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={initial.pressed ? Styles.active : \"\"}\r\n      ref={ref}\r\n      onMouseDown={onMouseDownCallback}\r\n      onTouchStart={onMouseDownCallback}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nfunction BishopBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#000\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          stroke=\"#fff\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction BishopWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <g fill=\"#fff\" strokeLinecap=\"butt\">\r\n          <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\r\n          <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\r\n          <path d=\"M25 8a2.5 2.5 0 11-5 0 2.5 2.5 0 115 0z\" />\r\n        </g>\r\n        <path\r\n          d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(BishopWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KingBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#000\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#000\"\r\n        />\r\n        <path d=\"M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M32 29.5s8.5-4 6.03-9.65C34.15 14 25 18 22.5 24.5v2.1-2.1C20 18 10.85 14 6.97 19.85 4.5 25.5 13 29.5 13 29.5\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M12.5 30c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0\"\r\n          stroke=\"#fff\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KingWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22.5 11.63V6M20 8h5\" strokeLinejoin=\"miter\" />\r\n        <path\r\n          d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\r\n          fill=\"#fff\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M12.5 30c5.5-3 14.5-3 20 0M12.5 33.5c5.5-3 14.5-3 20 0M12.5 37c5.5-3 14.5-3 20 0\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KingWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#000\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#000\"\r\n        />\r\n        <path\r\n          d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#fff\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1.49997}\r\n        />\r\n        <path\r\n          d=\"M24.55 10.4l-.45 1.45.5.15c3.15 1 5.65 2.49 7.9 6.75S35.75 29.06 35.25 39l-.05.5h2.25l.05-.5c.5-10.06-.88-16.85-3.25-21.34-2.37-4.49-5.79-6.64-9.19-7.16l-.51-.1z\"\r\n          fill=\"#fff\"\r\n          stroke=\"none\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction KnightWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\" fill=\"#fff\" />\r\n        <path\r\n          d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path d=\"M9.5 25.5a.5.5 0 11-1 0 .5.5 0 111 0z\" fill=\"#000\" />\r\n        <path\r\n          d=\"M14.933 15.75a.5 1.5 30 11-.866-.5.5 1.5 30 11.866.5z\"\r\n          fill=\"#000\"\r\n          strokeWidth={1.49997}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(KnightWhite);\r\n","import * as React from \"react\";\r\n\r\nconst PawnBlack = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default React.memo(PawnBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction PawnWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\r\n        fill=\"#fff\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(PawnWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0zM11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\" />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n        <path d=\"M11 38.5a35 35 1 0023 0\" fill=\"none\" strokeLinecap=\"butt\" />\r\n        <g fill=\"none\" stroke=\"#fff\">\r\n          <path d=\"M11 29a35 35 1 0123 0M12.5 31.5h20M11.5 34.5a35 35 1 0022 0M10.5 37.5a35 35 1 0024 0\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction QueenWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#fff\" stroke=\"#000\" strokeWidth={1.5} strokeLinejoin=\"round\">\r\n        <path d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\" />\r\n        <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0z\" />\r\n        <path\r\n          d=\"M11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\"\r\n          fill=\"none\"\r\n        />\r\n        <circle cx={6} cy={12} r={2} />\r\n        <circle cx={14} cy={9} r={2} />\r\n        <circle cx={22.5} cy={8} r={2} />\r\n        <circle cx={31} cy={9} r={2} />\r\n        <circle cx={39} cy={12} r={2} />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(QueenWhite);\r\n","import * as React from \"react\";\r\n\r\nfunction RookBlack(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12.5 32l1.5-2.5h17l1.5 2.5h-20zM12 36v-4h21v4H12z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M14 29.5v-13h17v13H14z\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path\r\n          d=\"M14 16.5L11 14h23l-3 2.5H14zM11 14V9h4v2h5V9h5v2h5V9h4v5H11z\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path\r\n          d=\"M12 35.5h21M13 31.5h19M14 29.5h17M14 16.5h17M11 14h23\"\r\n          fill=\"none\"\r\n          stroke=\"#fff\"\r\n          strokeWidth={1}\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookBlack);\r\n","import * as React from \"react\";\r\n\r\nfunction RookWhite(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 45 45\"\r\n      {...props}\r\n    >\r\n      <g\r\n        fill=\"#fff\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#000\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path\r\n          d=\"M9 39h27v-3H9v3zM12 36v-4h21v4H12zM11 14V9h4v2h5V9h5v2h5V9h4v5\"\r\n          strokeLinecap=\"butt\"\r\n        />\r\n        <path d=\"M34 14l-3 3H14l-3-3\" />\r\n        <path\r\n          d=\"M31 17v12.5H14V17\"\r\n          strokeLinecap=\"butt\"\r\n          strokeLinejoin=\"miter\"\r\n        />\r\n        <path d=\"M31 29.5l1.5 2.5h-20l1.5-2.5\" />\r\n        <path d=\"M11 14h23\" fill=\"none\" strokeLinejoin=\"miter\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(RookWhite);\r\n","import { IPiece } from \"./pieces\";\r\n\r\nexport type PiecePosition = {\r\n  position: Position;\r\n  piece: IPiece;\r\n};\r\n\r\nexport type PieceType =\r\n  | \"ROOK\"\r\n  | \"KNIGHT\"\r\n  | \"BISHOP\"\r\n  | \"KING\"\r\n  | \"QUEEN\"\r\n  | \"PAWN\";\r\n\r\nexport type PieceColour = \"WHITE\" | \"BLACK\";\r\n\r\nexport type Rank = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n\r\nexport type File = \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" | \"g\" | \"h\";\r\n\r\nexport type Position = {\r\n  rank: Rank;\r\n  file: File;\r\n};\r\n\r\nexport type StandardMove = {\r\n  move: \"Move\";\r\n} & Position;\r\n\r\nexport type PawnPush = {\r\n  move: \"PawnPush\";\r\n} & Position;\r\n\r\nexport type Capture = {\r\n  move: \"Capture\";\r\n} & Position;\r\n\r\nexport type CaptureEnPassant = {\r\n  move: \"CaptureEnPassant\";\r\n} & Position;\r\n\r\nexport type Castle = {\r\n  move: \"Castle\";\r\n  type: \"SHORT\" | \"LONG\";\r\n  colour: \"WHITE\" | \"BLACK\";\r\n} & Position;\r\n\r\nexport type InvalidMove = {\r\n  move: \"INVALID\";\r\n};\r\n\r\nexport type ValidMove =\r\n  | StandardMove\r\n  | Capture\r\n  | Castle\r\n  | PawnPush\r\n  | CaptureEnPassant;\r\n\r\nexport type ValidMoves = ValidMove[];\r\n\r\nexport type Empty = null;\r\n\r\nexport type GameState =\r\n  | \"WhiteMove\"\r\n  | \"BlackMove\"\r\n  | \"WhiteWin\"\r\n  | \"BlackWin\"\r\n  | \"StaleMate\"\r\n  | \"DrawRepition3\"\r\n  | \"DrawRepition5\";\r\n\r\nexport enum CastlingRights {\r\n  None = 0,\r\n  K = 1 << 0,\r\n  Q = 1 << 1,\r\n  k = 1 << 2,\r\n  q = 1 << 3,\r\n}\r\n","import BishopBlack from \"./bishop_black\";\r\nimport BishopWhite from \"./bishop_white\";\r\nimport KingBlack from \"./king_black\";\r\nimport KingWhite from \"./king_white\";\r\nimport KnightBlack from \"./knight_black\";\r\nimport KnightWhite from \"./knight_white\";\r\nimport PawnBlack from \"./pawn_black\";\r\nimport PawnWhite from \"./pawn_white\";\r\nimport QueenBlack from \"./queen_black\";\r\nimport QueenWhite from \"./queen_white\";\r\nimport RookBlack from \"./rook_black\";\r\nimport RookWhite from \"./rook_white\";\r\n\r\nconst Black = {\r\n  King: KingBlack,\r\n  Queen: QueenBlack,\r\n  Knight: KnightBlack,\r\n  Bishop: BishopBlack,\r\n  Pawn: PawnBlack,\r\n  Rook: RookBlack,\r\n};\r\n\r\nconst White = {\r\n  King: KingWhite,\r\n  Queen: QueenWhite,\r\n  Knight: KnightWhite,\r\n  Bishop: BishopWhite,\r\n  Pawn: PawnWhite,\r\n  Rook: RookWhite,\r\n};\r\n\r\nexport { Black, White };\r\n","import { IPiece } from \"./pieces\";\r\nimport { Square } from \"./square\";\r\nimport { File, PieceColour, Position, Rank } from \"./types\";\r\n\r\nexport const RankArray: Rank[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\nexport const FileArray: File[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\n\r\nexport const isLightSquare = (rank: Rank, file: File) => {\r\n  if (rank % 2 === 0 && FileArray.indexOf(file) % 2 === 0) {\r\n    return true;\r\n  } else if (rank % 2 === 1 && FileArray.indexOf(file) % 2 === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport class Board {\r\n  private _board: Square[];\r\n\r\n  public get board() {\r\n    return this._board;\r\n  }\r\n\r\n  private _movedPieces: IPiece[];\r\n\r\n  constructor(initialPositions: Square[], movedPieces: IPiece[] | [] = []) {\r\n    this._board = initialPositions;\r\n    this._movedPieces = movedPieces;\r\n  }\r\n\r\n  addToMoved = (piece: IPiece) => {\r\n    if (!this._movedPieces.includes(piece)) {\r\n      this._movedPieces.push(piece);\r\n    }\r\n  };\r\n\r\n  pieceMoved = (piece: IPiece) => {\r\n    return this._movedPieces.includes(piece);\r\n  };\r\n\r\n  clone = () => {\r\n    const board = this._board.map((x) => x.clone());\r\n    return new Board(\r\n      board,\r\n      this._movedPieces.map((_) => _)\r\n    );\r\n  };\r\n\r\n  move = (from: Position, to: Position) => {\r\n    const squareFrom = this.getPieceAt(from);\r\n    const squareFromPiece = squareFrom.piece;\r\n    const squareTo = this.getPieceAt(to);\r\n\r\n    if (!squareFromPiece) throw new Error(\"no piece to move\");\r\n\r\n    squareFrom.remove();\r\n    this.addToMoved(squareFromPiece);\r\n    squareTo.place(squareFromPiece);\r\n  };\r\n\r\n  remove = (position: Position) => {\r\n    const square = this.getPieceAt(position);\r\n    if (!square.piece) throw new Error(\"no piece to remove\");\r\n    square.remove();\r\n  };\r\n\r\n  placeAt = (position: Position, piece: IPiece) => {\r\n    const square = this.getPieceAt(position);\r\n    square.place(piece);\r\n  };\r\n\r\n  getPieceAt = (position: Position): Square => {\r\n    const square = this._board.find(\r\n      (x) => x.rank === position.rank && x.file === position.file\r\n    );\r\n\r\n    if (square === undefined) throw new Error(\"Out of bounds\");\r\n\r\n    return square;\r\n  };\r\n\r\n  getPieces = (colour: PieceColour): Square[] => {\r\n    return this.board.filter(\r\n      (x) => x.piece !== null && x.piece.colour === colour\r\n    );\r\n  };\r\n\r\n  getKing = (colour: PieceColour): Square => {\r\n    const king = this.board.find(\r\n      (x) => x.piece?.pieceType === \"KING\" && x.piece.colour === colour\r\n    );\r\n\r\n    if (!king) {\r\n      throw new Error(\"Where's the king?\");\r\n    }\r\n    return king;\r\n  };\r\n\r\n  public get fenPlacement(): string {\r\n    let ranks: string[] = [];\r\n    RankArray.forEach((rank) => {\r\n      let count = 0;\r\n      let rankString = \"\";\r\n      FileArray.forEach((file) => {\r\n        let piece = this.getPieceAt({ rank, file });\r\n        if (piece.piece) {\r\n          if (count > 0) {\r\n            rankString += count;\r\n            count = 0;\r\n          }\r\n          let str = \"\";\r\n          switch (piece.piece!.pieceType) {\r\n            case \"BISHOP\":\r\n              str = \"b\";\r\n              break;\r\n            case \"KING\":\r\n              str = \"k\";\r\n              break;\r\n            case \"KNIGHT\":\r\n              str = \"n\";\r\n              break;\r\n            case \"PAWN\":\r\n              str = \"p\";\r\n              break;\r\n            case \"QUEEN\":\r\n              str = \"q\";\r\n              break;\r\n            case \"ROOK\":\r\n              str = \"r\";\r\n              break;\r\n          }\r\n          if (piece.piece.colour === \"WHITE\") {\r\n            str = str.toUpperCase();\r\n          }\r\n\r\n          rankString += str;\r\n        } else if (file === \"h\") {\r\n          rankString += ++count;\r\n        }\r\n        if (!piece.piece) {\r\n          count += 1;\r\n        }\r\n      });\r\n      ranks.push(rankString);\r\n    });\r\n\r\n    return ranks.join(\"/\");\r\n  }\r\n}\r\n","import { Board, FileArray } from \"./board\";\r\nimport { IPiece } from \"./pieces\";\r\n\r\nimport {\r\n  InvalidMove,\r\n  Position,\r\n  Rank,\r\n  ValidMove,\r\n  ValidMoves,\r\n  File,\r\n  PieceColour,\r\n  CastlingRights,\r\n} from \"./types\";\r\n\r\ninterface IValidMoves {\r\n  getPotentialMoves(position: Position): ValidMoves;\r\n\r\n  canMove(from: Position, to: Position): ValidMove | InvalidMove;\r\n}\r\n\r\nabstract class BaseValidator implements IValidMoves {\r\n  piece: IPiece;\r\n  board: Board;\r\n  enPassantTarget: Position | undefined;\r\n  castlingRights: CastlingRights;\r\n\r\n  constructor(\r\n    piece: IPiece,\r\n    board: Board,\r\n    enPassantTarget: Position | undefined,\r\n    castlingRights: CastlingRights\r\n  ) {\r\n    this.piece = piece;\r\n    this.board = board;\r\n    this.enPassantTarget = enPassantTarget;\r\n    this.castlingRights = castlingRights;\r\n  }\r\n\r\n  moves(from: Position): ValidMoves {\r\n    const allMoves = this.getPotentialMoves(from);\r\n    return allMoves.filter((x) => {\r\n      const clone = this.board.clone();\r\n      clone.move(from, { rank: x.rank, file: x.file });\r\n\r\n      return !getMoveValidator(this.piece, clone).isKingInCheck(\r\n        this.piece.colour\r\n      );\r\n    });\r\n  }\r\n\r\n  canMove(from: Position, to: Position): ValidMove | InvalidMove {\r\n    const allMoves = this.getPotentialMoves(from);\r\n\r\n    const potentialMove = allMoves.find(\r\n      (position) => position.file === to.file && position.rank === to.rank\r\n    );\r\n\r\n    if (!potentialMove) return { move: \"INVALID\" };\r\n\r\n    const clone = this.board.clone();\r\n    clone.move(from, to);\r\n\r\n    const m: ValidMove | InvalidMove = !getMoveValidator(\r\n      this.piece,\r\n      clone\r\n    ).isKingInCheck(this.piece.colour)\r\n      ? potentialMove\r\n      : { move: \"INVALID\" };\r\n\r\n    return m;\r\n  }\r\n\r\n  getMoveAtPosition = (\r\n    position: Position,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMove | undefined => {\r\n    const newFile = FileArray.indexOf(position.file) + fileDelta;\r\n    const newRank = position.rank + rankDelta;\r\n\r\n    if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n      return;\r\n    }\r\n    return this.checkPosition(newRank as Rank, FileArray[newFile]);\r\n  };\r\n\r\n  getMovesOnLine = (\r\n    position: Position,\r\n    rankDelta: number,\r\n    fileDelta: number\r\n  ): ValidMoves => {\r\n    const validMoves = [];\r\n    for (let i = 1; i < 8; i++) {\r\n      const newFile = FileArray.indexOf(position.file) + fileDelta * i;\r\n      const newRank = position.rank + rankDelta * i;\r\n\r\n      if (newRank > 8 || newFile > 7 || newRank < 1 || newFile < 0) {\r\n        break;\r\n      }\r\n\r\n      const move = this.checkPosition(newRank as Rank, FileArray[newFile]);\r\n\r\n      if (move === undefined) {\r\n        break;\r\n      }\r\n\r\n      validMoves.push(move);\r\n\r\n      if (move.move === \"Capture\") {\r\n        break;\r\n      }\r\n    }\r\n    return validMoves;\r\n  };\r\n\r\n  checkPosition = (rank: Rank, file: File): ValidMove | undefined => {\r\n    if (this.canTakeAt(rank, file)) {\r\n      return {\r\n        move: \"Capture\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    if (this.canTakeEnPassant(rank, file)) {\r\n      return {\r\n        move: \"CaptureEnPassant\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    if (this.canMoveTo(rank, file)) {\r\n      if (\r\n        this.piece.pieceType === \"PAWN\" &&\r\n        !this.board.pieceMoved(this.piece) &&\r\n        (rank === 4 || rank === 5)\r\n      ) {\r\n        return {\r\n          move: \"PawnPush\",\r\n          rank: rank,\r\n          file: file,\r\n        };\r\n      }\r\n      return {\r\n        move: \"Move\",\r\n        rank: rank,\r\n        file: file,\r\n      };\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  isStandardMove = (item: ValidMove | undefined): item is ValidMove => {\r\n    return !!item;\r\n  };\r\n\r\n  canTakeAt = (rank: Rank, file: File): boolean => {\r\n    const square = this.board.getPieceAt({ rank: rank as Rank, file });\r\n\r\n    return square.piece !== null && square.piece.colour !== this.piece.colour;\r\n  };\r\n\r\n  canTakeEnPassant = (rank: Rank, file: File): boolean => {\r\n    if (this.piece.pieceType !== \"PAWN\") return false;\r\n    if (!this.enPassantTarget) return false;\r\n\r\n    console.log(this.enPassantTarget);\r\n    return (\r\n      this.enPassantTarget.file === file && this.enPassantTarget.rank === rank\r\n    );\r\n  };\r\n\r\n  canMoveTo = (rank: Rank, file: File): boolean => {\r\n    const pieceAt = this.board.getPieceAt({ rank: rank as Rank, file });\r\n    return pieceAt.piece === null;\r\n  };\r\n\r\n  isKingInCheck = (colour: PieceColour): Boolean => {\r\n    const kingPosition = this.board.getKing(colour);\r\n\r\n    return this.board\r\n      .getPieces(colour === \"WHITE\" ? \"BLACK\" : \"WHITE\")\r\n      .flatMap((x) =>\r\n        getMoveValidator(x.piece as IPiece, this.board).getPotentialMoves({\r\n          file: x.file,\r\n          rank: x.rank,\r\n        })\r\n      )\r\n      .some(\r\n        (x) =>\r\n          (x as Position).file === kingPosition?.file &&\r\n          (x as Position).rank === kingPosition?.rank\r\n      );\r\n  };\r\n\r\n  abstract getPotentialMoves(from: Position): ValidMoves;\r\n}\r\n\r\nexport class BishopValidator extends BaseValidator {\r\n  getPotentialMoves(from: Position): ValidMoves {\r\n    return [\r\n      ...this.getMovesOnLine(from, -1, -1),\r\n      ...this.getMovesOnLine(from, 1, 1),\r\n      ...this.getMovesOnLine(from, 1, -1),\r\n      ...this.getMovesOnLine(from, -1, 1),\r\n    ];\r\n  }\r\n}\r\n\r\nexport class RookValidator extends BaseValidator {\r\n  getPotentialMoves(from: Position): ValidMoves {\r\n    return [\r\n      ...this.getMovesOnLine(from, 1, 0),\r\n      ...this.getMovesOnLine(from, 0, 1),\r\n      ...this.getMovesOnLine(from, 0, -1),\r\n      ...this.getMovesOnLine(from, -1, 0),\r\n    ];\r\n  }\r\n}\r\n\r\nexport class QueenValidator extends BaseValidator {\r\n  getPotentialMoves(from: Position): ValidMoves {\r\n    return [\r\n      ...new RookValidator(\r\n        this.piece,\r\n        this.board,\r\n        this.enPassantTarget,\r\n        this.castlingRights\r\n      ).getPotentialMoves(from),\r\n      ...new BishopValidator(\r\n        this.piece,\r\n        this.board,\r\n        this.enPassantTarget,\r\n        this.castlingRights\r\n      ).getPotentialMoves(from),\r\n    ];\r\n  }\r\n}\r\n\r\nexport class KnightValidator extends BaseValidator {\r\n  getPotentialMoves(from: Position): ValidMoves {\r\n    const moveDeltas = [\r\n      [1, 2],\r\n      [2, 1],\r\n      [-1, 2],\r\n      [-2, 1],\r\n      [-1, -2],\r\n      [-2, -1],\r\n      [1, -2],\r\n      [2, -1],\r\n    ];\r\n\r\n    const piece = this.board.getPieceAt(from);\r\n    if (piece.piece === null) {\r\n      throw new Error(\"nope\");\r\n    }\r\n\r\n    return moveDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove);\r\n  }\r\n}\r\n\r\nexport class PawnValidator extends BaseValidator {\r\n  getPotentialMoves(from: Position): ValidMoves {\r\n    const increment = this.piece.colour === \"WHITE\" ? 1 : -1;\r\n\r\n    const moveDeltas = this.board.pieceMoved(this.piece)\r\n      ? [1 * increment]\r\n      : [1 * increment, 2 * increment];\r\n\r\n    const captureDeltas = [\r\n      [increment, 1],\r\n      [increment, -1],\r\n    ];\r\n\r\n    const moves: ValidMoves = moveDeltas\r\n      .map((rd) => this.getMoveAtPosition(from, rd, 0))\r\n      .filter(this.isStandardMove)\r\n      .filter((x) => x.move === \"Move\" || x.move === \"PawnPush\");\r\n\r\n    const captures: ValidMoves = captureDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove)\r\n      .filter((x) => x.move === \"Capture\" || x.move === \"CaptureEnPassant\");\r\n\r\n    return [...moves, ...captures];\r\n  }\r\n}\r\n\r\nexport class KingValidator extends BaseValidator {\r\n  getPotentialMoves(from: Position): ValidMoves {\r\n    let validMoves: ValidMoves = [];\r\n    const moveDeltas = [\r\n      [1, 1],\r\n      [0, 1],\r\n      [1, 0],\r\n      [-1, 0],\r\n      [-1, -1],\r\n      [0, -1],\r\n      [-1, 1],\r\n      [1, -1],\r\n    ];\r\n\r\n    const file = FileArray.indexOf(from.file);\r\n    const rank = from.rank;\r\n\r\n    validMoves = moveDeltas\r\n      .map(([rd, fd]) => this.getMoveAtPosition(from, rd, fd))\r\n      .filter(this.isStandardMove);\r\n\r\n    if (this.canCastle(\"SHORT\"))\r\n      validMoves.push({\r\n        move: \"Castle\",\r\n        type: \"SHORT\",\r\n        colour: this.piece.colour,\r\n        rank: rank,\r\n        file: FileArray[file + 2],\r\n      });\r\n\r\n    if (this.canCastle(\"LONG\"))\r\n      validMoves.push({\r\n        move: \"Castle\",\r\n        type: \"LONG\",\r\n        colour: this.piece.colour,\r\n        rank: rank,\r\n        file: FileArray[file - 2],\r\n      });\r\n\r\n    return validMoves;\r\n  }\r\n\r\n  private castlingDeltas = (type: \"SHORT\" | \"LONG\") =>\r\n    type === \"SHORT\" ? [0, 1, 2] : [0, -1, -2];\r\n\r\n  private canCastle(type: \"SHORT\" | \"LONG\") {\r\n    const moveDeltas = this.castlingDeltas(type);\r\n    const rookFile = type === \"SHORT\" ? \"h\" : \"a\";\r\n    const kingRank = this.piece.colour === \"WHITE\" ? 1 : 8;\r\n\r\n    let side = type === \"SHORT\" ? \"k\" : \"q\";\r\n    side = this.piece.colour === \"WHITE\" ? side.toUpperCase() : side;\r\n\r\n    if (this.board.pieceMoved(this.piece)) return false;\r\n\r\n    const rook = this.board.getPieceAt({ rank: kingRank, file: rookFile });\r\n    if (!(rook.piece && !this.board.pieceMoved(rook.piece))) return false;\r\n\r\n    return moveDeltas.every((fileDelta) => {\r\n      const newFile = 4 + fileDelta;\r\n\r\n      const pieceAt = this.board.getPieceAt({\r\n        file: FileArray[newFile],\r\n        rank: kingRank,\r\n      });\r\n\r\n      if (pieceAt.piece === null || fileDelta === 0) {\r\n        const clone = this.board.clone();\r\n        clone.move(\r\n          { rank: kingRank, file: \"e\" },\r\n          { rank: kingRank, file: FileArray[newFile] }\r\n        );\r\n\r\n        return !getMoveValidator(this.piece, clone).isKingInCheck(\r\n          this.piece.colour\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nexport const getMoveValidator = (\r\n  piece: IPiece,\r\n  board: Board,\r\n  enPessantTarget: Position | undefined = undefined,\r\n  castlingRights: CastlingRights = CastlingRights.None\r\n): BaseValidator => {\r\n  switch (piece.pieceType) {\r\n    case \"BISHOP\":\r\n      return new BishopValidator(piece, board, enPessantTarget, castlingRights);\r\n    case \"KING\":\r\n      return new KingValidator(piece, board, enPessantTarget, castlingRights);\r\n    case \"KNIGHT\":\r\n      return new KnightValidator(piece, board, enPessantTarget, castlingRights);\r\n    case \"PAWN\":\r\n      return new PawnValidator(piece, board, enPessantTarget, castlingRights);\r\n    case \"QUEEN\":\r\n      return new QueenValidator(piece, board, enPessantTarget, castlingRights);\r\n    case \"ROOK\":\r\n      return new RookValidator(piece, board, enPessantTarget, castlingRights);\r\n  }\r\n};\r\n","import { PieceColour, PieceType } from \"./types\";\r\n\r\nexport interface IPiece {\r\n  pieceType: PieceType;\r\n  colour: PieceColour;\r\n}\r\n\r\nabstract class BasePiece implements IPiece {\r\n  abstract pieceType: PieceType;\r\n  colour: PieceColour;\r\n\r\n  constructor(colour: PieceColour) {\r\n    this.colour = colour;\r\n  }\r\n}\r\n\r\nexport class Bishop extends BasePiece {\r\n  pieceType = \"BISHOP\" as PieceType;\r\n}\r\n\r\nexport class King extends BasePiece {\r\n  pieceType = \"KING\" as PieceType;\r\n}\r\n\r\nexport class Knight extends BasePiece {\r\n  pieceType = \"KNIGHT\" as PieceType;\r\n}\r\n\r\nexport class Queen extends BasePiece {\r\n  pieceType = \"QUEEN\" as PieceType;\r\n}\r\n\r\nexport class Rook extends BasePiece {\r\n  pieceType = \"ROOK\" as PieceType;\r\n}\r\n\r\nexport class Pawn extends BasePiece {\r\n  pieceType = \"PAWN\" as PieceType;\r\n}\r\n","import { IPiece } from \"./pieces\";\r\nimport { Empty, Rank, File } from \"./types\";\r\n\r\nexport class Square {\r\n  private _piece: IPiece | Empty;\r\n\r\n  public get piece(): IPiece | Empty {\r\n    return this._piece;\r\n  }\r\n\r\n  rank: Rank;\r\n  file: File;\r\n\r\n  constructor(rank: Rank, file: File, piece: IPiece | Empty = null) {\r\n    this.rank = rank;\r\n    this.file = file;\r\n    this._piece = piece;\r\n  }\r\n\r\n  place(piece: IPiece) {\r\n    this._piece = piece;\r\n  }\r\n\r\n  remove() {\r\n    this._piece = null;\r\n  }\r\n\r\n  clone() {\r\n    return new Square(this.rank, this.file, this.piece);\r\n  }\r\n}\r\n","import React, { useReducer, createContext, Dispatch } from \"react\";\r\nimport { Board } from \"../engine/board\";\r\nimport { Game } from \"../engine/game\";\r\nimport { File, GameState, Rank } from \"../engine/types\";\r\n\r\nconst game = new Game();\r\nconst initialState: State = {\r\n  board: game.board,\r\n  state: game.state,\r\n};\r\n\r\nconst GameContext = createContext<[State, Dispatch<Action>]>([\r\n  initialState,\r\n  () => null,\r\n]);\r\n\r\ntype State = {\r\n  activePiece?: ActivePiece;\r\n  threatenedSquare?: { rank: Rank; file: File };\r\n  board: Board;\r\n  state: GameState;\r\n};\r\n\r\ntype ActivePiece = {\r\n  rank: Rank;\r\n  file: File;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype Action =\r\n  | { type: \"PIECE_HOVER\"; payload: { x: number; y: number } }\r\n  | {\r\n      type: \"PIECE_ACTIVATED\";\r\n      payload: { rank: Rank; file: File; x: number; y: number };\r\n    }\r\n  | {\r\n      type: \"SQUARE_ATTACKED\";\r\n      payload: { rank: Rank; file: File };\r\n    }\r\n  | { type: \"MOVE\" };\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"PIECE_HOVER\": {\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...state.activePiece,\r\n          x: action.payload.x,\r\n          y: action.payload.y,\r\n        },\r\n      };\r\n    }\r\n    case \"PIECE_ACTIVATED\":\r\n      return {\r\n        ...state,\r\n        activePiece: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"SQUARE_ATTACKED\":\r\n      return {\r\n        ...state,\r\n        threatenedSquare: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case \"MOVE\": {\r\n      if (!state.threatenedSquare) throw new Error(\"state is corrupted\");\r\n      if (!state.activePiece) throw new Error(\"state is corrupted\");\r\n\r\n      const from = {\r\n        file: state.activePiece.file,\r\n        rank: state.activePiece.rank,\r\n      };\r\n\r\n      const to = {\r\n        file: state.threatenedSquare.file,\r\n        rank: state.threatenedSquare.rank,\r\n      };\r\n\r\n      game.move(from, to);\r\n\r\n      return {\r\n        board: game.board,\r\n        state: game.state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\ntype props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst GameContextProvider = ({ children }: props) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GameContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport {\r\n  GameContextProvider as DraggableContextProvider,\r\n  GameContext as DraggableContext,\r\n};\r\n","import { FileArray, RankArray } from \"./board\";\r\nimport { Bishop, IPiece, King, Knight, Pawn, Queen, Rook } from \"./pieces\";\r\n\r\nimport { Square } from \"./square\";\r\nimport { PiecePosition, Rank, File } from \"./types\";\r\n\r\nexport const buildBoard = (): Square[] => {\r\n  const board = RankArray.flatMap((rank) =>\r\n    FileArray.map((file) => new Square(rank, file))\r\n  );\r\n\r\n  const placeAt = (rank: Rank, file: File, piece: IPiece) => {\r\n    const sqaure = board.find((x) => x.file === file && x.rank === rank);\r\n    sqaure?.place(piece);\r\n  };\r\n\r\n  placeAt(1, \"a\", new Rook(\"WHITE\"));\r\n  placeAt(1, \"b\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"c\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"d\", new Queen(\"WHITE\"));\r\n  placeAt(1, \"e\", new King(\"WHITE\"));\r\n  placeAt(1, \"f\", new Bishop(\"WHITE\"));\r\n  placeAt(1, \"g\", new Knight(\"WHITE\"));\r\n  placeAt(1, \"h\", new Rook(\"WHITE\"));\r\n\r\n  placeAt(2, \"a\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"b\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"c\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"d\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"e\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"f\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"g\", new Pawn(\"WHITE\"));\r\n  placeAt(2, \"h\", new Pawn(\"WHITE\"));\r\n\r\n  placeAt(7, \"a\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"b\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"c\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"d\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"e\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"f\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"g\", new Pawn(\"BLACK\"));\r\n  placeAt(7, \"h\", new Pawn(\"BLACK\"));\r\n\r\n  placeAt(8, \"a\", new Rook(\"BLACK\"));\r\n  placeAt(8, \"b\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"c\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"d\", new Queen(\"BLACK\"));\r\n  placeAt(8, \"e\", new King(\"BLACK\"));\r\n  placeAt(8, \"f\", new Bishop(\"BLACK\"));\r\n  placeAt(8, \"g\", new Knight(\"BLACK\"));\r\n  placeAt(8, \"h\", new Rook(\"BLACK\"));\r\n\r\n  return board;\r\n};\r\n\r\nconst InitialBoard: PiecePosition[] = [\r\n  {\r\n    position: { rank: 1, file: \"a\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"b\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"c\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"d\" },\r\n    piece: new Queen(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"e\" },\r\n    piece: new King(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"f\" },\r\n    piece: new Bishop(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"g\" },\r\n    piece: new Knight(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 1, file: \"h\" },\r\n    piece: new Rook(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"a\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"b\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"c\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"d\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"e\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"f\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"g\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 2, file: \"h\" },\r\n    piece: new Pawn(\"WHITE\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"a\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"b\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"c\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"d\" },\r\n    piece: new Queen(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"e\" },\r\n    piece: new King(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"f\" },\r\n    piece: new Bishop(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"g\" },\r\n    piece: new Knight(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 8, file: \"h\" },\r\n    piece: new Rook(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"a\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"b\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"c\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"d\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"e\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"f\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"g\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n  {\r\n    position: { rank: 7, file: \"h\" },\r\n    piece: new Pawn(\"BLACK\"),\r\n  },\r\n];\r\n\r\nexport default InitialBoard;\r\n","import { getMoveValidator } from \"./basePiece\";\r\nimport { Board } from \"./board\";\r\nimport { buildBoard } from \"./initial-board\";\r\nimport { IPiece } from \"./pieces\";\r\nimport {\r\n  CastlingRights,\r\n  File,\r\n  GameState,\r\n  PieceColour,\r\n  Position,\r\n  Rank,\r\n} from \"./types\";\r\n\r\nexport class Game {\r\n  private _board: Board;\r\n\r\n  public get board(): Board {\r\n    return this._board;\r\n  }\r\n\r\n  constructor() {\r\n    this._board = new Board(buildBoard());\r\n    this._state = \"WhiteMove\";\r\n    this._fullMoves = 1;\r\n    this._halfMoves = 0;\r\n    this._castlingAbility =\r\n      CastlingRights.K | CastlingRights.Q | CastlingRights.k | CastlingRights.q;\r\n  }\r\n\r\n  // Full moves, used in FEN notation\r\n  private _fullMoves: number;\r\n\r\n  // Hald moves, used in FEN notation\r\n  private _halfMoves: number;\r\n\r\n  // Game Engine knows about en-Pessant\r\n  private get _enPessantFen(): string {\r\n    return this._enPessantSquare\r\n      ? `${this._enPessantSquare.file}${this._enPessantSquare.rank}`\r\n      : \"-\";\r\n  }\r\n\r\n  private _enPessantSquare: Position | undefined;\r\n\r\n  private _castlingAbility: CastlingRights;\r\n\r\n  private _state: GameState;\r\n\r\n  public get state(): GameState {\r\n    return this._state;\r\n  }\r\n\r\n  move(from: Position, to: Position) {\r\n    if (this._state !== \"BlackMove\" && this._state !== \"WhiteMove\") {\r\n      return;\r\n    }\r\n\r\n    const square = this._board.getPieceAt(from);\r\n\r\n    if (this._state === \"BlackMove\" && square.piece?.colour === \"WHITE\") {\r\n      return;\r\n    }\r\n\r\n    if (this._state === \"WhiteMove\" && square.piece?.colour === \"BLACK\") {\r\n      return;\r\n    }\r\n\r\n    if (!square.piece) throw new Error(\"No Piece to move\");\r\n\r\n    const piece = square.piece;\r\n    const move = getMoveValidator(\r\n      square.piece,\r\n      this._board,\r\n      this._enPessantSquare,\r\n      this._castlingAbility\r\n    ).canMove(from, to);\r\n\r\n    switch (move.move) {\r\n      case \"INVALID\":\r\n        return;\r\n      case \"Move\":\r\n      case \"PawnPush\":\r\n      case \"CaptureEnPassant\":\r\n      case \"Capture\": {\r\n        if (move.move === \"CaptureEnPassant\") {\r\n          if (!this._enPessantSquare) throw new Error(\"no enPassant\");\r\n          this._board.remove({\r\n            rank: from.rank,\r\n            file: this._enPessantSquare.file,\r\n          });\r\n        }\r\n        this._board.move(from, to);\r\n\r\n        if (move.move === \"PawnPush\") {\r\n          let r = to.rank;\r\n          if (piece.colour === \"WHITE\") {\r\n            r -= 1;\r\n          } else {\r\n            r += 1;\r\n          }\r\n          this._enPessantSquare = { rank: r as Rank, file: move.file };\r\n        } else {\r\n          this._enPessantSquare = undefined;\r\n        }\r\n\r\n        if (piece.pieceType === \"KING\") {\r\n          if (piece.colour === \"WHITE\") {\r\n            this._castlingAbility &= ~CastlingRights.K;\r\n            this._castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n          if (piece.colour === \"BLACK\") {\r\n            this._castlingAbility &= ~CastlingRights.k;\r\n            this._castlingAbility &= ~CastlingRights.q;\r\n          }\r\n        }\r\n\r\n        if (piece.pieceType === \"ROOK\") {\r\n          if (from.rank === 1 && from.file === \"a\") {\r\n            this._castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n\r\n          if (from.rank === 1 && from.file === \"h\") {\r\n            this._castlingAbility &= ~CastlingRights.K;\r\n          }\r\n\r\n          if (from.rank === 8 && from.file === \"a\") {\r\n            this._castlingAbility &= ~CastlingRights.q;\r\n          }\r\n\r\n          if (from.rank === 8 && from.file === \"h\") {\r\n            this._castlingAbility &= ~CastlingRights.k;\r\n          }\r\n        }\r\n\r\n        if (move.move === \"Capture\") {\r\n          if (to.rank === 1 && to.file === \"a\") {\r\n            this._castlingAbility &= ~CastlingRights.Q;\r\n          }\r\n\r\n          if (to.rank === 1 && to.file === \"h\") {\r\n            this._castlingAbility &= ~CastlingRights.K;\r\n          }\r\n\r\n          if (to.rank === 8 && to.file === \"a\") {\r\n            this._castlingAbility &= ~CastlingRights.q;\r\n          }\r\n\r\n          if (to.rank === 8 && to.file === \"h\") {\r\n            this._castlingAbility &= ~CastlingRights.k;\r\n          }\r\n        }\r\n\r\n        //FEN stuff\r\n        if (\r\n          move.move === \"Capture\" ||\r\n          move.move === \"CaptureEnPassant\" ||\r\n          move.move === \"PawnPush\" ||\r\n          (move.move === \"Move\" && piece.pieceType === \"PAWN\")\r\n        ) {\r\n          this._halfMoves = 0;\r\n        } else {\r\n          this._halfMoves += 1;\r\n        }\r\n\r\n        break;\r\n      }\r\n      case \"Castle\": {\r\n        this._board.move(from, to);\r\n\r\n        const rookFrom = {\r\n          rank: square.rank,\r\n          file: move.type === \"SHORT\" ? \"h\" : (\"a\" as File),\r\n        };\r\n\r\n        const rookTo = {\r\n          rank: square.rank,\r\n          file: move.type === \"SHORT\" ? \"f\" : (\"d\" as File),\r\n        };\r\n\r\n        this._board.move(rookFrom, rookTo);\r\n        if (piece.colour === \"WHITE\") {\r\n          this._castlingAbility &= ~CastlingRights.K;\r\n          this._castlingAbility &= ~CastlingRights.Q;\r\n        }\r\n        if (piece.colour === \"BLACK\") {\r\n          this._castlingAbility &= ~CastlingRights.k;\r\n          this._castlingAbility &= ~CastlingRights.q;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.changeState();\r\n    console.log(this.getFenString());\r\n  }\r\n\r\n  private getFenString(): string {\r\n    if (this._state === \"BlackMove\" || this._state === \"WhiteMove\") {\r\n      return `${this._board.fenPlacement} ${\r\n        this._state === \"WhiteMove\" ? \"w\" : \"b\"\r\n      } ${this.castlingAbilityString()} ${this._enPessantFen} ${\r\n        this._halfMoves\r\n      } ${this._fullMoves}`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  //CatlingRights.K | CatlingRights.Q | CatlingRights.k | CatlingRights.q;\r\n  private castlingAbilityString(): string {\r\n    let str = \"\";\r\n    if (this._castlingAbility & CastlingRights.K) str += \"K\";\r\n    if (this._castlingAbility & CastlingRights.Q) str += \"Q\";\r\n    if (this._castlingAbility & CastlingRights.k) str += \"k\";\r\n    if (this._castlingAbility & CastlingRights.q) str += \"q\";\r\n\r\n    return str === \"\" ? \"-\" : str;\r\n  }\r\n\r\n  private checkMate(colour: PieceColour) {\r\n    const king = this._board.getKing(colour);\r\n    const validator = getMoveValidator(king.piece as IPiece, this._board);\r\n    const kingInCheck = validator.isKingInCheck(colour);\r\n\r\n    if (kingInCheck) {\r\n      const pieces = this._board.getPieces(colour).flatMap((x) => {\r\n        const validator = getMoveValidator(x.piece as IPiece, this._board);\r\n        return validator.moves({ rank: x.rank, file: x.file });\r\n      });\r\n      return pieces.length === 0;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private staleMate(colour: PieceColour) {\r\n    const pieces = this._board.getPieces(colour);\r\n    const hasMoves = pieces.flatMap((x) => {\r\n      const validator = getMoveValidator(x.piece as IPiece, this._board);\r\n      return validator.moves({ rank: x.rank, file: x.file });\r\n    });\r\n\r\n    return hasMoves.length === 0;\r\n  }\r\n\r\n  private changeState() {\r\n    switch (this._state) {\r\n      case \"BlackWin\":\r\n      case \"StaleMate\":\r\n      case \"WhiteWin\":\r\n      case \"DrawRepition3\":\r\n      case \"DrawRepition5\":\r\n        break;\r\n      case \"WhiteMove\": {\r\n        if (this.checkMate(\"BLACK\")) {\r\n          this._state = \"WhiteWin\";\r\n        } else if (this.staleMate(\"BLACK\")) {\r\n          this._state = \"StaleMate\";\r\n        } else {\r\n          this._state = \"BlackMove\";\r\n        }\r\n        break;\r\n      }\r\n      case \"BlackMove\": {\r\n        if (this.checkMate(\"WHITE\")) {\r\n          this._state = \"BlackWin\";\r\n        } else if (this.staleMate(\"WHITE\")) {\r\n          this._state = \"StaleMate\";\r\n        } else {\r\n          this._state = \"WhiteMove\";\r\n        }\r\n        this._fullMoves += 1;\r\n        break;\r\n      }\r\n    }\r\n    console.log(this._state);\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { Draggable } from \"./components/draggable\";\r\nimport { Black, White } from \"./components/classic_pieces\";\r\nimport styles from \"./App.module.css\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport {\r\n  DraggableContext,\r\n  DraggableContextProvider,\r\n} from \"./components/game-context\";\r\nimport { useContext } from \"react\";\r\nimport { File, GameState, Rank } from \"./engine/types\";\r\nimport {\r\n  FileArray,\r\n  isLightSquare,\r\n  RankArray,\r\n  Board as GameBoard,\r\n} from \"./engine/board\";\r\n\r\nconst getPieceAt = (rank: Rank, file: File, currentBoard: GameBoard) => {\r\n  const square = currentBoard.getPieceAt({ rank, file });\r\n\r\n  if (square.piece) {\r\n    const set = square.piece.colour === \"WHITE\" ? White : Black;\r\n    switch (square.piece.pieceType) {\r\n      case \"BISHOP\":\r\n        return set.Bishop;\r\n      case \"KING\":\r\n        return set.King;\r\n      case \"KNIGHT\":\r\n        return set.Knight;\r\n      case \"PAWN\":\r\n        return set.Pawn;\r\n      case \"QUEEN\":\r\n        return set.Queen;\r\n      case \"ROOK\":\r\n        return set.Rook;\r\n    }\r\n  }\r\n};\r\n\r\ntype gridProps = {\r\n  rank: Rank;\r\n  file: File;\r\n  bound: DOMRect | undefined;\r\n};\r\n\r\nconst GridPosition = ({ rank, file, bound }: gridProps) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [state, dispatch] = useContext(DraggableContext);\r\n  const [inBound, setInBound] = useState(false);\r\n  const isLight = isLightSquare(rank, file);\r\n  const Piece = getPieceAt(rank, file, state.board);\r\n\r\n  useEffect(() => {\r\n    const bound = ref.current?.getBoundingClientRect();\r\n\r\n    if (bound) {\r\n      if (\r\n        state.activePiece &&\r\n        state.activePiece.x >= bound?.left &&\r\n        state.activePiece.x < bound?.right &&\r\n        state.activePiece.y >= bound.top &&\r\n        state.activePiece.y < bound.bottom\r\n      ) {\r\n        setInBound(true);\r\n      } else {\r\n        setInBound(false);\r\n      }\r\n    }\r\n  }, [state, rank, file]);\r\n\r\n  useEffect(() => {\r\n    if (inBound) {\r\n      dispatch({ type: \"SQUARE_ATTACKED\", payload: { rank, file } });\r\n    }\r\n  }, [inBound, dispatch, file, rank]);\r\n\r\n  const pieceHover = useCallback(\r\n    (x, y) => dispatch({ type: \"PIECE_HOVER\", payload: { x, y } }),\r\n    [dispatch]\r\n  );\r\n\r\n  const pieceActivated = useCallback(\r\n    (x, y) =>\r\n      dispatch({ type: \"PIECE_ACTIVATED\", payload: { rank, file, x, y } }),\r\n    [dispatch, rank, file]\r\n  );\r\n\r\n  const move = useCallback(() => dispatch({ type: \"MOVE\" }), [dispatch]);\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.chessSquare} ${isLight ? styles.light : \"\"} ${\r\n        inBound ? styles.highlighted : \"\"\r\n      } ${styles[`rank_${rank}`]} ${styles[`file_${file}`]}`}\r\n      //@ts-ignore\r\n      rank={rank}\r\n      file={file}\r\n      key={rank + file}\r\n      ref={ref}\r\n    >\r\n      {Piece && (\r\n        <Draggable\r\n          boundingBox={bound}\r\n          onMouseUp={move}\r\n          onMouseMove={pieceHover}\r\n          onMouseDown={pieceActivated}\r\n        >\r\n          <Piece />\r\n        </Draggable>\r\n      )}\r\n      {rank === 1 && <div className={styles.rank}>{file}</div>}\r\n      {file === \"a\" && <div className={styles.file}>{rank}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst gameStateAsString = (state: GameState) => {\r\n  switch (state) {\r\n    case \"BlackMove\":\r\n      return \"Black to move\";\r\n    case \"BlackWin\":\r\n      return \"Black Won!\";\r\n    case \"StaleMate\":\r\n      return \"Stalemate\";\r\n    case \"WhiteMove\":\r\n      return \"White to move\";\r\n    case \"WhiteWin\":\r\n      return \"White Won!\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Board = () => {\r\n  const chessGrid = useRef<HTMLDivElement>(null);\r\n  const [bound, setBound] = useState<DOMRect>();\r\n  const [state] = useContext(DraggableContext);\r\n\r\n  const onWindowResize = useCallback(() => {\r\n    setBound(chessGrid.current?.getBoundingClientRect());\r\n  }, []);\r\n\r\n  useOnWindowResize(onWindowResize);\r\n\r\n  useEffect(() => {\r\n    setBound(chessGrid.current?.getBoundingClientRect());\r\n  }, [chessGrid]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div ref={chessGrid} className={styles.chessGrid}>\r\n        {RankArray.map((r) =>\r\n          FileArray.map((f) => (\r\n            <GridPosition rank={r} file={f} bound={bound} key={r + f} />\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className={styles.infoPane}>{gameStateAsString(state.state)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <DraggableContextProvider>\r\n      <Board />\r\n    </DraggableContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst useOnWindowResize = (action: Function) => {\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      action();\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [action]);\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Hag2\",\"chessGrid\":\"App_chessGrid__3cPOC\",\"chessSquare\":\"App_chessSquare__SDQaO\",\"light\":\"App_light__3AKuB\",\"highlighted\":\"App_highlighted__19TOk\",\"rank\":\"App_rank__3KL7s\",\"file\":\"App_file__3wQ0V\",\"infoPane\":\"App_infoPane__11ld2\"};"],"sourceRoot":""}